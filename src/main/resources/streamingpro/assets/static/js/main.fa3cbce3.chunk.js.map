{"version":3,"sources":["backend_service/Dicts.js","backend_service/backend/Backend.js","backend_service/ActionProxy.js","v1/analysis/common/actions/SetStateAction.js","backend_service/RemoteAction.js","serviceWorker.js","v1/app_console/actions/SwitchAction.js","v1/UIMaker.js","v1/app_console/actions/CheckLoginedAction.js","v1/app_console/actions/AppConsoleReducer.js","v1/app_console/pages/ConsoleHeader.js","v1/app_setup/actions/app/RegisterAction.js","v1/app_console/login_register/actions/LoginAction.js","v1/app_console/login_register/actions/LoginRegisterReducer.js","v1/AlertBox.js","v1/app_console/login_register/Register.js","v1/app_console/login_register/Login.js","components/MLSQLQueryDisplay.js","service/BackendConfig.js","service/HTTPMethod.js","components/upload/UploadDropZone.js","components/dash/MLSQLScatterChart.js","components/dash/MLSQLLineChart.js","components/dash/MLSQLStream.js","components/dash/MLSQLHTML.js","v1/comp_op/EditorOp.js","v1/comp_op/ConsoleOp.js","v1/service/EngineService.js","v1/async_execute/QueryHistory.js","v1/async_execute/ResourceProgress.js","components/query/MLSQLDash.js","v1/service/CodeIntellegence.js","user/MLSQLAuth.js","service/MLSQLAPI.js","components/et/ButtonToCommand.js","v1/async_execute/AsyncExecuter.js","v1/async_execute/JobProgress.js","v1/app_console/pages/EngineSelectComp.js","components/MLSQLAceEditor.js","common/tool.js","components/notebook/CodeBlock.js","components/notebook/CommandGroup.js","components/notebook/service/Engine.js","components/notebook/DataTable.js","components/notebook/DisplayGroup.js","components/notebook/ExecuteUnit.js","components/notebook/NoteBook.js","common/LogMonitor.js","components/python/PythonACE.js","components/python/PythonEditor.js","components/editor/TabEditor.js","components/et/ETLoadParams.js","common/Tools.js","components/et/ETPopLoad.js","components/et/ETPopAlgorithm.js","components/et/ETPopSave.js","components/et/ETBaseTool.js","components/et/ETPopTool.js","components/et/ETPopDownload.js","components/et/ETPopScriptUDF.js","components/et/ETExample.js","components/et/ETRegister.js","components/et/ETStringIndex.js","components/et/ETDownloadFile.js","components/et/ETStreamProgress.js","components/et/ETPop.js","components/et/MLSQLETQuick.js","v1/detla_lake/DeltaLakeTree.js","v1/file_system/FileSystemTree.js","v1/analysis/common/CommonHandlers.js","v1/script_console/actions/OpenScriptFileAction.js","v1/script_console/actions/CreateFileAction.js","v1/script_console/actions/ExpandAction.js","v1/script_console/actions/DeleteFileAction.js","v1/script_console/actions/PublishAnalysisPluginAction.js","v1/script_console/actions/SharePublicAction.js","v1/script_console/actions/ScriptTreeReducer.js","service/MLSQLTreeBuilder.js","v1/SpinBox.js","v1/script_console/pages/ContextMenu.js","v1/script_console/ScriptTree.js","v1/async_execute/LeftTreePane.js","components/MLSQLQueryApp.js","common/mixin.js","v1/analysis/NewSessionOp.js","v1/analysis/AFileSystemTree.js","v1/analysis/ADeltaLakeTree.js","v1/analysis/workshop_tables/actions/LoadAction.js","v1/analysis/workshop_tables/actions/OpenAction.js","v1/analysis/workshop_tables/actions/DeleteAction.js","v1/analysis/workshop_tables/actions/ExportToAction.js","v1/analysis/workshop_tables/actions/WorkshopTablesReducer.js","v1/analysis/workshop_tables/WorkshopTables.js","v1/analysis/hive/actions/LoadAction.js","v1/analysis/hive/actions/OpenAction.js","v1/analysis/hive/actions/SearchAction.js","v1/analysis/hive/actions/HiveTablesReducer.js","v1/analysis/hive/HiveTables.js","v1/analysis/hive/pages/usePartitionSelect.js","v1/analysis/datasource/actions/OpenMySQLTableAction.js","v1/analysis/datasource/actions/MysqlTreeReducer.js","v1/analysis/common/pages/useIntegerStep.js","v1/analysis/datasource/pages/useMySQLPartition.js","v1/analysis/datasource/pages/MysqlTree.js","v1/analysis/leftview.js","v1/analysis/WorkshopOp.js","v1/analysis/WorkshopAutoSql.js","v1/analysis/ApplyOrSave.js","v1/analysis/commonops/StationCommonOp.js","v1/analysis/join/SelectJoinField.js","v1/analysis/project/SelectFields.js","v1/analysis/join/SelectProjectFields.js","v1/analysis/join/SelectJoinTable.js","v1/analysis/join/JoinStation.js","v1/analysis/ColumnOperate.js","v1/analysis/agg/AggStationOp.js","v1/analysis/FuncDesc.js","v1/analysis/ApplyFuncToField.js","v1/analysis/agg/AggStation.js","v1/analysis/project/RenameFields.js","v1/analysis/project/FunctionField.js","v1/analysis/project/ProjectStationSQLOp.js","v1/analysis/common/actions/RemoveFieldAction.js","v1/analysis/common/actions/AddFieldAction.js","v1/analysis/common/ApplyActionUtils.js","v1/analysis/project/actions/CastAction.js","v1/analysis/project/actions/CastFieldsReducer.js","v1/apply_save_rollback/actions/RollbackAction.js","v1/apply_save_rollback/actions/SaveAction.js","v1/apply_save_rollback/actions/ApplySaveRollbackReducer.js","v1/apply_save_rollback/ApplySaveRollback.js","v1/analysis/project/CastFields.js","v1/analysis/common/CommonActionNames.js","v1/analysis/project/AddJsonField.js","v1/analysis/project/actions/AddFieldAction.js","v1/analysis/project/actions/RemoveFieldAction.js","v1/analysis/project/actions/JsonFieldsApplyAction.js","v1/analysis/project/actions/JsonFieldsReducer.js","v1/analysis/project/JsonFields.js","v1/analysis/project/ProjectStation.js","v1/analysis/filter/FilterCondition.js","v1/analysis/filter/Compare.js","v1/analysis/filter/GroupGroup.js","v1/analysis/filter/ApplyGroup.js","v1/analysis/filter/FilterStation.js","v1/analysis/order/actions/OrderApplyAction.js","v1/analysis/order/actions/OrderStationReducer.js","v1/analysis/order/OrderStation.js","v1/analysis/limit/actions/LimitApplyAction.js","v1/analysis/limit/actions/LimitStationReducer.js","v1/analysis/limit/LimitStation.js","v1/analysis/window/actions/BuildGroupAction.js","v1/analysis/window/actions/BuildOrderAction.js","v1/analysis/window/actions/BuildRowWindowsAction.js","v1/analysis/window/actions/WindowApplyAction.js","v1/analysis/window/actions/WindowStationReducer.js","v1/analysis/common/pages/SelectFieldsToOperate.js","v1/analysis/window/pages/BuildGroup.js","v1/analysis/window/pages/SetupGroupRowOrder.js","v1/analysis/window/pages/BuildWindowOnGroup.js","v1/analysis/common/pages/ApplyFunc.js","v1/analysis/window/pages/ApplyFunction.js","v1/analysis/window/WindowStation.js","v1/analysis/dash/actions/DashStationReducer.js","v1/analysis/dash/DashStation.js","v1/analysis/dash/pages/useDataConfig.js","v1/analysis/dash/pages/useDashConfig.js","v1/analysis/common/actions/ApplyAction.js","v1/analysis/union/actions/UnionApplyAction.tsx","v1/analysis/union/actions/UnionStationReducer.js","v1/analysis/union/SelectUnionTable.tsx","v1/analysis/union/UnionStation.tsx","v1/analysis/pivot/actions/PivotApplyAction.tsx","v1/analysis/pivot/actions/PivotStationReducer.js","v1/analysis/pivot/useAggCheck.tsx","v1/analysis/pivot/PivotStation.tsx","v1/analysis/plugin/actions/AnalysisPluginStationReducer.js","common/SQLAnalysisUtils.tsx","common/useAnalysisPlugin.tsx","v1/analysis/plugin/AnalysisPluginForm.tsx","v1/analysis/plugin/AnalysisPluginStation.tsx","v1/analysis/OperateStation.js","v1/analysis/WorkshopMessageOp.js","v1/analysis/WorkshopUIOp.js","v1/analysis/real_time_view_table/SearchOp.js","v1/analysis/real_time_view_table/DropdownMenuUI.js","v1/analysis/RealTimeViewTable.js","v1/analysis/OperateStationWrapper.js","v1/analysis/RealTimeTableWrapper.js","v1/analysis/workshop.js","v1/app_console/admin/actions/LRAction.js","v1/app_console/admin/actions/SetStateAction.js","v1/app_console/admin/actions/AdminSettingReducer.js","v1/app_console/admin/pages/LRSettings.js","v1/analysis/common/CrudTable.js","v1/app_console/admin/pages/Engines.js","v1/app_console/admin/pages/ChangePassword.js","v1/app_console/admin/AdminSetting.js","v1/analysis/common/pages/useUserConfig.js","v1/app_console/admin/pages/DefaultBackend.js","v1/app_console/admin/pages/ApplyTimeout.js","v1/app_console/admin/pages/Teams.js","v1/analysis/datasource/pages/MySQL.js","v1/analysis/datasource/pages/ListMySQL.js","v1/app_console/pages/actions/SetupEngineFromCloudReducer.js","v1/app_console/pages/UseEngineCreateLoading.tsx","v1/app_console/pages/SetupEngineFromCloud.tsx","v1/app_console/pages/DeleteCloudEngine.tsx","v1/app_console/pages/EngineLog.tsx","v1/app_console/pages/RegisterEngine.tsx","v1/app_console/admin/pages/Settings.js","v1/app_console/pages/Doc.tsx","v1/app_console/pages/EgnineUI.tsx","v1/app/indexmanager/IndexerList.tsx","v1/app/indexmanager/CreateIndexer.tsx","v1/app/IndexManager.tsx","components/script_plugins/ResultView.js","components/script_plugins/ScriptPluginView.js","components/script_plugins/MainPage.js","components/script_plugins/MLSQLScriptPluginsApp.js","v1/app_console/AppConsole.js","v1/app_setup/actions/app/AddEngineAction.js","v1/app_setup/actions/app/SkipAddEngineAction.js","v1/app_setup/actions/app/AppSetupReducer.js","v1/app_setup/pages/StepUserPassword.js","v1/app_setup/pages/AddEngines.js","v1/app/actions/go.js","v1/app/actions/AppReducer.js","v1/app_setup/pages/Done.js","v1/app_setup/app_setup.js","locale/en_US.js","App.js","index.js","v1/ActionMaker.js","backend_service/backend/RestConst.js"],"names":["GlobalParamNames","USER_NAME","USER_ID","ADMIN_TOKEN","LOGIN_TOKEN","RestResponse","constructor","status","content","response","this","resp","Backend","url","fetch_config","BACKEND_URL","request","action","params","method","property","toUpperCase","userName","sessionStorage","getItem","formBody","encodedKey","encodeURIComponent","encodedValue","push","newurl","length","join","undefined","basic_config","timeout","headers","AccessToken","body","final_config","fetch","ok","text","error","json","ActionProxy","backend","get","RemoteAction","res","runScript","sql","jobName","backendTags","finalParams","owner","sessionPerUser","show_stack","skipAuth","tags","Object","assign","post","RUN","temp","Method","GET","POST","client","ActionMaker","buildHandler","a","data","SetStateActionHandler","handler","SetStateAction","JOB_LIST","JOB_DETAIL","JOB_KILL","SAVE_SCRIPT_FILE","ANALYSIS_TABLES","ANALYSIS_TABLE_INFO","ANALYSIS_SAVE","ANALYSIS_TABLE_DELETE","APP_INFO","APP_SAVE","REGISTER","LOGIN","LOGOUT","ENGINE_ADD","ENGINE_REGISTER","ENGINE_LIST","ENGINE_REMOVE","SCRIPT_FILE_LIST","SCRIPT_FILE_GET","SCRIPT_FILE_REMOVE","PLUGIN_LIST","PLUGIN_GET","ANALYSIS_PLUGIN_LIST","ANALYSIS_PLUGIN_GET","ANALYSIS_PLUGIN_PUBLISH","SCRIPT_SHARE_PUBLIC","USER_EXTRA","USER_CHANGE_PASSWORD","APPLY_GET","TEMA_LIST","DS_ADD","DS_LIST","DS_REMOVE","DS_MYSQL_DBS","DS_MYSQL_CONNECT","DS_MYSQL_COLUMN_INFO","CLOUD_CREATE_ENGINE","CLOUD_DELETE_ENGINE","CLOUD_ENGINE_STATUS","CLOUD_ENGINE_LIST","INDEXER_LIST","MYSQL_INDEXER_CREATE","INDEXER_REMOVE","Boolean","window","location","hostname","match","currentPage","removeItem","name","logined","SwitchActionHandler","SwitchAction","UIMaker","user","role","extraOption","token","setItem","JSON","stringify","Cookies","set","path","userStr","parse","e","formItemLayout","labelCol","xs","span","sm","wrapperCol","tailLayout","offset","__state","CheckLoginedActionHandler","CheckLoginedAction","AppConsoleActionNames","SWITCH","CHECK_LOGINED","AppConsoleHandlers","setState","AppConsoleReducer","state","type","SubMenu","Menu","ConsoleHeaderContext","React","createContext","ConsoleHeader","props","userLogined","isUserAdmin","appInfo","dispacher","useContext","AppConsoleContext","useState","current","setCurrent","setLogined","isAdmin","setIsAdmin","leave","setLeave","tempCurrent","useRef","useEffect","Provider","title","visible","onCancel","onOk","buildEvent","cancelText","okText","description","onClick","key","domEvent","preventDefault","stopPropagation","selectedKeys","mode","Item","style","fontSize","icon","LoginOutlined","id","SelectOutlined","enableConsole","HomeOutlined","AppstoreOutlined","SettingOutlined","MoreOutlined","LogoutOutlined","password","password2","msg","setupLogin","RegisterActionHandler","RegisterAction","LoginActionHandler","LoginAction","LoginRegisterActionNames","LoginRegisterHandlers","LoginRegisterReducer","AlertBoxW","styled","div","AlertBox","closable","message","RegisterContext","initState","Register","appConsoleDispacher","formLayout1","useReducerAsync","value","className","onFinish","values","label","rules","required","Password","htmlType","LoginContext","Login","ReactMarkdown","require","MLSQLQueryDisplay","super","setRender","keyColumn","config","render","isPrototypeOf","toString","substring","update","keys","basket","rows","self","forEach","item","dataIndex","index","new_item","columns","rowDoubleClick","row","event","view","enabled","disablePreview","tableStyle","onRow","onDoubleClick","dataSource","OkText","source","RUN_SCRIPT","Status","baseStyle","width","height","borderWidth","borderColor","borderStyle","borderRadius","activeStyle","backgroundColor","rejectStyle","fileListStyle","display","UploadDropzone","Component","onDrop","files","req","HTTP","file","attach","end","err","console","log","map","f","size","getDataTransferItems","evt","fromEvent","getRootProps","getInputProps","isDragActive","isDragAccept","isDragReject","acceptedFiles","rejectedFiles","styles","randomColor","generateColor","color","MLSQLThreeDimScatterChart","haveZ","hasOwnProperty","dataTypeToItems","reduce","x","y","z","dataType","prev","Map","_config","scatters","dataTypeConfig","fill","shape","xConfig","dataKey","yConfig","zConfig","margin","top","right","bottom","left","cursor","strokeDasharray","basicCheck","fun","isShouldRender","MLSQLLineChart","ys","stroke","MLSQLStream","renderStream","dataForRender","dataForRender2","jsonItem","moment","utc","timestamp","format","inputRowsPerSecond","processedRowsPerSecond","numInputRows","queryApp","parent","titleMap","componentDidMount","isStream","renderRawData","MLSQLHTML","MLSQLHTMLPanel","refresh","defaultSize","sandbox","srcDoc","frameBorder","scrolling","ref","ifr","EditorOp","consoleComp","inner","session","editor","setText","setValue","append","insert","getLength","column","insertAfterCursor","p","getCursorPosition","focus","comp","getText","getValue","getSelection","selectionRange","getSelectionRange","getTextRange","uuidv4","EngineService","block","executeMode","tableName","empty_res","currentJobIndex","totalJobs","jsonObj","progress","totalJob","res2","completedJobsNum","activeJobsNum","script","isFinish","totalCores","activeTasks","QueryHistory","toggleDetail","showDetail","toggleResponse","showResponse","cleanSQL","split","filter","line","includes","executeAgainStatus","defaultRender","record","currentTH","target","parentNode","num","cellIndex","field","whiteSpace","wordWrap","renderConfig","reason","t","cssStyle","loading","runJob","reload","killJob","processData","detailConsoleMessage","respDisplay","theme","overflow","_display","marginBottom","ResourceProgress","enter","exit","queryPanel","percent","resourceInfo","jobs","jobNum","maxWidth","Panel","Collapse","TabPane","Tabs","callback","MLSQLDash","PureComponent","isNormalXY","xYRender","renderDash","queryResData","onChange","header","defaultActiveKey","onTabClick","resourceProgressRef","tab","et","queryHistory","default","CodeIntellegence","lineNum","columnNum","restClient","isDebug","queryType","wordList","MLSQLAuth","isLogin","MLSQLAPI","apiResponse","then","s","catch","m","request2","str","login","_sCallBack","_errorCallBack","registerOrLogin","logout","register","accessToken","serverError","ServerError","APIResponse","process","jsonErr","successCallback","serverErrorCallback","wow","fail","auth","Auth","jsonRes","background","async","newRunScript","okFun","failFun","new_request","resStatus","extractMsg","ButtonToCommand","makeSQL","AsyncExecuter","enterLoading","commandGroupRef","exitLoading","editorOp","getEditorOp","consoleOp","getConsoleOp","selectSQL","commandGroup","jobProgressRef","taskProgressRef","displayRef","dashRef","dash","logInfo","closed","prepare","measureTime","startTime","Date","getTime","saveFile","scriptId","run","engineName","intervalTimer","setInterval","monitorJob","monitorLog","cancelMonitor","clearInterval","jobInfo","setData","JobProgress","currentSQL","totalTime","currentJobGroup","executor","jobProgress2","activeJobs","groupId","makeProgress","setTimeout","finalTime","job","jobId","duration","total","numTasks","numSkippedTasks","numKilledTasks","skipped","failed","numFailedTasks","completed","numCompletedIndices","started","numActiveTasks","parseInt","runningStr","tasks","_cur","timer","toFixed","showSQL","position","textAlign","Minutes","formatValue","Seconds","EngineSelectComp","setLoading","engine","setEngine","proxy","useEngine","Option","Select","MLSQLAceEditor","aceEditorRef","executeSave","getAllText","getAceEditor","appendToEditor","messageBox","getMessageBoxAceEditor","appendLog","getDashBoard","getDisplay","etOver","etRef","eventName","getData","popName","processType","pathAlias","tableHidden","pathHidden","outputTableHidden","outputTableAlias","tableAlias","etPop","language","cancelQuery","bind","executeQuery","parentCallback","staticWordCompleter","getCompletions","pos","prefix","getSuggestList","word","desc","extra","caption","meta","completers","newValue","onDragOver","onResize","resize","showPrintMargin","showGutter","highlightActiveLine","editorProps","$blockScrolling","Infinity","setOptions","enableBasicAutocompletion","enableLiveAutocompletion","enableSnippets","showLineNumbers","tabSize","autoScrollEditorIntoView","CommandGroup","TaskProgress","mark","taskCompute","api","BackendConfig","condition","Error","assert","jsonArray","_jsonObj","numCompletedTasks","successPercent","resourceCompute","CodeBlock","originalEditor","changeValue","debounce","onChangeEditorValue","container","lineHeight","maxLines","initialCode","evtExecute","isExecute","executeUnit","execute","cancelExecute","notebook","onAddCell","onRemoveCell","disableDelete","LoadingOutlined","CaretRightOutlined","PlusCircleOutlined","disabled","MinusCircleOutlined","Engine","show_result","fail_result","code","DataTable","parseData","DisplayGroup","displayData","errorMsg","displayTableRef","displayDashRef","displayDash","displayError","displayTable","padding","ExecuteUnit","codeBlock","saveNoteBook","displayGroup","codeBlockIsEmpty","getCodeStr","CODE_SPLITTER","NoteBook","excuteList","v","handleChangeEditorValue","cell","newList","cloneDeep","findIndex","list","executeUnitRefs","executeUnits","addCell","removeCell","Math","max","splice","i","LogMonitor","cancelQueryLog","queryLog","PythonACE","logMonitor","select","finalSQL","runMode","ex","PythonEditor","addRef","instance","TabEditor","pushRef","myRefs","getCurrentEditor","activeKey","currentItem","panes","endsWith","displayEditor","onEdit","targetKey","addFull","tabInfo","tabName","newTabIndex","add","getPaneIndexByActiveKey","lastIndex","pane","remove","editorRefList","closeEditor","InputGroup","Input","Group","ETLoadParams","etPopLoad","compact","Tools","func","keyQuote","k","keyPath","getTempTableName","replace","getJobName","escapeQuote","quote","unQuote","startsWith","slice","visitDown","tree","visit","children","visitUp","robotFetchParam","fetchType","includeSchema","outputSize","robotFetchParamWithCollect","getField","distinct","arrays","Set","tempF","fastCompareObject","deepCompareObject","arg1","arg2","compare2Objects","isNaN","RegExp","String","Number","prototype","leftChain","indexOf","rightChain","pop","ETPopLoad","datasourcesRender","getAttribute","sourceType","sourceTypeV","param","addonBefore","placeholder","loadParamsRef","pathV","tableNameV","makeMLSQL","paramsArray","rv","whereStr","etpop","showSearch","optionFilterProp","filterOption","input","option","toLowerCase","ignorePath","ignoreTableName","TextArea","ETPopAlgorithm","renderParam","ETPopSave","saveMode","saveModeV","partitionBy","partitionByV","fileNum","fileNumV","partitionByStr","fileNumStr","ETBaseTool","outputTableName","outputTableNameV","showTableName","showOutputTableName","pathNameForRender","showPathName","_makeMLSQL","asStr","_render","ETPopTool","ETPopDownload","ETPopScriptUDF","udfName","udfNameV","dataTypeV","udfType","udfTypeV","codeV","langSelect","lang","codeCheckRef","checked","codeLang","setCodeExample","codeRef","codeExample","showDataType","showCode","ETExample","etName","ETRegister","ETStringIndex","sqlTrain","sqlBatchPredict","functionNameV","stripMargin","functionName","ETDownloadFile","link","document","createElement","href","appendChild","click","removeChild","ETStreamProgress","jobType","ETPop","disableEtModalVisible","etModalVisible","enableEtModalVisible","popChild","renderContent","MLSQLETQuick","itemData","onDragStart","renderPop","etDoubleClick","gutter","tyle","help","draggable","processtype","pathalias","tablehidden","pathhidden","outputtablehidden","outputtablealias","tablealias","TreeNode","Tree","DirectoryTree","DeltaLakeTree","dbs","tablesInDeltaLake","database","table","show","entries","TableOutlined","isLeaf","tip","spinning","FileSystemTree","getFileList","ls","_corrupt_record","root","isDir","is_dir","permission","onLoadData","treeNode","dataRef","renderTreeNodes","loadData","CommonHandlers","CommonActions","node","consoleApp","scriptFile","openExistsOrNewEditor","OpenScriptFileActionHandler","OpenScriptFileAction","createType","form","scriptContent","getFieldValue","fileName","createFileError","saveParams","parentId","reloading","CreateFileActionHandler","CreateFileAction","expandedKeys","oldExpandedKeys","newExpanedKeys","newNoExpanedKeys","element","isExpanded","ExpandActionHandler","ExpandAction","DeleteFileActionHandler","DeleteFileAction","PublishAnalysisPluginActionHandler","PublishAnalysisPluginAction","_","SharePublicHandler","SharePublicAction","ScriptTreeActionNames","openScriptFile","createScriptFile","deleteScriptFile","publishPlugin","sharePublic","expand","ScriptTreeHandlers","ScriptTreeActions","ScriptTreeReducer","MLSQLTreeNodeBuilder","build","tempMap","roots","childNodes","convert","cn","FolderOutlined","FileOutlined","SpinBoxW","SpinBox","useContextMenu","contextMenuRef","onRender","rightClickNodeTreeItem","setRightClickNodeTreeItem","onRightClick","useCallback","clickX","clientX","clickY","clientY","contains","addEventListener","scroll","pageX","pageY","removeEventListener","ui","tmpStyle","zIndex","boxShadow","nodes","createTitle","operateModal","ScriptTreeContext","ScriptTree","Form","useForm","shares","builder","treeRes","sort","b","concat","treeData","getList","FolderAddOutlined","ShareAltOutlined","FileAddOutlined","DeleteOutlined","popContextMenu","contextMenu","onExpand","defaultExpandedKeys","expandAction","switcherIcon","DownOutlined","LeftTreePane","deltaLakeTreeRef","fileSystemTreeRef","MLSQLQueryApp","fileToEditorMap","editorRef","editorGroup","tempFileToEditorMap","pre","tableAndDash","sqlContent","createRef","paddingRight","borderRight","leftTreePaneRef","MixinBuilder","superclass","with","mixins","c","mixin","mix","NewSessionOp","toggleNewSession","showNewSession","currentTable","db","currentTableName","showTable","workshop","newSession","AFileSystemTree","tp","options","loadPopRef","ADeltaLakeTree","tableClick","tablesInWorkshop","sessionId","LoadActionHandler","LoadAction","openTable","OpenActionHandler","OpenAction","DeleteActionHandler","DeleteAction","targetPath","exportTable","buildLoadSQL","runSql","ExportToActionHandler","ExportToAction","WorkshopTablesActionNames","LOAD","OPEN","DELETE","EXPORT_TO","WorkshopTablesHandlers","WorkshopTablesActions","WorkshopTablesReducer","confirm","exportTo","WorkshopTablesContext","WorkshopTables","externalReload","exportForm","FolderOpenOutlined","ContainerOutlined","CloudUploadOutlined","getFieldsValue","resetFields","flatMap","dbName","databaseName","namespace","tables","newdbs","partitionValues","partitionColumn","tableRandom","tableStart","tableEnd","partitionColumnName","inStr","__where__","con","loop","searchValue","beforeStr","substr","afterStr","search_dbs","showKeys","sub","SearchActionHandler","SearchAction","HiveTablesActionNames","SEARCH","HiveTablesHandlers","HiveTablesActions","HiveTablesReducer","HiveTablesContext","HiveTables","AnalysisWorkshop","setOpenTable","setError","setPartitionColumn","noPartition","setNoPartition","partition","reverse","usePartitionSelect","PartitionSelect","partitionForm","setOpenTableForPartition","setPartitionError","partitionNumValue","lowerBound","upperBound","connectRes","tempTable","whereBlock","connect","__sql__","__tableName__","OpenMySQLTableActionHandler","OpenMySQLTableAction","MysqlTreeActionNames","MysqlTreeHandlers","MysqlTreeActions","MysqlTreeReducer","useIntegerStep","initialValue","min","useMySQLPartition","setColumn","partitionNumUI","__connect__","columnName","setFieldsValue","data_type","col_name","MysqlTreeContext","MysqlTree","PartitionUI","indexer","LeftView","reloaWorkshop","WorkshopOp","tableInfo","_whereBlock","tempTableName","sqls","loadingTable","toggleMessage","schema","setCurrentTable","updateDisplay","WorkshopAutoSql","getLastApplyTable","rollback","apply","_data","_schema","runSQLAtCurrentTable","analysis_workshop_table_name","analysis_workshop_sql","save","persist","finalSql","persistJobName","extraParams","persistSQL","ApplyOrSave","applyLoading","tableLoading","showSaveDiagram","toggle","saveDiagram","handleTableInput","handlePersit","onSave","onApply","onRollback","StationCommonOp","tableNameForSave","persistForSave","refreshOperateStation","refreshTableWorkshop","ApplyOrSaveRef","SelectJoinField","currentTableSchema","joinStation","joinInfo","joinTable","currentTableFields","fields","joinTableFields","tableSchema","next","SelectFields","inputValue","handleChange","targetKeys","getSelectFields","schemaFields","componentDidUpdate","prevProps","listStyle","SelectProjectFields","handleLeft","leftProjectFields","handleRight","rightProjectFields","reset","danger","SelectJoinTable","Step","Steps","StepContent","JoinStation","joinType","leftField","rightField","tableRes","joinTableInfo","leftProjectFieldsStr","rightProjectFieldsStr","leftFieldStr","rightFieldStr","joinStr","projectStr","currentStep","preview","steps","ColumnOperate","pagination","pageSize","AggStationOp","enableGroupByField","fieldName","groupByFields","generateProjectField","newName","aggFields","newFields","FuncDesc","funcValue","Meta","zhDoc","returnValue","parameters","footer","bordered","ApplyFuncToField","handleSearch","showFunctions","currentFunc","funcDescRef","handleOperateInput","manuallyTransform","isAggChecked","manuallyIsAgg","handleNewName","newFuncName","handleField","funcParams","showColumn","operateField","getTransform","isAgg","transformCode","agg","random","funcPopUp","collect","d","defaultActiveFirstOption","showArrow","onSearch","notFoundContent","defaultValue","AggStation","showAggFuncsAndApply","result","groupby","defaultChecked","_groupBy","dataref","marginRight","_agg","columnsRef","handleFunc","applyFuncToFieldRef","RenameFields","formRef","FunctionField","ProjectStationSQLOp","onSelectApply","selectFieldsRef","showInfo","onFuncApply","functionFieldRef","isAggExists","onRenameApply","renameFieldsRef","currentFields","operateFileds","RemoveFieldActionHandler","RemoveFieldAction","AddFieldActionHandler","AddFieldAction","ApplyActionUtils","validateInput","genSQL","applySaveRollbackDispacher","newCastFields","oldFieldNames","selectStr","CastActionHandler","CastAction","CastFieldsActionNames","ADD_FIELD","REMOVE_FIELD","CastFieldsHandlers","CastFieldsActions","CastFieldsReducer","RollbackActionHandler","RollbackAction","saveTablePersisted","saveTableName","SaveActionHandler","SaveAction","ApplySaveRollbackHandlers","ApplySaveRollbackReducer","ApplySaveRollbackContext","ApplySaveRollback","parentDispacher","context","applyToken","CastFieldsContext","CastFields","submit","marginTop","onDeselect","CommonActionNames","APPLY","AddJsonField","keyPaths","forms","layout","MinusOutlined","subFields","JsonFieldsContext","targetIndex","formValues","operateFiled","jsonStr","JsonFieldsApplyActionHandler","JsonFieldsApplyAction","JsonFieldsHandlers","JsonFieldsActions","JsonFieldsReducer","JsonFields","tempObjs","obj","PlusOutlined","ProjectStation","ExpressionConst","EQUAL","NON_EQUAL","IN","CONTAINS","STARTS_WITH","ENDS_WITH","LIKE","IS_NULL","IS_NOT_NULL","IS_EMPTY","IS_NOT_EMPTY","FilterCondition","compare","setCompare","inCandidate","setInCandidate","inCandidateLoading","setInCandidateLoading","Compare","command","buildSelectedRows","fieldToDataType","selectedRowKeys","addGroup","groupName","groupType","selectedRows","fitlerStation","conGroups","applyGroup","groupGroup","rowSelection","getCheckboxProps","onNonGroupFilterApply","hideOnSinglePage","GroupGroup","ApplyGroup","FilterStation","filterStr","buildCondition","onFilterApply","buildFilter","group","currentConditions","items","conTemp","cond","IS_NOT_EMPT","buildExpression","orderStr","OrderApplyActionHandler","OrderApplyAction","OrderStationActionNames","OrderStationHandlers","OrderStationActions","OrderStationReducer","OrderStationContext","OrderStation","limitSize","limitStr","LimitApplyActionHandler","LimitApplyAction","LimitStationHandlers","LimitStationActions","LimitStationReducer","LimitStationContext","LimitStation","groupFields","BuildGroupActionHandler","BuildGroupAction","orderFields","BuildOrderActionHandler","BuildOrderAction","rowWindows","BuildRowWindowsActionHandler","BuildRowWindowsAction","functions","orderBy","orderByStr","windowType","preceding","following","windowStr","precedingStr","followingStr","oldFields","WindowApplyActionHandler","WindowApplyAction","WindowStationActionNames","buildGroup","buildOrder","buildRowWindows","WindowStationHandlers","WindowStationActions","WindowStationReducer","useSelectFields","enableApply","fieldWrapper","selectFields","selectFieldsLabel","selectFieldsMode","operateFields","setOperateFields","commands","onClose","BuildGroup","WindowStationContext","SetupGroupRowOrder","orderFieldsObj","BuildWindowOnGroup","selectFieldsName","ApplyFunction","funcs","setFuncs","setCurrentFunc","fetchFuncs","mannualTransform","isMannualAgg","newFieldName","useFieldTransform","renderItem","Text","WindowStation","DashStationHandlers","DashStationActions","DashStationReducer","DashStationContext","DashStation","vType","setVtype","plugins","setPlugins","onFieldsChange","changeFields","useDataConfig","dataUi","dataForm","pluginConfigs","setPluginConfigs","imagePreview","setImagePreview","src","useDashConfig","dashUi","dashForm","fetchDashPlugins","dashPlugins","fetchPlugin","pluginName","analyzedScriptContent","image","dataValues","dashValues","xColumn","yColumn","ApplyActionHandler","ApplyAction","unionTable","operator","duplicate","UnionApplyHandler","UnionApplyAction","UnionStationActionNames","UnionApply","UnionStationHandlers","UnionStationActions","UnionStationReducer","useSelectUnionTable","Array","setTables","UnionStationContext","UnionStation","SelectUnionTable","unionTableForm","columnHeader","columnLeft","columnSum","sunFunc","PivotApplyHandler","PivotApplyAction","PivotStationActionNames","PivotApply","PivotStationHandlers","PivotStationActions","PivotStationReducer","aggList","CheckboxGroup","Checkbox","PivotStationContext","PivotStation","schemaForList","setDragging","getDragProps","useDrag","onDragEnd","useDrop","onDom","dropPropHeader","isHoveringHeader","isHovering","dropPropsLeftHeader","isHoveringLeftHeader","dropPropsSum","isHoveringSum","tips","isHover","aggs","aggForm","useAggCheck","aggUI","AnalysisPluginStationHandlers","AnalysisPluginStationActions","AnalysisPluginStationReducer","FormTypeEnum","SQLAnalysisUtils","_sql","userInputs","toSql","buffer","newv","useAnalysisPlugin","setUserInputs","fieldLoading","fieldData","setFieldData","analysisUtils","plugin","fetchSelect","optionStr","optionSql","optionTable","_fetch","toFormType","sqlChunk","formItem","comamnd","onFocus","selectMode","formType","AnalysisPluginForm","AnalysisPluginStationContext","AnalysisPluginStation","analysisUtilsRef","OperateStation","borderBottom","tabPosition","WorkshopMessageOp","showMessage","consoleMessage","showInfoMessage","infoMessage","WorkshopUIOp","stationRef","SearchOp","getColumnSearchProps","filterDropdown","setSelectedKeys","clearFilters","searchInput","onPressEnter","SearchOutlined","handleReset","filterIcon","filtered","onFilter","onFilterDropdownVisibleChange","searchedColumn","highlightStyle","searchWords","searchText","autoEscape","textToHighlight","wrapper","DropdownMenuUI","dropdownStat","dropdown","menu","BarChartOutlined","overlay","RealTimeViewTable","getDefaultRender","getDefaultSearch","getDefaultTitleRender","isDash","newColumns","textWrap","ellipsis","showTitle","OperateStationWrapper","handle","useFullScreenHandle","FullscreenOutlined","RealTimeTableWrapper","operateStationView","subTitle","enableRegister","enableLogin","applySuccess","LRActionHandler","LRAction","AdminSettingActionNames","LR_CONTROL","SET_STATE","AdminSettingHandlers","AdminSettingReducer","LRSettingsContext","LRSettings","getAppInfo","showIcon","checkedChildren","unCheckedChildren","useCrudTable","createInitRow","externalSubmit","externalRemove","setSchema","setResult","editorMode","setEditorMode","useDynamicList","getKey","move","resetList","sortForm","submitNow","REG","fieldValue","matchFF","exec","oldIndex","newIndex","handleSelector","rowKey","r","tempRow","createRow","debug","Engines","setReload","ChangePassword","setApplySuccess","newPassword","_newPassword","AdminSettingContext","AdminSetting","defaultSelectedKeys","defaultOpenKeys","MailOutlined","useUserConfig","success","setSuccess","formItems","getParams","DefaultBackend","updateUser","ApplyTimeout","timeoutUi","timoutValue","apply_timeout","Teams","MySQL","host","port","jType","ListMySQL","SetupEngineFromCloudHandlers","SetupEngineFromCloudActions","SetupEngineFromCloudReducer","UseEngineCreateLoading","setResp","setTimer","orientation","loadingPage","SetupEngineFromCloudContext","SetupEngineFromCloud","valuePropName","marks","1","2","4","8","DeleteCloudEngine","engines","setEngines","errorDetail","setErrorDetail","selectChange","EngineLog","logMsg","setLogMsg","RegisterEngine","Settings","setCurrentPage","Doc","EngineUI","backends","IndexList","loadIndexers","removeIndexer","Column","deltaSec","deltaStr","round","date","onConfirm","CreateIndexer","setConfirm","setDbs","setTable","setTp","enableSyncInterval","setEnableSyncInterval","engineResp","newparams","IndexManager","ResultView","nav","collected_params","current_plugin_name","formTailLayout","ScriptPluginView","buildForm","validateFields","pushParam","marginLeft","ScriptPluginViewForm","Header","Layout","Content","Footer","Sider","MainPage","showTut","data_plugin","data_menu","minHeight","MLSQLScriptPluginsApp","AppConsole","AddEngineActionHandler","AddEngineAction","SkipAddEngineActionHandler","SkipAddEngineAction","AppSetupActionNames","registerAdmin","addEngine","skipAddEngine","AppSetupReducerHandlers","AppSetupReducer","StepUserPassword","AppSetupContext","AddEngines","requireField","AppConfiguredActionHandler","AppConfiguredAction","appConfigured","GoAdminActionHandler","GoAdminAction","GoConsoleActionHandler","GoConsoleAction","AppActionNames","GO_CONSOLE","GO_ADMIN","AppReducerHandlers","AppReducer","Done","AppContext","AppSetupContainer","AppSetupHeader","AppSetupBody","AppSetup","en_US","analysis_workshop","settings","admin","more","set_default_backend","set_default_backend_error","set_engine","curent_value","choose","done","congratulation","set_timeout","set_apply_timeout","table_workshop","delta_lake","file_system","project","order","limit","select_columns","rename_columns","transform_columns","cast_columns_type","hive","operate_panel","data_panel","user_settings","change_password","team","team_manager","datasource","analysis_range","table_start","table_end","table_random","or","no_partition_msg","ds_mysql","alias","connect_mysql","list_mysql","mysql","numPartitions","mysql_parallel","no_mysql_parallel","as","choose_json_field","json_fields","union","aliyun_message","submit_task_success","App","configured","locale","messages","AntEnUS","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister","eventCallBack","dispatch","getState","signal","PUT"],"mappings":"0NAGO,MAAMA,KACFC,UAAY,WADVD,EAEFE,QAAU,SAFRF,EAGFG,YAAc,cAHZH,EAIFI,YAAc,eCJlB,MAAMC,EACTC,YAAYC,EAAQC,EAAQC,GACxBC,KAAKH,OAASA,EACdG,KAAKF,QAAUA,EACfE,KAAKC,KAAOF,GAIb,MAAMG,EAETN,YAAYO,EAAKC,EAAe,IAC5BJ,KAAKG,IAAMA,EACNH,KAAKG,MACNH,KAAKG,IAAME,KAEfL,KAAKI,aAAeA,EAGlBE,QAAQC,EAAQC,EAAQC,EAAS,OAAQ,IAAD,4IAa1C,IAASC,KAZTD,EAASA,EAAOE,eACVC,EAAWC,eAAeC,QAAQxB,EAAiBC,cAGrDiB,EAAOlB,EAAiBC,WAAaqB,GAOrCG,EAAW,GACMP,EACbQ,EAAaC,mBAAmBP,GAChCQ,EAAeD,mBAAmBT,EAAOE,IAC7CK,EAASI,KAAKH,EAAa,IAAME,GAhBK,OAkBtCE,EAAS,EAAKjB,IAAMI,EAEpBQ,EAASM,OAAS,IAClBD,GAAkB,KAGP,QAAXX,GACAW,GAAkBL,EAASO,KAAK,KAChCP,OAAWQ,GAEXR,EAAWA,EAASO,KAAK,KAGvBE,EAAe,CACjBf,OAAQA,EACRgB,QAAS,MACTC,QAAS,CACL,eAAgB,oCAChB,OAAU,mBACV,eAAgBb,eAAeC,QAAQa,MAAgB,IAE3DC,KAAMb,GAGJc,EA1CoC,2BA0ChBL,GAAiB,EAAKpB,cA1CN,oBA6Cf0B,MAAMV,EAAQS,GA7CC,YA6ChC9B,EA7CgC,QA8CxBgC,GA9CwB,kCA+CdhC,EAASiC,OA/CK,eA+C5BC,EA/C4B,yBAgD3B,IAAItC,EAAaI,EAASF,OAAQoC,IAhDP,yBAkDnBlC,EAASmC,OAlDU,eAkDhCA,EAlDgC,yBAmD/B,IAAIvC,EAAa,IAAKuC,EAAKnC,IAnDI,4DAqD/B,IAAIJ,EAAa,IAAjB,UAA0B4B,IArDK,8D,YChB3C,MAAMY,EAEXvC,cACEI,KAAKoC,QAAU,IAAIlC,EAGfU,WAAY,IAAD,wIACG,EAAKyB,IAAIC,UAAa/C,UAAW,IADpC,cACTgD,EADS,yBAERA,GAFQ,6CAKXC,UAAUC,EAAKC,EAASlC,GAAS,IAAD,kJAClB,EAAKI,WADa,UAEjB,OADb2B,EAD8B,QAE5B1C,OAF4B,yCAG3B0C,GAH2B,gBAKFA,EAAIzC,QAA9Bc,EAL4B,EAK5BA,SAAU+B,EALkB,EAKlBA,YAEZC,EAAc,CAClBH,IAAKA,EACLI,MAAOjC,EACP8B,QAASA,EACTI,gBAAgB,EAChBC,YAAY,EACZC,UAAU,EACVC,KAAMN,GAAe,IAEvBO,OAAOC,OAAOP,EAAapC,GAhBS,UAiBjB,EAAK4C,KAAKd,UAAae,IAAKT,GAjBX,eAiB9BU,EAjB8B,yBAkB7BA,GAlB6B,8CA2BhCjB,IAAI9B,EAAQC,GAAS,IAAD,wIACN,EAAK4B,QAAQ9B,QAAQC,EAAQC,EAAQ+C,IAAOC,KADtC,cAClBjB,EADkB,yBAEjBA,GAFiB,6CAWpBa,KAAK7C,EAAQC,GAAS,IAAD,wIACP,EAAK4B,QAAQ9B,QAAQC,EAAQC,EAAQ+C,IAAOE,MADrC,cACnBlB,EADmB,yBAElBA,GAFkB,8CAjDhBJ,EACJuB,OAAS,IAAIvB,G,yRCJ+CwB,EAAYC,aAAZ,uCAAyB,WAAOrD,GAAP,SAAAsD,EAAA,+EACnF,CACHC,KAAK,eACEvD,EAAOuD,QAHwE,2CAAzB,uDAA/CC,E,EAARC,QAAqCC,E,EAAP1D,Q,4HCF5C,+CAAe,MAAM+B,KACVe,IAAM,qBADIf,EAEV/C,UAAY,wBAFF+C,EAGV4B,SAAW,mBAHD5B,EAIV6B,WAAa,cAJH7B,EAKV8B,SAAW,mBALD9B,EAOV+B,iBAAmB,sBAPT/B,EASVgC,gBAAkB,0BATRhC,EAUViC,oBAAsB,6BAVZjC,EAWVkC,cAAgB,+BAXNlC,EAYVmC,sBAAwB,gCAZdnC,EAcVoC,SAAW,cAdDpC,EAeVqC,SAAW,mBAfDrC,EAiBVsC,SAAW,wBAjBDtC,EAkBVuC,MAAQ,qBAlBEvC,EAmBVwC,OAAS,sBAnBCxC,EAqBVyC,WAAa,qBArBHzC,EAsBV0C,gBAAkB,0BAtBR1C,EAuBV2C,YAAc,sBAvBJ3C,EAwBV4C,cAAgB,wBAxBN5C,EA0BV6C,iBAAmB,sBA1BT7C,EA4BV8C,gBAAkB,0BA5BR9C,EA8BV+C,mBAAqB,6BA9BX/C,EAgCVgD,YAAc,sBAhCJhD,EAiCViD,WAAa,qBAjCHjD,EAmCVkD,qBAAuB,8BAnCblD,EAoCVmD,oBAAsB,iCApCZnD,EAqCVoD,wBAA0B,qCArChBpD,EAsCVqD,oBAAsB,4BAtCZrD,EAwCVsD,WAAa,4BAxCHtD,EAyCVuD,qBAAuB,yBAzCbvD,EA2CVwD,UAAY,yBA3CFxD,EA6CVyD,UAAY,eA7CFzD,EA+CV0D,OAAS,iBA/CC1D,EAgDV2D,QAAU,kBAhDA3D,EAiDV4D,UAAY,oBAjDF5D,EAmDV6D,aAAc,uBAnDJ7D,EAqDV8D,iBAAmB,+BArDT9D,EAsDV+D,qBAAuB,0BAtDb/D,EAwDVgE,oBAAsB,kCAxDZhE,EAyDViE,oBAAsB,kCAzDZjE,EA0DVkE,oBAAsB,2BA1DZlE,EA2DVmE,kBAAoB,yBA3DVnE,EA6DVoE,aAAe,kBA7DLpE,EA8DVqE,qBAAuB,8BA9DbrE,EA+DVsE,eAAiB,0B,mGCnDRC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,2FCb2DtD,IAAYC,aAAZ,uCAAyB,WAAOrD,GAAP,eAAAsD,EAAA,yDACvD,WAA5BtD,EAAOuD,KAAKoD,YADuE,uBAE5ExD,EAAS,IAAIvB,cAF+D,SAG5EuB,EAAON,KAAKd,UAAawC,OAAQ,IAH2C,cAIlFjE,eAAesG,WAAWxF,IAAYyF,MACtCvG,eAAesG,WAAW,QALwD,kBAM3E,CACHrD,KAAM,CACFoD,YAAa,QACbG,SAAS,KATiE,gCAa/E,CACHvD,KAAM,CACFoD,YAAa3G,EAAOuD,KAAKoD,eAfqD,2CAAzB,uDAA3CI,E,EAARtD,QAAmCuD,E,EAAPhH,O,oBC+F3BiH,MAjGf,MAEI,kBAAkBjF,GACd,MAAMkF,EAAO,CAAC7G,SAAS2B,EAAIzC,QAAQsH,KAAMM,KAAKnF,EAAIzC,QAAQ4H,KAAKC,YAAYpF,EAAIzC,QAAQ6C,aACjFiF,EAAQrF,EAAItC,KAAKyB,QAAQW,IAAIV,IAAYyF,MAC/CvG,eAAegH,QAAQlG,IAAYyF,KAAMQ,GACzC/G,eAAegH,QAAQ,OAAOC,KAAKC,UAAUN,KAC7B,IAAIO,KACZC,IAAItG,IAAYyF,KAAMQ,EAAO,CAAEM,KAAM,MAGjD,kBAAkB3F,GACd,MAAMkF,EAAO,CAAC7G,SAAS2B,EAAIzC,QAAQsH,KAAMM,KAAKnF,EAAIzC,QAAQ4H,KAAKC,YAAYpF,EAAIzC,QAAQ6C,aACvF9B,eAAegH,QAAQ,OAAOC,KAAKC,UAAUN,IAGjD,qBACI,MAAMU,EAAUtH,eAAeC,QAAQ,QACvC,IAAIqH,EAAS,MAAO,GACpB,IACI,OAAOL,KAAKM,MAAMN,KAAKM,MAAMD,GAASR,cAAgB,GACzD,MAAMU,GACH,MAAO,IAKf,iBACI,MAAMF,EAAUtH,eAAeC,QAAQ,QACvC,IAAIqH,EAAS,OAAO,EAEpB,MAAe,UADFL,KAAKM,MAAMD,GAChBT,KAIZ,iBACI,QAAG7G,eAAeC,QAAQa,IAAYyF,MAK1C,qBAyBI,MAAO,CAAEkB,eAxBc,CACnBC,SAAU,CACNC,GAAI,CACAC,KAAM,GAEVC,GAAI,CACAD,KAAM,IAGdE,WAAY,CACRH,GAAI,CACAC,KAAM,GAEVC,GAAI,CACAD,KAAM,KAUOG,WANN,CACfD,WAAY,CACRE,OAAQ,EACRJ,KAAM,MAKlB,qBAyBI,MAAO,CAAEH,eAxBc,CACnBC,SAAU,CACNC,GAAI,CACAC,KAAM,IAEVC,GAAI,CACAD,KAAM,IAGdE,WAAY,CACRH,GAAI,CACAC,KAAM,IAEVC,GAAI,CACAD,KAAM,MAUOG,WANN,CACfD,WAAY,CACRE,OAAQ,EACRJ,KAAM,Q,QC1FuD9E,IAAYC,aAAZ,uCAAyB,WAAOrD,GAAP,eAAAsD,EAAA,6DAC9FqD,EAAc,UAEc,aAA7B3G,EAAOuI,QAAQ5B,aAA6BM,EAAQH,YACnDH,EAAc,YAJgF,kBAM3F,CACHpD,KAAK,2BACEvD,EAAOuD,MADV,IAEAuD,QAASG,EAAQH,UACjBH,kBAV0F,2CAAzB,uDAAvD6B,E,EAAR/E,QAAyCgF,E,EAAPzI,O,aCAhD,MAAM0I,KACKC,OAAS,SADdD,EAEKE,cAAgB,eAE3B,MAAMC,EAAqB,CACvB,CAACH,EAAsBC,QAAS5B,EAChC,CAAC2B,EAAsBE,eAAgBJ,EACvCM,SAAUtF,yBAGd,SAASuF,EAAkBC,EAAOhJ,GAC9B,OAAQA,EAAOiJ,MACX,KAAKP,EAAsBC,OACvB,OAAO3B,EAAagC,EAAOhJ,EAAOuD,MACtC,KAAKmF,EAAsBE,cACvB,OAAOH,EAAmBO,EAAOhJ,EAAOuD,MAC5C,IAAK,WACD,OAAOG,yBAAesF,EAAOhJ,EAAOuD,MACxC,QACI,OAAOyF,G,qICZXE,EAAYC,IAAZD,QAEFE,EAAuBC,IAAMC,gBAEnC,SAASC,EAAcC,GAAQ,MACnB7C,EAAkD6C,EAAlD7C,YAAa8C,EAAqCD,EAArCC,YAAaC,EAAwBF,EAAxBE,YAAYC,EAAYH,EAAZG,QACtCC,EAAcC,qBAAWC,IAAzBF,UAFkB,EAGIG,mBAASpD,GAHb,mBAGnBqD,EAHmB,KAGVC,EAHU,OAIIF,mBAASN,GAJb,mBAInB3C,EAJmB,KAIVoD,EAJU,OAKIH,mBAASL,GALb,mBAKnBS,EALmB,KAKVC,EALU,OAMAL,wBAAS/I,GANT,mBAMnBqJ,EANmB,KAMZC,EANY,OAQeP,oBAAS,GARxB,mBASpBQ,GAToB,UASNC,oBASpB,OAPAC,oBAAU,KAAO,MACL9D,EAA0C6C,EAA1C7C,YAAa8C,EAA6BD,EAA7BC,YAAaC,EAAgBF,EAAhBE,YAClCO,EAAWtD,GACXuD,EAAWT,GACXW,EAAWV,IACZ,CAACF,IAGA,kBAACJ,EAAqBsB,SAAtB,KACI,kBAAC,IAAD,CACIC,MAAO,UACPC,QAASP,IAAS,EAClBQ,SAAU,KAAQP,OAAStJ,IAC3B8J,KAAM,KACFR,OAAStJ,GACTiJ,EAAWM,EAAYP,SACvBJ,EAAUxG,IAAY2H,WAClBrC,EAAsBC,OAAQ,CAAEhC,YAAa4D,EAAYP,YAGjEgB,WAAW,SACXC,OAAO,SAEP,kBAAC,IAAD,CACIC,YAAab,EACbpB,KAAK,UAGb,kBAAC,IAAD,CAAMkC,QAAUrD,IACZ,GAAa,SAAVA,EAAEsD,IAGD,OAFAtD,EAAEuD,SAASC,sBACXxD,EAAEuD,SAASE,kBAGXzE,GAAuB,aAAZkD,GAAoC,aAAVlC,EAAEsD,KACvCb,EAAYP,QAAUlC,EAAEsD,IACxBd,EAAS,8FAETL,EAAWnC,EAAEsD,KACbxB,EAAUxG,IAAY2H,WAClBrC,EAAsBC,OAAQ,CAAEhC,YAAamB,EAAEsD,SAIxDI,aAAc,CAACxB,GAAUyB,KAAK,cAC7B,kBAAC,IAAKC,KAAN,CAAYN,IAAI,QACZ,0BAAMO,MAAO,CAAEC,SAAU,KAAzB,qBACA,0BAAMD,MAAO,CAAEC,SAAU,KAAzB,6BAKF9E,GAAW,kBAAC,IAAK4E,KAAN,CAAWN,IAAI,QAAQS,KAAM,kBAACC,EAAA,EAAD,OACtC,kBAAC,IAAD,CAAkBC,GAAG,YAEvBjF,GAAW,kBAAC,IAAK4E,KAAN,CAAWN,IAAI,WAAWS,KAAM,kBAACG,EAAA,EAAD,OACxC,kBAAC,IAAD,CAAkBD,GAAG,cAGzBjF,GAAW6C,EAAQsC,eAAiB,kBAAC,IAAKP,KAAN,CAAWN,IAAI,UAAUS,KAAM,kBAACK,EAAA,EAAD,OAChE,kBAAC,IAAD,CAAkBH,GAAG,aAExBjF,GAAW,kBAAC,IAAK4E,KAAN,CAAWN,IAAI,WAAWS,KAAM,kBAACM,EAAA,EAAD,OACzC,kBAAC,IAAD,CAAkBJ,GAAG,uBAGvBjF,GAAW,kBAAC,IAAK4E,KAAN,CAAWN,IAAI,kBAAkBS,KAAM,kBAACM,EAAA,EAAD,OAC/C,kBAAC,IAAD,CAAkBJ,GAAG,qBAIrBjF,GAAW,kBAAC,IAAK4E,KAAN,CAAWN,IAAI,WAAWS,KAAM,kBAACO,EAAA,EAAD,OACvC,kBAAC,IAAD,CAAkBL,GAAG,cAIzBjF,GAAWqD,GAAW,kBAAC,IAAKuB,KAAN,CAAWN,IAAI,QAAQS,KAAM,kBAACO,EAAA,EAAD,OAC/C,kBAAC,IAAD,CAAkBL,GAAG,WAIzBjF,GAAW,kBAACoC,EAAD,CAAS2C,KAAM,kBAACQ,EAAA,EAAD,MAAkB1B,MAAO,kBAAC,IAAD,CAAkBoB,GAAG,UACpE,kBAAC,IAAKL,KAAN,CAAWN,IAAI,gBAAf,4BACA,kBAAC,IAAKM,KAAN,CAAWN,IAAI,OAAf,4BACA,kBAAC,IAAKM,KAAN,CAAWN,IAAI,UAAf,UACA,kBAAC,IAAKM,KAAN,CAAWN,IAAI,SAASS,KAAM,kBAACS,EAAA,EAAD,OAA9B,a,wDCzG6ClJ,IAAYC,aAAZ,uCAAyB,WAAMrD,GAAN,2BAAAsD,EAAA,2DAC5CtD,EAAOuD,KAAzClD,EAD8E,EAC9EA,SAAUkM,EADoE,EACpEA,SAAUC,EAD0D,EAC1DA,UACxBD,IAAaC,EAFqE,yCAG3E,CACHjJ,KAAM,CACF7B,MAAO,+BALmE,cAUhFyB,EAAS,IAAIvB,cAVmE,SAWpEuB,EAAON,KAAKd,UAAasC,SAAU,CACjDhE,WAAUkM,aAZwE,cAWhFvK,EAXgF,OAelFuB,EAAO,GACQ,MAAfvB,EAAI1C,OACJiE,EAAO,CACH7B,MAAO6F,KAAKM,MAAM7F,EAAIzC,SAASkN,MAInCxF,EAAQyF,WAAW1K,GACnBuB,EAAO,CACH7B,WAAOV,EACP8F,SAAS,EACTkD,QAAShK,EAAOuI,QAAQyB,QAAU,IA1B4C,kBA6B/E,CAACzG,SA7B8E,4CAAzB,uDAA/CoJ,E,EAARlJ,QAAqCmJ,E,EAAP5M,O,ECAmBoD,IAAYC,aAAZ,uCAAyB,WAAOrD,GAAP,iBAAAsD,EAAA,6DAC9EH,EAAS,IAAIvB,cADiE,SAElEuB,EAAON,KAAKd,UAAauC,MAAOtE,EAAOuD,MAF2B,UAGjE,OADbvB,EAF8E,QAG5E1C,OAH4E,yCAIzE,CACHiE,KAAK,CAACuD,SAAQ,EAAMpF,MAAO6F,KAAKM,MAAM7F,EAAIzC,SAASkN,OALyB,cASpFxF,EAAQyF,WAAW1K,GATiE,kBAU7E,CACHuB,KAAK,CAACuD,SAAQ,KAXkE,2CAAzB,uDAAzC+F,E,EAARpJ,QAAkCqJ,E,EAAP9M,OCFzC,MAAM+M,OACK1I,SAAW,WADhB0I,GAEKzI,MAAQ,QAEnB,MAAM0I,GAAwB,CAC1B,CAACD,GAAyB1I,UAAWsI,EACrC,CAACI,GAAyBzI,OAAQuI,GAGtC,SAASI,GAAqBjE,EAAOhJ,GACjC,OAAQA,EAAOiJ,MACX,KAAK8D,GAAyB1I,SAC1B,OAAOuI,EAAe5D,EAAOhJ,EAAOuD,MACxC,KAAKwJ,GAAyBzI,MAC1B,OAAOwI,EAAY9D,EAAOhJ,EAAOuD,MACrC,QACI,OAAOyF,G,oJCdnB,MAAMkE,GAAYC,KAAOC,IAAV,MAUAC,OANf,SAAkB7D,GACd,OAAO,kBAAC0D,GAAD,KACH,kBAAC,IAAD,iBAAW1D,EAAX,CAAkB8D,UAAQ,EAACrE,KAAMO,EAAMP,MAAM,QAASsE,QAAS/D,EAAMmB,OAAS,UAAWO,YAAa1B,EAAM+D,aCApH,MAAMC,GAAkBnE,IAAMC,gBACxBmE,GAAY,CACd3G,SAAS,EACTpF,WAAOV,GAEX,SAAS0M,KAAY,MACEC,EAAwB9D,qBAAWC,IAA9CF,UADQ,EAEuB3C,EAAQ2G,cAAvC7F,EAFQ,EAERA,eAAgBM,EAFR,EAEQA,WAFR,EAGWwF,0BAAgBZ,GAAsBQ,GAAWT,IAH5D,mBAGThE,EAHS,KAGFY,EAHE,KAKR9C,EAAmBkC,EAAnBlC,QAASpF,EAAUsH,EAAVtH,MASjB,OAPA+I,oBAAU,KACNkD,EAAoB,CAChB1E,KAAMP,EAAsBE,cAC5BrF,KAAM,MAEX,CAACuD,IAGA,kBAAC0G,GAAgB9C,SAAjB,CAA0BoD,MAAO,IAC7B,yBAAKC,UAAU,6BACX,kBAAC,IAAD,CAAMpD,MAAM,YAEJjJ,GAAS,kBAAC,GAAD,CAAUuH,KAAK,QAAQsE,QAAS7L,IAE7C,kBAAC,IAAD,iBAAUqG,EAAV,CAA0BgG,UAAU,aAAaC,SAAWC,IACxDrE,EAAU,CACNX,KAAM8D,GAAyB1I,SAC/Bd,KAAM0K,OAGV,kBAAC,IAAKvC,KAAN,CACIwC,MAAM,WACNrH,KAAK,WACLsH,MAAO,CACH,CACIC,UAAU,EACVb,QAAS,iCAIjB,kBAAC,IAAD,OAGJ,kBAAC,IAAK7B,KAAN,CACIwC,MAAM,WACNrH,KAAK,WACLsH,MAAO,CACH,CACIC,UAAU,EACVb,QAAS,iCAIjB,kBAAC,IAAMc,SAAP,OAEJ,kBAAC,IAAK3C,KAAN,CACIwC,MAAM,oBACNrH,KAAK,YACLsH,MAAO,CACH,CACIC,UAAU,EACVb,QAAS,iCAIjB,kBAAC,IAAMc,SAAP,OAEJ,kBAAC,IAAK3C,KAASrD,EACX,kBAAC,IAAD,CAAQY,KAAK,UAAUqF,SAAS,UAAhC,WCrE5B,MAAMb,GAAY,CACd3G,SAAS,EACTpF,WAAOV,GAGLuN,GAAelF,IAAMC,gBAE3B,SAASkF,KAAS,MAAD,EAC0BvH,EAAQ2G,cAAvC7F,EADK,EACLA,eAAgBM,EADX,EACWA,WACLsF,EAAwB9D,qBAAWC,IAA9CF,UAFK,EAIciE,0BAAgBZ,GAAsBQ,GAAWT,IAJ/D,mBAINhE,EAJM,KAICY,EAJD,KAKL9C,EAAkBkC,EAAlBlC,QAASpF,EAASsH,EAATtH,MAWjB,OATA+I,oBAAU,KACNkD,EAAoB,CAChB1E,KAAMP,EAAsBE,cAC5BrF,KAAM,CACFuD,cAGT,CAACA,IAGA,kBAACyH,GAAa7D,SAAd,KACI,yBAAKqD,UAAU,6BACX,kBAAC,IAAD,CAAMpD,MAAM,SAEJjJ,GAAS,kBAAC,GAAD,CAAUuH,KAAK,QAAQsE,QAAS7L,IAE7C,kBAAC,IAAD,iBAAUqG,EAAV,CAA0BgG,UAAU,aAAaC,SAAWC,IACxDrE,EAAUxG,IAAY2H,WAAWgC,GAAyBzI,MAAO2J,OAEjE,kBAAC,IAAKvC,KAAN,CACIwC,MAAM,WACNrH,KAAK,WACLsH,MAAO,CACH,CACIC,UAAU,EACVb,QAAS,iCAIjB,kBAAC,IAAD,OAGJ,kBAAC,IAAK7B,KAAN,CACIwC,MAAM,WACNrH,KAAK,WACLsH,MAAO,CACH,CACIC,UAAU,EACVb,QAAS,iCAIjB,kBAAC,IAAMc,SAAP,OAEJ,kBAAC,IAAK3C,KAASrD,EACX,kBAAC,IAAD,CAAQY,KAAK,UAAUqF,SAAS,UAAhC,W,qDCnE5B,MAAMG,GAAgBC,EAAQ,KAEvB,MAAMC,WAA0BtF,YACnChK,YAAYmK,GACRoF,MAAMpF,GADS,KAOnBqF,UAAY,CAACC,EAAWvL,KAEpB,MAAMuK,EAAQvK,EAAK,GAAGuL,EAAU1D,KAEhC,GAAI3L,KAAKsP,QAAUtP,KAAKsP,OAAL,OAAnB,CACI,MAAMC,EAASvP,KAAKsP,OAAL,OAAsBD,EAAU1D,KAC3C4D,IACAF,EAAS,OAAaE,OAH9B,CAQA,IACI,GAAI3F,YAAgB4F,cAAcnB,EAAM7E,MAEpC,YADA6F,EAAS,OAAahB,GAAS,4BAAOA,IAI9C,MAAOhG,IAGc,QAAjBgH,EAAU1D,IAKS,kBAAX0C,EAMW,iBAAXA,EAIW,mBAAXA,EAIS,cAAjBgB,EAAU1D,KAAwC,WAAjB0D,EAAU1D,KAAqC,QAAjB0D,EAAU1D,MACzE0D,EAAS,OAAahB,GAAS,2BAAMA,EAAMoB,aAJ3CJ,EAAS,OAAahB,GAAS,4BAAOA,EAAMoB,YAJ5CJ,EAAS,OAAahB,GAAS,4BAAOA,EAAM/M,KAAK,KAAKoO,UAAU,EAAG,MANnEL,EAAS,OAAahB,GAAS,4BACvBvG,KAAKC,UAAUsG,GAAOqB,UAAU,EAAG,MAN3CL,EAAS,OAAahB,GAAS,2BAAMA,EAAMqB,UAAU,EAAE,QA7B5C,KAuDnBC,OAAS,CAAC7L,EAAMwL,KAEZtP,KAAKsP,OAAOA,EACZ,IAAIM,EAAO,GACPC,EAAS,GACTC,EAAO,GACX,MAAMC,EAAO/P,KAEb8D,EAAKkM,SAAQ,SAAUC,GACnB,IAAK,IAAItE,KAAOsE,EACZ,IAAKJ,EAAOlE,GAAM,CACd,MAAM0D,EAAY,CACdnE,MAAOS,EACPuE,UAAWvE,EACXA,IAAKA,GAEToE,EAAKX,UAAUC,EAAWvL,GAC1B8L,EAAKzO,KAAKkO,GACVQ,EAAOlE,IAAO,MAM1B7H,EAAKkM,SAAQ,SAAUC,EAAME,GACzB,IAAIC,EAAW,GACfR,EAAKI,SAAQ,SAAUrE,GACnByE,EAASzE,EAAIA,KAAOsE,EAAKtE,EAAIA,QAEjCyE,EAAQ,IAAUD,EAClBL,EAAK3O,KAAKiP,MAGdpQ,KAAKqJ,SAAS,CAACgH,QAAST,EAAM9L,KAAMgM,KAxFrB,KA2FnBQ,eAAiB,CAACC,EAAKJ,EAAOK,KACT,gBAAbD,EAAInJ,MAAuC,QAAbmJ,EAAInJ,MAClCpH,KAAKqJ,SAAS,CACVoH,KAAM,CACFC,SAAS,EACT5Q,QAASyQ,EAAIlC,UAhGV,KAsGnBsC,eAAiB,KACb3Q,KAAKqJ,SAAS,CACVoH,KAAM,CACFC,SAAS,MAvGjB1Q,KAAK4Q,WAAa7G,EAAMmC,OAAS,GACjClM,KAAKuJ,MAAQ,CAAC8G,QAAS,GAAIP,KAAM,GAAIW,KAAM,CAACC,SAAS,IACrD1Q,KAAKsP,OAAS,GA0GlBC,SACI,MAAMQ,EAAO/P,KACb,OAAQ,uBAAKkM,MAAOlM,KAAK4Q,YACjB,gBAAC,KAAD,CACIC,MAAO,CAACN,EAAKJ,KACF,CACHW,cAAgBN,IACZT,EAAKO,eAAeC,EAAKJ,EAAOK,MAO5CH,QAASrQ,KAAKuJ,MAAM8G,QACpBU,WAAY/Q,KAAKuJ,MAAMzF,OAC3B,gBAAC,KAAD,CACIoH,MAAO,OACPC,QAASnL,KAAKuJ,MAAMkH,KAAKC,QACzBtF,SAAUpL,KAAK2Q,eACftF,KAAMrL,KAAK2Q,eACXpF,WAAW,SACXyF,OAAO,MAEP,gBAAChC,GAAD,CAAeiC,OAAQjR,KAAKuJ,MAAMkH,KAAK3Q,SAAW,Q,kEC7I/D,MASMoR,GAA8B,qBCT9B3N,GACJ,MADIA,GAEH,OAIG4N,GAGK,IAKLxP,GACH,eCRJyP,GAAY,CACdC,MAAO,IACPC,OAAQ,IACRC,YAAa,EACbC,YAAa,OACbC,YAAa,SACbC,aAAc,GAEZC,GAAc,CAChBF,YAAa,QACbD,YAAa,OACbI,gBAAiB,QAEfC,GAAc,CAChBJ,YAAa,QACbD,YAAa,OACbI,gBAAiB,QAGfE,GAAgB,CAClBC,QAAS,QAIN,MAAMC,WAAuBpI,IAAMqI,UAEtCrS,cACIuP,QADU,KAQd+C,OAAUC,IACNnS,KAAKqJ,SAAS,CAAC8I,UACf,MAAMC,EAAM9R,KAAQ8C,KFhCgB,uBEiCpCgP,EAAInK,IAAI,eAAgBpH,eAAeC,QAAQuR,KAA0B,IACzEF,EAAMnC,QAAQsC,IACVF,EAAIG,OAAOD,EAAKpK,KAAMoK,KAG1BF,EAAII,IAAI,CAACC,EAAKlQ,KACVvC,KAAKqJ,SAAS,CAAC8I,MAAO,KACjBM,GAKDC,QAAQC,IAAIF,GACZzS,KAAKqJ,SAAS,CAAC2D,IAAKyF,EAAIhD,WAAa,kFALjClN,EAAIR,IACJ/B,KAAKqJ,SAAS,CAAC2D,IAAK,eAAiBmF,EAAM9Q,OAAS,uFAlBhErB,KAAKuJ,MAAQ,CACT4I,MAAO,IA2Bf5C,SAEI,MAAM4C,EAAQnS,KAAKuJ,MAAM4I,MAAMS,IAAIC,GAC/B,wBAAIlH,IAAKkH,EAAEzL,MACNyL,EAAE3K,KADP,MACgB2K,EAAEC,KADlB,WAKJ,OACI,6BAAS5G,MAAO4F,IACZ,6BACI,kBAAC,KAAD,CAAUI,OAAQlS,KAAKkS,OACba,qBAAsBC,GAAOC,aAAUD,IAE5C,EAAEE,eAAcC,gBAAeC,eAAcC,eAAcC,eAAcC,gBAAeC,oBACrF,IAAIC,EAAM,eAAOrC,IAIjB,OAHAqC,EAASL,EAAY,2BAAOK,GAAW9B,IAAe8B,EACtDA,EAASH,EAAY,2BAAOG,GAAW5B,IAAe4B,EAGlD,yCACQP,IADR,CAEIhH,MAAOuH,IAEP,0BAAWN,KACX,6BACKE,EAAe,OAAS,OAD7B,kBAGCC,GAAgB,6DAMrC,+BACI,4BAAsB,IAAjBnB,EAAM9Q,OAAe,GAAK,SAC/B,4BAAK8Q,IAET,6BAAMnS,KAAKuJ,MAAMyD,IAAMhN,KAAKuJ,MAAMyD,IAAM,M,aChGxD,MAAM0G,GAAczE,EAAQ,KACtB0E,GAAgB,KAClB,IAAIC,EAAQF,KAIZ,MAHc,YAAVE,IACAA,EAAQ,WAELA,GAGI,MAAMC,GA0BjB,cAAc/P,GACV,IAAIgQ,EAAQhQ,EAAK,GAAGiQ,eAAe,KAC9BjQ,EAAKiQ,eAAe,aACrBjQ,EAAKkM,QAASC,IACVA,EAAI,SAAe,UACd6D,IACD7D,EAAI,EAAQ,KAIxB,MAAM+D,EAAkBlQ,EAAKmQ,OAAO,CAACrB,EAAK3C,KACVA,EAArBiE,EAAqBjE,EAAlBkE,EAAkBlE,EAAfmE,EADmC,MAChCC,EAAYpE,EAAZoE,SACVC,EAAO1B,EAAIvQ,IAAIgS,GAMrB,OALIC,EACAA,EAAKnT,KAAK8O,GAEV2C,EAAI3K,IAAIoM,EAAU,CAACpE,IAEhB2C,GACR,IAAI2B,KAGDC,EADO1Q,EAAK,GACE,cAAoB,GAElC2Q,EAAW,IAAIT,EAAgBpE,QAAQgD,IAAKjH,IAC9C,MAAM+I,EAAiBxR,OAAOC,OAAO,CAACwR,KAAMhB,KAAiBiB,MAAO,YAAcJ,EAAQ7I,IAAQ,IAClG,OAAO,kBAAC,KAAD,eAASA,IAAKA,EAAKvE,KAAMuE,EAAK7H,KAAMkQ,EAAgB3R,IAAIsJ,IAAU+I,MAIvEG,EAAU3R,OAAOC,OAAO,CAACqG,KAAM,SAAUsL,QAAS,KAAON,EAAO,GAAS,IACzEO,EAAU7R,OAAOC,OAAO,CAACqG,KAAM,SAAUsL,QAAS,KAAON,EAAO,GAAS,IACzEQ,EAAU9R,OAAOC,OAAO,CAACqG,KAAM,SAAUsL,QAAS,KAAON,EAAO,GAAS,IAG/E,OACI,kBAAC,KAAD,CACInD,MAAO,IACPC,OAAQ,IACR2D,OAAQ,CACJC,IAAK,GAAIC,MAAO,GAAIC,OAAQ,GAAIC,KAAM,KAG1C,kBAAC,KAAD,MACA,kBAAC,KAAUR,GACX,kBAAC,KAAUE,GACVjB,EAAQ,kBAAC,KAAUkB,GAAa,GACjC,kBAAC,KAAD,CAASM,OAAQ,CAACC,gBAAiB,SACnC,kBAAC,KAAD,MACCd,IA3EIZ,GAGV2B,WAAa,CAAC1R,EAAM2R,KACvB,GAAI3R,EAAKzC,OAAS,EACd,OAAO,EAGX,IACI,OAAOoU,EAAI3R,EAAK,IAClB,MAAOuE,GACL,OAAO,EAGX,OAAO,GAdMwL,GAiBV6B,eAAkB5R,GACd+P,GAA0B2B,WAAW1R,EAAOmM,GAExCA,EAAK8D,eAAe,MAAQ9D,EAAK8D,eAAe,OAAS9D,EAAK8D,eAAe,iBAAmB9D,EAAK8D,eAAe,WACtG,YAAjB9D,EAAI,MAAmE,aAAxCA,EAAI,cAAoB,IAAzB,OCtB9C,MAAMyD,GAAczE,EAAQ,KACtB0E,GAAgB,KAClB,IAAIC,EAAQF,KAIZ,MAHc,YAAVE,IACAA,EAAQ,WAELA,GAGI,MAAM+B,GAuBjB,cAAc7R,GACV,MAAMmM,EAAOnM,EAAK,GACZ8R,EAAK,GACLpB,EAAUvE,EAAI,cAAoB,GACxC,MAAqB,SAAjBA,EAAI,MAA2C,SAApBuE,EAAO,MAClCtR,OAAO0M,KAAKK,GAAMD,QAASrE,IACvB,GAA2B,kBAAfsE,EAAKtE,GAAoB,CACjC,MAAM+I,EAAiBxR,OAAOC,OAAO,CAAC0S,OAAQlC,MAAmBa,EAAQ7I,IAAQ,IACjFiK,EAAGzU,KAAK,kBAAC,KAAD,eAAMwK,IAAKA,EAAKnC,KAAK,WAAWsL,QAASnJ,GAAS+I,QAG3D,kBAAC,KAAD,CACHrD,MAAO,IACPC,OAAQ,IACRxN,KAAMA,EACNmR,OAAQ,CACJC,IAAK,EAAGC,MAAO,GAAIE,KAAM,GAAID,OAAQ,IAGzC,kBAAC,KAAD,CAAeG,gBAAgB,QAC/B,kBAAC,KAAD,CAAOT,QAAQ,MACf,kBAAC,KAAD,MACA,kBAAC,KAAD,MACA,kBAAC,KAAD,MACCc,IAKY,QAAjB3F,EAAI,MAA0C,QAApBuE,EAAO,MACjCtR,OAAO0M,KAAKK,GAAMD,QAASrE,IACvB,GAA2B,kBAAfsE,EAAKtE,GAAoB,CACjC,MAAM+I,EAAiBxR,OAAOC,OAAO,CAACwR,KAAMhB,MAAmBa,EAAQ7I,IAAQ,IAC/EiK,EAAGzU,KAAK,kBAAC,KAAD,eAAMwK,IAAKA,EAAKmJ,QAASnJ,GAAS+I,QAG3C,kBAAC,KAAD,CACHrD,MAAO,IACPC,OAAQ,IACRxN,KAAMA,EACNmR,OAAQ,CACJC,IAAK,EAAGC,MAAO,GAAIE,KAAM,GAAID,OAAQ,IAGzC,kBAAC,KAAD,CAAeG,gBAAgB,QAC/B,kBAAC,KAAD,CAAOT,QAAQ,MACf,kBAAC,KAAD,MACA,kBAAC,KAAD,MACA,kBAAC,KAAD,MACCc,SApBT,GApDaD,GAGVH,WAAa,CAAC1R,EAAM2R,KACvB,GAAI3R,EAAKzC,OAAS,EACd,OAAO,EAGX,IACI,OAAOoU,EAAI3R,EAAK,IAClB,MAAOuE,GACL,OAAO,EAGX,OAAO,GAdMsN,GAiBVD,eAAkB5R,GACd6R,GAAeH,WAAW1R,EAAOmM,GAC7BA,EAAK8D,eAAe,OAAS9D,EAAK8D,eAAe,SAAW9D,EAAK8D,eAAe,kB,yBCpCpF,MAAM+B,WAAoB7D,YAErCrS,YAAYmK,GACRoF,MAAMpF,GADS,KA+BnBgM,aAAe,KACX,MAAMjS,EAAO9D,KAAKuJ,MAAMzF,KAClBkS,EAAgB,GAChBC,EAAiB,GAEvBnS,EAAKkM,QAASC,IACV,MAAMiG,EAAWpO,KAAKM,MAAM6H,EAAI,OAC1BiE,EAAIiC,KAAOC,IAAIF,EAASG,WAAWC,OAAO,cAChDN,EAAc7U,KAAK,CACf+S,EAAGA,EACHqC,mBAAoBL,EAASK,mBAC7BC,uBAAwBN,EAASM,yBAGrCP,EAAe9U,KAAK,CAChB+S,EAAGA,EACHuC,aAAcP,EAASO,iBAG/BzW,KAAKqJ,SAAS,CACV2M,cAAeA,EACfC,eAAgBA,KAlDpBjW,KAAK0W,SAAW3M,EAAM4M,OAAOA,OAC7B3W,KAAKuJ,MAAQ,CAACzF,KAAMiG,EAAMjG,KAAMkS,cAAe,GAAIY,SAAU,IAIjEC,oBACI7W,KAAK+V,eA0DTxG,SACI,OAAwC,IAApCvP,KAAKuJ,MAAMyM,cAAc3U,OAAqB,KAC3C,6BAEH,kBAAC,KAAD,CAAWgQ,MAAO,IAAKC,OAAQ,IAAKxN,KAAM9D,KAAKuJ,MAAMyM,eACjD,kBAAC,KAAD,CAAMxM,KAAK,WAAWsL,QAAQ,qBAAqBe,OAAO,YAC1D,kBAAC,KAAD,CAAMrM,KAAK,WAAWsL,QAAQ,yBAAyBe,OAAO,YAC9D,kBAAC,KAAD,CAAeA,OAAO,SACtB,kBAAC,KAAD,CAAOf,QAAQ,MACf,kBAAC,KAAD,MACA,kBAAC,KAAD,OAGJ,kBAAC,KAAD,CAAWzD,MAAO,IAAKC,OAAQ,IAAKxN,KAAM9D,KAAKuJ,MAAM0M,gBACjD,kBAAC,KAAD,CAAMzM,KAAK,WAAWsL,QAAQ,eAAee,OAAO,YACpD,kBAAC,KAAD,CAAeA,OAAO,SACtB,kBAAC,KAAD,CAAOf,QAAQ,MACf,kBAAC,KAAD,MACA,kBAAC,KAAD,SAtFKgB,GAaVgB,SAAYhT,IACf,GAAIA,EAAKzC,OAAS,EACd,OAAO,EAEX,IAEI,IADayG,KAAKM,MAAMtE,EAAK,GAAL,OACf,MACL,OAAO,EAEb,MAAOuE,GACL,OAAO,EAGX,OAAO,GA1BMyN,GA6BVJ,eAAkB5R,GACdgS,GAAYgB,SAAShT,GA9BfgS,GA0DViB,cAAiBjT,IACpB,IAAKgS,GAAYJ,eAAe5R,GAAO,MAAO,GAC9C,MAAMkS,EAAgB,GAKtB,OAJAlS,EAAKkM,QAASC,IACV,MAAMiG,EAAWpO,KAAKM,MAAM6H,EAAI,OAChC+F,EAAc7U,KAAK2G,KAAKC,UAAUmO,EAAU,KAAM,MAE/CF,EAAc1U,KAAK,O,aClEnB,MAAM0V,GAuBjB,cAAclT,GACV,MAAMmM,EAAOnM,EAAK,GAClB,OAAO,kBAAC,GAAD,CAAgBA,KAAMmM,KAzBhB+G,GAGVxB,WAAa,CAAC1R,EAAM2R,KACvB,GAAI3R,EAAKzC,OAAS,EACd,OAAO,EAGX,IACI,OAAOoU,EAAI3R,EAAK,IAClB,MAAOuE,GACL,OAAO,EAGX,OAAO,GAdM2O,GAiBVtB,eAAkB5R,GACdkT,GAAUxB,WAAW1R,EAAOmM,GACxBA,EAAK8D,eAAe,UAAY9D,EAAK8D,eAAe,SAAW9D,EAAK8D,eAAe,kBAW/F,MAAMkD,WAAuBrN,IAAMqI,UAGtCrS,YAAYmK,GACRoF,MAAMpF,GADS,KAKnBmN,QAAWpT,IACP9D,KAAKqJ,SAAS,CAACvF,KAAMA,KAJrB9D,KAAKuJ,MAAQ,CAACzF,KAAM9D,KAAK+J,MAAMjG,MAOnCyL,SACI,OACI,yBAAKrD,MAAO,CAACmF,MAAM,SACf,kBAAC,aAAD,CAAW8F,YAAa,CAAC7F,OAAQ,UAC7B,4BACI8F,QAAQ,gBACRlL,MAAO,CAACmF,MAAO,OAAQC,OAAQ,QAC/B+F,OAAQrX,KAAKuJ,MAAMzF,KAAX,KACRwT,YAAY,IACZC,UAAU,MACVC,IAAM3E,IACF7S,KAAKyX,IAAM5E,QCvDxB,MAAM6E,WCFN,MACb9X,YAAY+X,GACT3X,KAAK4X,MAAQD,EACb3X,KAAK6X,QAAU7X,KAAK4X,MAAME,OAAOD,QACjC7X,KAAK8X,OAAS9X,KAAK4X,MAAME,OAG5BC,QAAQ/K,GAEJ,OADAhN,KAAK8X,OAAOE,SAAShL,GACdhN,KAGXiY,OAAOjL,GAKL,OAJAhN,KAAK6X,QAAQK,OAAO,CAChB3H,IAAKvQ,KAAK6X,QAAQM,YAClBC,OAAQ,GACT,KAAOpL,GACHhN,KAGTqY,kBAAkBrL,GAChB,MAAMsL,EAAItY,KAAK8X,OAAOS,oBAGtB,OAFAvY,KAAK6X,QAAQK,OAAOI,EAAGtL,GACvBhN,KAAK8X,OAAOU,QACLxY,ODrBPJ,YAAY6Y,GACVtJ,MAAMsJ,GAERC,UACI,OAAO1Y,KAAK8X,OAAOa,WAGvBC,eACI,IAAIC,EAAiB7Y,KAAK8X,OAAOgB,oBAEjC,OADc9Y,KAAK6X,QAAQkB,aAAaF,IEThD,MAAMG,GAAS/J,EAAQ,KACjBvL,GAAS,IAAIvB,cACJ,MAAM8W,GAEjB,UAAgB/Q,GAAO,OAAD,mHACZxE,EAAS,IAAIvB,cADD,SAEAuB,EAAOlB,UAAP,uBAAiC0F,EAAjC,KAA0C8Q,KAAU,CAAC,UAAa,UAFlE,cAEZzW,EAFY,yBAGXA,GAHW,6CAMtB,eAAqBG,GAAU,OAAD,0HACRgB,GAAOlB,UAAU,SAAWE,EAAU,IAAKsW,KAAU,CAAC,UAAa,UAD3D,cACpBzW,EADoB,gBAGpBmB,GAAOrB,IAAIC,UAAa8B,SAAU,CAAC1B,QAASA,IAHxB,gCAInBH,GAJmB,6CAO9B,cAAoBE,EAAKyW,GAAQ,GAAQ,OAAD,0HAClBxV,GAAOlB,UAAUC,EAAKuW,KAAU,CAAC,MAASE,IADxB,cAC9B3W,EAD8B,yBAE7BA,GAF6B,6CAKxC,uBAA8B,OAAD,0HACPmB,GAAOlB,UAAU,GAAIwW,KAAU,CAACG,YAAa,iBADtC,cACnB5W,EADmB,yBAElBA,GAFkB,6CAK7B,cAAqB,OAAD,mHACVG,EAAUsW,KADA,SAEEtV,GAAOlB,UAAP,8BAAkDE,EAAS,CAAC,UAAa,UAF3E,cAEVH,EAFU,yBAGT,CAACG,UAASH,QAHD,6CAMpB,2BAAkC,OAAD,mHACvBG,EAAUsW,KADa,SAEXtV,GAAOlB,UAAP,sBAAwCE,EAAS,CAAC,UAAa,UAFpD,cAEvBH,EAFuB,yBAGtBA,GAHsB,6CAMjC,0BAAiC,OAAD,0HACVmB,GAAOrB,IAAIC,UAAagC,gBAAiB,IAD/B,cACtB/B,EADsB,yBAErBA,GAFqB,6CAKhC,iBAAuB6W,GAAY,OAAD,0HACZ1V,GAAOrB,IAAIC,UAAaiC,oBAAqB,CAAC6U,cADlC,cACxB7W,EADwB,yBAEvBA,GAFuB,6CAKlC,mBAAyBG,GAAU,OAAD,oIACZgB,GAAOlB,UAAP,iCAA4CE,EAA5C,aAAiEsW,KAAU,CAAC,UAAa,UAD7E,UACxBzW,EADwB,OAExB8W,EAAY,CAACC,gBAAiB,EAAGC,UAAW,GAC/B,MAAfhX,EAAI1C,OAHsB,oBAIpB2Z,EAAUjX,EAAIzC,QAAQ,GAJF,yCAMfuZ,GANe,UAQtBC,EAAkBE,EAAQC,SAASH,gBAErB,KADdC,EAAYC,EAAQC,SAASC,UATP,kCAWHhW,GAAOlB,UAAP,6BAAwCE,EAAxC,aAA6DsW,KAAU,CAAC,UAAa,UAXlF,QAWhBW,EAXgB,OAYtBL,EAAkBK,EAAK7Z,QAAQ,GAAG8Z,iBAClCL,EAAYI,EAAK7Z,QAAQ,GAAG+Z,cAAgBP,EAbtB,iCAenB,CAACA,kBAAiBC,cAfC,iCAiBvBF,GAjBuB,8CAoBlC,kBAAwB3W,GAAU,OAAD,oIACXgB,GAAOlB,UAAP,iCAA4CE,EAA5C,aAAiEsW,KAAU,CAAC,UAAa,UAD9E,UACvBzW,EADuB,OAEvB8W,EAAY,CAACC,gBAAiB,EAAGC,UAAW,EAAGO,OAAQ,GAAIC,UAAU,GACxD,MAAfxX,EAAI1C,OAHqB,oBAInB2Z,EAAUjX,EAAIzC,QAAQ,GAJH,yCAMduZ,GANc,cAQrBC,EAAkBE,EAAQC,SAASH,gBACnCC,EAAYC,EAAQC,SAASC,SAC7BI,EAASN,EAAQC,SAASK,OAVL,kBAWlB,CAACR,kBAAiBC,YAAWO,SAAOC,UAAS,IAX3B,iCAalBV,GAbkB,8CAkBjC,oBAA0B3W,GAAU,OAAD,0HACZgB,GAAOlB,UAAP,gCAA2CE,EAA3C,aAAgEsW,KAAU,CAAC,UAAa,UAD5E,cACzBW,EADyB,yBAExBA,EAAK7Z,QAAQ,IAFW,6CAKnC,sBAA6B,OAAD,8HACN4D,GAAOlB,UAAP,qCAAyDwW,KAAU,CAAC,UAAa,UAD3E,cAClBzW,EADkB,OAElByX,EAAazX,EAAIzC,QAAQ,GAAGka,WAC5BC,EAAc1X,EAAIzC,QAAQ,GAAGma,YAHX,kBAIjB,CAACA,cAAaD,eAJG,8CCtFjB,MAAME,WAAqBtQ,IAAMqI,UAC5CrS,YAAYmK,GAAO,IAAD,EAChBoF,MAAMpF,GADU,YAqHlBoQ,aAAe,KACbna,KAAKqJ,SAAS,CAAC+Q,YAAYpa,KAAKuJ,MAAM6Q,cAtHtB,KAwHlBC,eAAiB,KACfra,KAAKqJ,SAAS,CAACiR,cAActa,KAAKuJ,MAAM+Q,gBAzHxB,KAgIlBC,SAAY9X,IACT,IACC,OAAOA,EAAI+X,MAAM,MAAMC,OAAOC,IAAQA,EAAKC,SAAS,aAAarZ,KAAK,MACtE,MAAM+G,GACN,OAAO5F,IAjITzC,KAAK0W,SAAW3M,EAAM4M,OAAOD,SAC7B1W,KAAK0D,OAAS,IAAIvB,cAClBnC,KAAKuJ,MAAQ,CAAC6Q,YAAW,EAAMQ,mBAAmB,IAGlD,IAAIC,EAAiB,CAACxM,EAAMyM,IACnB,kBAAC,IAAD,CAAQtR,KAAK,OAAOkC,QAAO,uCAAE,WAAOsH,GAAP,mBAAAnP,EAAA,sDAM5BkX,EAAY/H,EAAIgI,OAAOC,WAMvBC,EAAMH,EAAUE,WAAWE,UAC7BC,EAAQ,GAbsB,KAc1BF,EAd0B,OAe3B,IAf2B,OAgB3B,IAhB2B,OAiB3B,IAjB2B,+BAexBE,EAAO,UAfiB,mCAgBxBA,EAAO,SAhBiB,oCAiBxBA,EAAO,WAjBiB,oCAmBlC1I,QAAQC,IAAIuI,GAnBsB,UAoB5B,EAAKd,WAAWU,EAAO1T,KAAKgU,GApBA,4CAAF,uDAsB9B,0BAAMlP,MAAO,CAACmP,WAAW,SAASC,SAAS,aAAajK,MAAM,UAAWhD,IAsC/ErO,KAAKub,aAAe,CAClBhM,OAAO,CACLzP,QAAS+a,EACT9a,SATkB,CAACsO,EAAMyM,IACpB,kBAAC,IAAD,CAAQtR,KAAK,OAAOkC,QAAO,uCAAE,WAAOsH,GAAP,SAAAnP,EAAA,sEAC5B,EAAKyW,aAAaQ,EAAO1T,MADG,2CAAF,uDAE/B,0BAAM8E,MAAO,CAACmP,WAAW,SAASC,SAAS,aAAajK,MAAM,UAAWhD,IAO1EmN,OAAQX,EACRhb,OAxCgBwO,IAClB,IAAIoN,EAAI,GACJC,EAAW,GACf,OAAQrN,GACN,IAAK,OACL,IAAK,SAAUoN,EAAI,SAAU,MAC7B,IAAK,UAAWA,EAAI,UAAWC,EAAU,CAAC9J,gBAAgB,SAAU,MACpE,IAAK,UAAW6J,EAAI,UAGtB,OAAO,kBAAC,IAAD,CAAQjS,KAAMiS,EAAGvP,MAAOwP,GAAWrN,IA+BxC,YA5BgB,CAACA,EAAMyM,KACzB,MAAMpY,EAAUoY,EAAO1T,KACvB,MAAmB,YAAhB0T,EAAOjb,OACC,kBAAC,IAAD,CAAQ2J,KAAK,UAAUmC,IAAKjJ,EAASiZ,QAAS3b,KAAKuJ,MAAMqR,mBAAmBlY,GAAUgJ,QAAO,uCAAE,WAAOsH,GAAP,SAAAnP,EAAA,6DACnG,EAAK0F,MAAMqR,mBAAmBlY,IAAW,EACzC,EAAK2G,SAAS,EAAKE,MAAMqR,oBAF0E,SAG7F3B,GAAc2C,OAAOd,EAAOhb,SAHiE,OAInG,EAAK+b,SAJ8F,2CAAF,uDAA7F,iBAOJ,kBAAC,IAAD,CAAQlQ,IAAKjJ,EAASgJ,QAAO,uCAAE,WAAOsH,GAAP,SAAAnP,EAAA,sEACjBoV,GAAc6C,QAAQpZ,GADL,cAEnC,EAAKmZ,SAF8B,2CAAF,uDAA7B,WAuBLA,SAAS,IAAD,+HACZ,EAAKxS,SAAS,CAACuR,mBAAmB,KADtB,SAEM,EAAKlX,OAAOrB,IAAIC,UAAa4B,SAAS,IAF5C,OAGK,MADX3B,EAFM,QAGL1C,QACF,EAAKkS,SACJ,EAAKA,QAAQpC,OACX,EAAKoM,YAAYxZ,EAAIzC,SACrB,EAAKyb,cAPD,6CAYdQ,YAAYjY,GACT,OAAOA,EAAK8O,IAAI3C,IACd,MAAMvN,EAA2B,YAAjBuN,EAAI,OAAyBA,EAAI,QAAc,GAC/D,OAAO/M,OAAOC,OAAO8M,EAAK,CAAC,YAAcvN,MAIxC0X,WAAW1X,EAAQ0Y,GAAO,IAAD,wIACX,EAAK1X,OAAOrB,IAAIC,UAAa6B,WAAW,CAACzB,QAAQA,IADtC,OACvBH,EADuB,OAE7B,EAAK8G,SAAS,CACZ+Q,YAAY,EACZ4B,qBAAqBzZ,EAAIzC,QAAQsb,KAJN,6CAQzBd,aAAa5X,GAAS,IAAD,wIACP,EAAKgB,OAAOrB,IAAIC,UAAa6B,WAAW,CAACzB,QAAQA,IAD1C,OACnBH,EADmB,OAEzB,EAAK8G,SAAS,CACZiR,cAAc,IAEb,EAAK2B,aACN,EAAKA,YAAYtM,OAAO7H,KAAKM,MAAM7F,EAAIzC,QAAQC,WANxB,6CAiBtB8W,oBAAoB,IAAD,kIACf,EAAKgF,SADU,6CAaxBtM,SACE,OAAO,yBAAKjB,UAAU,uBACpB,kBAAC,KAAD,CACYpD,MAAO,OACPC,QAASnL,KAAKuJ,MAAM6Q,WACpBhP,SAAUpL,KAAKma,aACf9O,KAAMrL,KAAKma,aACX5O,WAAW,SACX8F,MAAM,MACNL,OAAO,MAClB,kBAAC,KAAD,CAAWM,OAAQ,QACJD,MAAO,OACPrF,KAAK,OACLkQ,MAAM,SACN9U,KAAK,aACLiH,MAAOrO,KAAKua,SAASva,KAAKuJ,MAAMyS,uBAAuB,MAGvE,kBAAC,KAAD,CACY9Q,MAAO,OACPC,QAASnL,KAAKuJ,MAAM+Q,aACpBlP,SAAUpL,KAAKqa,eACfhP,KAAMrL,KAAKqa,eACX9O,WAAW,SACX8F,MAAM,MACNL,OAAO,MACnB,kBAAC,GAAD,CAAmB9E,MAAO,CAACiQ,SAAS,UAAW3E,IAAM4E,IAAYpc,KAAKic,YAAcG,GAAWzF,OAAQ3W,QAEvG,yBAAKkM,MAAO,CAAEmQ,aAAc,KAC1B,kBAAC,IAAD,CAAQ7S,KAAK,UAAUkC,QAAS,KAAK1L,KAAK6b,WAA1C,WAIF,kBAAC,GAAD,CAAmBrE,IAAM4E,IAAYpc,KAAK+R,QAAUqK,GAAWzF,OAAQ3W,S,uBChLhE,MAAMsc,WAAyB1S,YAC1ChK,YAAYmK,GACRoF,MAAMpF,GADS,KAoBnBwS,MAAS/b,MApBU,KAwBnBgc,KAAO,OAtBHxc,KAAKyc,WAAa1S,EAAM4M,OACxB3W,KAAKuJ,MAAO,CAACmT,QAAQ,GAGnB7F,oBAAoB,IAAD,kIACjB,EAAKgF,SADY,6CAInBA,SAAS,IAAD,oJAC4B5C,GAAc0D,eAD1C,uBACJ1C,EADI,EACJA,YAAYD,EADR,EACQA,WADR,SAEkBf,GAAc2D,OAFhC,gBAEJla,EAFI,EAEJA,QAAQH,EAFJ,EAEIA,IACTsa,EAASta,EAAIzC,QAAQ2a,OAAQxK,GACxBA,EAAKvN,UAAYA,GACzBrB,OACH,EAAKgI,SAAS,CAACqT,QAAQzC,EAAYD,EAAW,IAC7CA,aAAWC,cAAY4C,WAPb,8CAkBdtN,SACI,OAAO,uBAAKjB,UAAU,WAElB,uBAAKA,UAAU,YACf,uBAAKA,UAAU,WAAf,yBAAiDtO,KAAKuJ,MAAMyQ,WAA5D,OACC,gBAAC,KAAD,CAAU0C,QAAS1c,KAAKuJ,MAAMmT,QAAWxQ,MAAO,CAAC4Q,SAAS,YAG3D,uBAAKxO,UAAU,YACf,uBAAKA,UAAU,WAAf,iBAAuC,4BAAOtO,KAAKuJ,MAAMsT,YC5BrE,MAAME,GAAQC,KAASD,MACjBE,GAAUC,KAAKD,QAErB,SAASE,GAASxR,IAIX,MAAMyR,WAAkBC,gBAC3Bzd,YAAYmK,GACRoF,MAAMpF,GADS,KAsBnBuT,WAAcxZ,GACHsZ,GAAU5H,WAAW1R,EAAOmM,GACxBA,EAAK8D,eAAe,MAAQ9D,EAAK8D,eAAe,MAAgC,kBAAf9D,EAAI,GAxBjE,KA6BnBsN,SAAYzZ,GACD,kBAAC,KAAD,CACHwN,OAAQ,IACRpG,MAAM,MACNpH,KAAMA,IAjCK,KAsCnB0Z,WAAa,KACT,MAAM1Z,EAAO9D,KAAKuJ,MAAMzF,KACxB,OAAIgS,GAAYJ,eAAe5R,GACpB,kBAAC,GAAD,CAAaA,KAAMA,EAAM6S,OAAQ3W,OAGxC6T,GAA0B6B,eAAe5R,GAClC+P,GAA0BtE,OAAOzL,GAGxC9D,KAAKsd,WAAWxZ,GACT9D,KAAKud,SAASzZ,GAGrB6R,GAAeD,eAAe5R,GACvB6R,GAAepG,OAAOzL,GAG7BkT,GAAUtB,eAAe5R,GAClBkT,GAAUzH,OAAOzL,GAGrB,+BA1DP9D,KAAK0W,SAAW3M,EAAM4M,OACtB3W,KAAKuJ,MAAQ,CAACzF,KAAM,GAAIkS,cAAe,GAAIY,SAAU,IA6DzDM,UACI,IACI,MAAMpT,EAAO9D,KAAK0W,SAAS+G,cAAgB,GAC3Czd,KAAKqJ,SAAS,CAACvF,KAAMA,IACvB,MAAOuE,KAObkH,SACI,OAAQ,kBAAC,KAAD,CAAUmO,SAAUP,IACxB,kBAACJ,GAAD,CAAOY,OAAO,kBAAkBhS,IAAI,KAChC,kBAAC,KAAD,CAAMiS,iBAAiB,IAAIF,SAAUP,GAAUU,WAAalS,IAC3C,MAANA,GACC3L,KAAK8d,oBAAoBjC,WAGjC,kBAACoB,GAAD,CAASc,IAAI,eAAepS,IAAI,KAC/B,kBAAC,GAAD,CAAkB6L,IAAMwG,GAAKhe,KAAK8d,oBAAoBE,EAAIrH,OAAQ3W,QAEnE,kBAACid,GAAD,CAASc,IAAI,SAASpS,IAAI,KACtB,kBAAC,GAAD,OAEJ,kBAACsR,GAAD,CAASc,IAAI,YAAYpS,IAAI,KAAK3L,KAAKwd,cACvC,kBAACP,GAAD,CAASc,IAAI,UAAUpS,IAAI,KACvB,6BAAMmK,GAAYiB,cAAc/W,KAAKuJ,MAAMzF,QAE/C,kBAACmZ,GAAD,CAASc,IAAI,UAAUpS,IAAI,KACvB,kBAAC,GAAD,CAAc6L,IAAMwG,GAAKhe,KAAKie,aAAaD,EAAIrH,OAAQ3W,YA/FlEod,GAQF5H,WAAa,CAAC1R,EAAM2R,KACvB,GAAI3R,EAAKzC,OAAS,EACd,OAAO,EAGX,IACI,OAAOoU,EAAI3R,EAAK,IAClB,MAAOuE,GACL,OAAO,EAGX,OAAO,G,yCCxCPlG,GAAgB8M,EAAQ,IAAxB9M,YACSG,GAAiB2M,EAAQ,IAAlCiP,QAEO,MAAMC,GAChB,sBAA4B1b,EAAI2b,EAAQC,GAAW,OAAD,qHAE7CC,EAAa,IAAInc,GAF4B,SAIjCmc,EAAWlb,KAAKd,GAAae,IAAI,CAC/C8V,YAAa,cACb1W,IAAKA,EACL2b,QAASA,EAAS,EAClBC,UAAWA,EACXE,SAAS,EACTC,UAAW,UAVoC,YAI7Cjc,EAJ6C,SAa1B,MAAfA,EAAI1C,OAbqC,uBAczC4e,EAAWlc,EAAIzC,QAd0B,kBAexC2e,GAfwC,gCAiBxC,IAjBwC,+C,sBCGhD,MAAMC,GAETC,UACI,OAAyD,OAAlD9d,eAAeC,QAAQuR,IAOlCzR,SAASuc,GAEO,IAAIyB,GdjBqB,yBcqCjCte,QAAQ+R,GAAiB,GAfVwM,IAKXA,EAAYhf,SAAWwS,GACvBxR,eAAesG,WAAWkL,IAE1BwM,EAAY/e,QAAQgf,KAAMC,IACtB5B,EAASrV,KAAKM,MAAM2W,GAAX,YACTC,MAAO/c,QAK0Bgd,IACzCvM,QAAQC,IAAIsM,KAIpBxX,KAAK0V,GAEW,IAAIyB,Gd5CqB,yBc6CjCM,SAAS,GAAKhd,IACdib,EAASjb,IACTid,OASRC,MAAMxe,EAAUkM,EAAUuS,EAAYC,GAClCtf,KAAKuf,gBdtD6B,qBcsDY3e,EAAUkM,EAAUuS,EAAYC,GAGlFE,SACI3e,eAAesG,WAAWkL,IAO9BoN,SAAS7e,EAAUkM,EAAUuS,EAAYC,GACrCtf,KAAKuf,gBdtEgC,wBcsEY3e,EAAUkM,EAAUuS,EAAYC,GAGrFC,gBAAgBpf,EAAKS,EAAUkM,EAAUuS,EAAYC,GACjD,MAEM1d,EAAO,CACThB,SAAUA,EACVkM,SAAUA,GAJF,IAAI8R,GAASze,GAyBrBG,QAAQ+R,GAAkBzQ,EAfXid,IACf,GAAIA,EAAYa,YAAa,CACzB7e,eAAegH,QAAQwK,GAAuBwM,EAAYa,cAC1C,IAAI1X,KACZC,IAAIoK,GAAuBwM,EAAYa,YAAa,CAAExX,KAAM,MAExEmX,EAAWR,IAMQc,IACnBL,EAAeK,MC/F3B,MAAM3G,GAAS/J,EAAQ,KAEhB,MAAM2Q,GACThgB,YAAYE,GACRE,KAAKqO,MAAQvO,GAId,MAAM+f,GAMTjgB,YAAYC,EAAQC,EAAS4f,GAAc,KAM3Cxd,KAAO,CAAC4d,EAASC,KAEb/f,KAAKF,QAAQgf,KAAMC,IACf,IACI,MAAMvF,EAAU1R,KAAKM,MAAM2W,GAC3Be,EAAQtG,GACV,MAAOnR,GACLqK,QAAQC,IAAItK,GACZ0X,EAAQhB,OAbhB/e,KAAKH,OAASA,EACdG,KAAKF,QAAUA,EACfE,KAAK0f,YAAcA,GAmBpB,MAAMd,GAEThf,YAAYO,GACRH,KAAKG,IAAMA,EAIf+e,SAAS1e,EAAQwf,EAAiBC,GACjBjgB,KACRM,QAAQ+R,GAAkB7R,EAASuB,IACpCA,EAAGG,KAAMge,IACLF,EAAgBE,IAChBH,IACAE,EAAoBF,MAExBI,IACA,IACIA,EAAK9R,QAAQvO,QAASqf,IAClB,IAAI5c,EAAM4c,EACV,IACI5c,EAAMuF,KAAKM,MAAM+W,GAAX,IACR,MAAO9W,IAGT4X,EAAoB1d,KAE1B,MAAO8F,GACL4X,EAAoBE,EAAOA,EAAK1Q,WAAa,qBAMzDjN,UAAUhC,EAAQiC,EAAKud,EAAiBC,GACpC,MAAMG,EAAO,IAAIC,GACX3d,EAAUsW,KACVjJ,EAAO/P,KACbogB,EAAK3Y,KAAM6Y,IAAa,MACb1f,EAAyB0f,EAAzB1f,SAAU+B,EAAe2d,EAAf3d,YACXC,EAAc,CAChBH,IAAKA,EACLI,MAAOjC,EACP8B,QAASA,EACTI,gBAAgB,EAChBC,YAAY,EACZC,UAAU,EACVC,KAAMN,GAAe,IAEzBO,OAAOC,OAAOP,EAAapC,IACRA,EAAO+f,aAAc,IAEpCrd,OAAOC,OAAOP,EAAa,CAAC4d,OAAO,EAAMrD,SAAU,KAGvDpN,EAAKzP,QAAQ+R,GAAkBzP,EAAcb,IACzC,GAAkB,MAAdA,EAAGlC,OACHkC,EAAGG,KAAMge,IACLF,EAAgBE,IAChBH,IACAE,EAAoBF,UAGxB,IACIhe,EAAGjC,QAAQgf,KAAMK,IACb,IAAI5c,EAAM4c,EACV,IACI5c,EAAMuF,KAAKM,MAAM+W,GAAX,IACR,MAAO9W,IAGT4X,EAAoB,kBAAoBle,EAAGlC,OAAS,KAAO0C,KAEjE,MAAO8F,GACL4X,EAAoB,kBAAoBle,EAAGlC,UAInDsgB,IACA,IACIA,EAAK9R,QAAQvO,QAASqf,IAClB,IAAI5c,EAAM4c,EACV,IACI5c,EAAMuF,KAAKM,MAAM+W,GAAX,IACR,MAAO9W,IAGT4X,EAAoB1d,KAE1B,MAAO8F,GACL4X,EAAoBE,EAAOA,EAAK1Q,WAAa,uBAO7DnP,QAAQG,EAAQmB,EAAMoe,EAAiBC,GACnCxf,EAASA,EAAOE,cAEhB,IAAII,EAAW,GACf,IAAK,IAAIL,KAAYkB,EAAM,CACvB,IAAIZ,EAAaC,mBAAmBP,GAChCQ,EAAeD,mBAAmBW,EAAKlB,IAC3CK,EAASI,KAAKH,EAAa,IAAME,GAGrC,IAAIE,EAASpB,KAAKG,IAQlB,MANe,QAAXM,GACAW,EAASA,EAAS,IAAML,EACxBA,OAAWQ,GAEXR,EAAWA,EAASO,KAAK,KAEtBQ,MAAMV,EAAQ,CACjBX,OAAQA,EACRgB,QAAS,MACTC,QAAS,CACL,eAAgB,oCAChB,OAAU,mBACV,eAAgBb,eAAeC,QAAQuR,KAA0B,IAErEzQ,KAAMb,IACP+d,KAAMvc,IACLyd,EAAgB,IAAIH,GAAYtd,EAAI1C,OAAQ0C,EAAIP,OAAQO,EAAIb,QAAQW,IAAIgQ,QAEvE2M,MAAOzc,IACJ0d,EAAoB,IAAIL,GAAYrd,MAIhDke,aAAajgB,EAAQiC,EAAKie,EAAOC,GAC7B,MAAMP,EAAO,IAAIC,GACX3d,EAAUsW,KACVjJ,EAAO/P,KACbogB,EAAK3Y,KAAM6Y,IAAa,MACb1f,EAAyB0f,EAAzB1f,SAAU+B,EAAe2d,EAAf3d,YAEjB,IAAKA,EAUD,YATAge,EAAQ,mTAYZ,MAAM/d,EAAc,CAChBH,IAAKA,EACLI,MAAOjC,EACP8B,QAASA,EACTI,gBAAgB,EAChBC,YAAY,EACZC,UAAU,EACVC,KAAMN,GAAe,IAEzBO,OAAOC,OAAOP,EAAapC,IACRA,EAAO+f,aAAc,IAEpCrd,OAAOC,OAAOP,EAAa,CAAC4d,OAAO,EAAMrD,SAAU,KAGvDpN,EAAK6Q,YAAYvO,GAAkBzP,EAAa8d,EAAOC,KAI/DC,YAAYngB,EAAQmB,EAAM8e,EAAOC,GAC7BlgB,EAASA,EAAOE,cAEhB,IAAII,EAAW,GACf,IAAK,IAAIL,KAAYkB,EAAM,CACvB,IAAIZ,EAAaC,mBAAmBP,GAChCQ,EAAeD,mBAAmBW,EAAKlB,IAC3CK,EAASI,KAAKH,EAAa,IAAME,GAGrC,IAAIE,EAASpB,KAAKG,IAEH,QAAXM,GACAW,EAASA,EAAS,IAAML,EACxBA,OAAWQ,GAEXR,EAAWA,EAASO,KAAK,KAE7B,IAAIuf,EAAY,EAEhB,OAAO/e,MAAMV,EAAQ,CACjBX,OAAQA,EACRgB,QAAS,MACTC,QAAS,CACL,eAAgB,oCAChB,OAAU,mBACV,eAAgBb,eAAeC,QAAQuR,KAA0B,IAErEzQ,KAAMb,IACP+d,KAAMvc,IACLse,EAAYte,EAAI1C,OACE,MAAdghB,GACAte,EAAIL,OAAO4c,KAAMzQ,IACbqS,EAAMrS,KAGP9L,IACRuc,KAAKvc,IACJ,MAAMue,EAAa,KACfve,EAAIP,OAAO8c,KAAKzQ,IACR,IACIsS,EAAQ7Y,KAAKM,MAAMiG,GAAX,KACV,MAAOhG,GACLsY,EAAQtS,OAMxB,OAAQwS,GACJ,KAAK,IACD,MACJ,KAAK,IAGL,KAAK,IACDC,IACA,MACJ,QACIpO,QAAQC,IAAI,gBAInBqM,MAAOvM,IACJkO,EAAQlO,EAAI3E,YCjRrB,MAAMiT,GAAiB,cAAD,KACzBC,QAAW5Z,GACM,YAATA,EACM,iCAEG,iBAATA,EACM,2NAQG,iBAATA,EACM,qCAEH,I,cCdf,MAAM4R,GAAS/J,EAAQ,KAER,MAAMgS,GACjBrhB,YAAY6c,GAAY,KAgCxByE,aAAe,KACXlhB,KAAKmhB,gBAAgB9X,SAAS,CAACsS,SAAS,KAjCrB,KAsCvByF,YAAc,KACVphB,KAAKmhB,gBAAgB9X,SAAS,CAACsS,SAAS,KAtC1C3b,KAAKyc,WAAaA,EAClBzc,KAAK0D,OAAS,IAAIvB,cAClBnC,KAAK0C,QAAUsW,KACfhZ,KAAKqhB,SAAWrhB,KAAKyc,WAAW6E,cAChCthB,KAAKuhB,UAAYvhB,KAAKyc,WAAW+E,eACjC,MAAMC,EAAYzhB,KAAKqhB,SAASzI,eAChC5Y,KAAKyC,IAAMgf,GAAazhB,KAAKqhB,SAAS3I,UAEtC1Y,KAAKmhB,gBAAkBnhB,KAAKyc,WAAWiF,aAAanX,QAEpDvK,KAAK2hB,eAAiB3hB,KAAKyc,WAAWkF,eACtC3hB,KAAK4hB,gBAAkB5hB,KAAKyc,WAAWmF,gBAAgBrX,QAEvDvK,KAAK6hB,WAAa7hB,KAAKyc,WAAW/F,SAAS3E,QAAQxH,QACnDvK,KAAK8hB,QAAU9hB,KAAKyc,WAAW/F,SAASqL,KAAKxX,QAG7CvK,KAAKyB,QAAUzB,KAAKmhB,gBAAgB5X,MAAM9H,QAC1CzB,KAAKgiB,QAAU,GAEfhiB,KAAKiiB,QAAS,EAMhBtP,IAAI3F,GAEA,OADAhN,KAAKuhB,UAAUtJ,OAAOjL,GACfhN,KAgBXkiB,UACIliB,KAAKkhB,eACLlhB,KAAKuhB,UAAUxJ,QAAQ,IACvB/X,KAAK6hB,WAAWlS,OAAO7H,KAAKM,MAAM,OAEtC+Z,YAAYC,GACRpiB,KAAKohB,cAEL,OADgB,IAAIiB,MAAOC,UACVF,EAKfG,SAAS/hB,GAAQ,IAAD,6HACdgiB,EAAW,EAAK/F,WAAWlT,MAAMiZ,SADnB,uBAGjB,EAAK7P,IAAI,kDAHQ,0CAMF,EAAKjP,OAAON,KAAKd,UAAa+B,iBAAiB,CAC/DiI,GAAIkW,EACJ1iB,QAAS,EAAKuhB,SAAS3I,YARL,cAUF,OAJZnW,EANc,QAUb1C,QACH,EAAK8S,IAAIpQ,EAAIzC,SAEC,MAAfyC,EAAI1C,QACH,EAAK8S,IAAL,eAAiB6P,EAAjB,uBAdgB,kBAgBbjgB,GAhBa,8CAoBhBkgB,IAAIjiB,GAAS,IAAD,iIACd,EAAK0hB,UACCE,GAAY,IAAIC,MAAOC,UAFf,SAGI,EAAK5e,OAAOlB,UAAU,EAAKC,IAAK,EAAKC,QAASQ,OAAOC,OAAO3C,EAAO,CACjFkC,QAAS,EAAKA,QACd8d,OAAO,EACP/e,QAAS,EAAKA,QACdihB,WAAW,EAAKjG,WAAWiG,cAPjB,UAUI,OAPZngB,EAHQ,QAUP1C,OAVO,uBAWV,EAAK8S,IAAI,iCAAwC,EAAKwP,YAAYC,GAAa,MAXrE,kBAYH,IAZG,cAed,EAAKO,cAAgBC,YAAW,sBAAC,sBAAA/e,EAAA,sEACvB,EAAKgf,aADkB,uBAEvB,EAAKC,aAFkB,2CAG9B,KAGA,EAAKhB,QAAQ7D,cACZ,EAAK6D,QAAQ7D,aAAapC,SAE9B,EAAK8F,eAAepF,QAxBN,kBAyBPha,GAzBO,8CA2BZwgB,gBAAiB,IAAD,kHACd,EAAKJ,gBACLK,cAAc,EAAKL,eACnB,EAAKA,cAAgB,MAEzB,EAAKhB,eAAenF,OALF,6CAQhBqG,aAAa,IAAD,4IACI,EAAKnf,OAAOrB,IAAIC,UAAa6B,WAC3C,CACIzB,QAAQ,EAAKA,QACb8b,UAAU,UAJJ,OACRjc,EADQ,OAQQ,KAFhB0gB,EAAU1gB,EAAIzC,SAETD,SACR,EAAKoiB,QAAS,EACd,EAAKc,gBACL,EAAK3B,cACL,EAAKO,eAAenF,OACpB,EAAK7J,IAAIsQ,EAAQzH,SAGE,IAAnByH,EAAQpjB,SACP,EAAKoiB,QAAS,EACd,EAAKc,gBACL,EAAK3B,cACL,EAAKO,eAAenF,OACd1Y,EAAOgE,KAAKM,MAAM6a,EAAQljB,UAChC,EAAK8hB,WAAWlS,OAAO7L,GACvB,EAAK2Y,WAAW/F,SAASwM,QAAQpf,IAvBvB,6CA2BZgf,aAAa,IAAD,mIACRpgB,EAAUsW,KADF,SAEI,EAAKtV,OAAOlB,UAAZ,4BAA4C,EAAKwf,QAAL,SAA2B,EAAvE,4CAAqHtf,EAAS,CAAC,UAAY,UAF/I,UAGI,OADZH,EAFQ,QAGP1C,OAHO,kDAIR2Z,EAAUjX,EAAIzC,QAAQ,IACjB,OAAa0Z,EAAO,MAAUnY,OAAS,GAC9C,EAAKsR,IAAI6G,EAAO,MAAU5G,IAAI3C,GACnBA,EAAKuK,MAAM,cAAc,IACjClZ,KAAK,OAEZ,EAAK0gB,QAAL,OAAyBxI,EAAO,OAVlB,6CAeZsC,UAAU,IAAD,2HACN,EAAKpZ,QADC,iEAEOuW,GAAc6C,QAAQ,EAAKpZ,SAFlC,OAELH,EAFK,OAGX,IACI,EAAKoQ,IAAIpQ,EAAIzC,QAAQ,GAAZ,aACZ,MAAMuI,GACH,EAAKsK,IAAIpQ,EAAIzC,SAEjB,EAAKmiB,QAAS,EACd,EAAKvf,QAAU,KACf,EAAKqgB,gBACL,EAAK3B,cAXM,+C,yBC5JJ,MAAM+B,WAAoBvZ,YACrChK,YAAYmK,GAAQ,IAAD,EACfoF,MAAMpF,GADS,YA8CnBwS,MAAS/b,IACLR,KAAKqJ,SAAS,CAACsS,SAAS,EAAMiB,KAAM,GAAI7L,WAAY,GAAIqS,WAAY,GAAIC,UAAW,KAAMC,gBAAiB,KAC1GtjB,KAAK2iB,cAAgBC,YAAW,sBAAC,gCAAA/e,EAAA,6DACvBnB,EAAU,EAAK+Z,WAAW8G,SAAS7gB,QADZ,SAEJuW,GAAcmK,WAAW,EAAK7Z,MAAM+Z,iBAAmB5gB,GAFnD,cAEvB0gB,EAFuB,gBAGVnK,GAAcuK,aAAa,EAAKja,MAAM+Z,iBAAmB5gB,GAH/C,QAGvBka,EAHuB,QAIpB6G,YAAyC,IAA3B7G,EAAK6G,WAAWpiB,SAC9B,EAAKkI,MAAM+Z,iBACZ,EAAKja,SAAS,CAACia,gBAAiB1G,EAAK8G,UAEzC,EAAKC,aAAa/G,EAAMwG,IARC,2CAU9B,MA1DY,KA6DnB5G,KAAO,KACCxc,KAAK2iB,gBACLiB,WAAW,KACPZ,cAAchjB,KAAK2iB,eACnB3iB,KAAK2iB,cAAgB,MACtB,KACH3iB,KAAK6jB,UAAY7jB,KAAKuJ,MAAM8Z,UAC5BrjB,KAAKqJ,SAAS,CAACsS,SAAS,MApEb,KAwEnBgI,aAAe,CAACrgB,EAAM8f,KAClB,GAAI9f,EAAKmgB,WAAY,CACjB,MACM1S,EADOzN,EAAKmgB,WACM7Q,IAAIkR,IACjB,CACHC,MAAOD,EAAIC,MACXC,SAAUF,EAAIE,SACdC,MAAOH,EAAII,SAAWJ,EAAIK,gBAC1BC,eAAgBN,EAAIM,eACpBC,QAASP,EAAIK,gBACbG,OAAQR,EAAIS,eACZC,UAAWV,EAAIW,oBACfC,QAASZ,EAAIa,kBAGlB/R,IAAI3C,IACC,MAAMyM,EAAUkI,SAAU3U,EAAKuU,UAAYvU,EAAKgU,MAAQ,IAAO,IAC/D,IAAIY,EAAa,GACG,IAAhB5U,EAAKqU,QAAiC,IAAjBrU,EAAKoU,SAAiBpU,EAAKyU,QAAU,IAC1DG,GAAU,WAAQ5U,EAAKyU,QAAb,cAEVzU,EAAKqU,OAAS,IACdO,GAAU,WAAQ5U,EAAKqU,OAAb,aAEVrU,EAAKoU,QAAU,IACfQ,GAAU,WAAQ5U,EAAKoU,QAAb,cAEVpU,EAAKmU,eAAiB,IACtBS,GAAU,WAAQ5U,EAAKmU,eAAb,aAGd,IAAIJ,EAAW/T,EAAK+T,SAAW,MAK/B,OAJI/T,EAAK+T,SAAW,MAChBA,EAAWY,SAAU3U,EAAK+T,SAAW,IAAQ,IAAM,MAGhD,CACH9Y,MAAM,GAAD,OAAK+E,EAAK8T,MAAV,YAAmBzgB,EAAKogB,QAAxB,KACLM,SAAUA,EACVc,MAAM,GAAD,OAAK7U,EAAKuU,UAAV,YAAuBvU,EAAKgU,OAA5B,OAAoCY,GACzCpL,SAAUiD,KAItB,IAAIqI,EAAO3B,EAKX,GAJIA,EAAWrJ,WACXgL,EAAO/kB,KAAKuJ,MAAM6Z,WAClB2B,EAAI,gBAAsBA,EAAI,WAE9B/kB,KAAKglB,MAAO,CACZ,MAAM3B,GAAarjB,KAAKglB,MAAM1C,UAAY,KAAM2C,QAAQ,GAAK,IAE7D,YADAjlB,KAAKqJ,SAAS,CAAC0H,aAAYqS,WAAY2B,EAAM1B,cAGjDrjB,KAAKqJ,SAAS,CAAC0H,aAAYqS,WAAY2B,MA9H5B,KAkInBG,QAAU,IACCllB,KAAKuJ,MAAM6Z,WAAW9J,iBAAmB,mCAE1CtZ,KAAKuJ,MAAM6Z,WAAW9J,gBAFoB,IAEFtZ,KAAKuJ,MAAM6Z,WAAW7J,UAFpB,KAEiCvZ,KAAKuJ,MAAM6Z,WAAWtJ,OAFvD,KAjIhD9Z,KAAKyc,WAAa1S,EAAM4M,OACxB3W,KAAKuJ,MAAQ,CAACoS,SAAS,EAAOiB,KAAM,GAAI7L,WAAY,GAAIqS,WAAY,GAAIC,UAAW,KAAMC,gBAAiB,IAC1GtjB,KAAKqQ,QAAU,CACX,CACInF,MAAO,oBACPgF,UAAW,QACXvE,IAAK,SAGT,CACIT,MAAO,WACPgF,UAAW,WACXvE,IAAK,YAGT,CACIT,MAAO,8CACPgF,UAAW,QACXvE,IAAK,QACL4D,OAAQ,CAACvN,EAAM8Y,EAAQ3K,KACnB,MAAMuM,EAAU,EAAI5B,EAAOrB,SAC3B,OAAO,2BAEH,uBAAKvN,MAAO,CAACiZ,SAAU,WAAY9T,MAAO,QAASC,OAAQ,OAAQM,gBAAiB,WAChF,uBAAK1F,MAAO,CACRiZ,SAAU,WACVjQ,IAAK,MACLC,MAAO,MACP9D,MAAOqL,EAAU,KACjBpL,OAAQ,OACRM,gBAAiB,0BAGrB,uBAAK1F,MAAO,CAACiZ,SAAU,WAAYjQ,IAAK,MAAOkQ,UAAW,SAAS/T,MAAM,SACpErP,QAqG7BuN,SACI,OAAKvP,KAAKuJ,MAAMoS,QAkBT,2BACH,gBAAC,IAAD,CAAQnS,KAAK,UAAU0C,MAAO,CAAC+I,OAAQ,qBAAvC,aACc,gBAAC,KAAD,CAAOuC,IAAMwG,GAAOhe,KAAKglB,MAAQhH,GAC3C,gBAAC,KAAMqH,QAAP,CAAeC,YAAajX,GAAK,UAAOA,EAAP,UACjC,gBAAC,KAAMkX,QAAP,CAAeD,YAAajX,GAAK,UAAOA,EAAP,YAErC,2BACI,gBAAC,KAAD,CAAUuP,iBAAkB,CAAC,MACzB,gBAAC,KAASb,MAAV,CAAgBY,OAAQ3d,KAAKklB,UAAWvZ,IAAI,KACxC,gBAAC,KAAD,CAAOoF,WAAY/Q,KAAKuJ,MAAMwH,WAAYV,QAASrQ,KAAKqQ,cA1BhErQ,KAAK6jB,UACE,2BACH,gBAAC,IAAD,CAAQra,KAAK,UAAU0C,MAAO,CAAC+I,OAAQ,qBAAvC,cACgBjV,KAAK6jB,WAErB,2BACI,gBAAC,KAAD,CAAUjG,iBAAkB,CAAC,MACzB,gBAAC,KAASb,MAAV,CAAgBY,OAAQ3d,KAAKklB,UAAWvZ,IAAI,KACxC,gBAAC,KAAD,CAAOoF,WAAY/Q,KAAKuJ,MAAMwH,WAAYV,QAASrQ,KAAKqQ,cAMjE,6BCvJvB,SAASmV,GAAiBzb,GAAQ,MAAD,EACHO,wBAAS/I,GADN,gCAEL+I,mBAAS,KAFJ,mBAEtBxG,EAFsB,KAEhBof,EAFgB,OAGC5Y,oBAAS,GAHV,mBAGbmb,GAHa,aAIDnb,wBAAS/I,GAJR,mBAItBmkB,EAJsB,KAIdC,EAJc,KAK7B3a,oBAAU,MACK,uCAAG,gCAAAnH,EAAA,6DACV4hB,GAAW,GACLG,EAAQ,IAAIzjB,cAFR,SAGQyjB,EAAMvjB,IAAIC,UAAa2C,YAAa,IAH5C,OAGJ1C,EAHI,OAIV2gB,EAAQ3gB,EAAIzC,QAAQgE,MACd1B,EAAUoF,EAAQG,cAAR,QACbpF,EAAIzC,QAAQgE,KAAKzC,OAAQ,IAAMe,GAC9BujB,EAAUpjB,EAAIzC,QAAQgE,KAAK,GAAGsD,MAElCqe,GAAW,GATD,2CAAH,qDAWX3jB,IACD,IAEHkJ,oBAAU,KAMRjB,EAAM8b,UAAUH,IAChB,CAACA,EAAO3b,IAKV,OACI,kBAAC,KAAD,CAAQ2T,SAJUrP,IAClBsX,EAAUtX,IAGsBnC,MAAO,CAACmF,MAAO,UAC1CvN,EAAK8O,IAAK3C,GACA,kBAAC,KAAO6V,OAAR,CAAezX,MAAO4B,EAAK7I,KAAMuE,IAAKsE,EAAK3D,IAAK2D,EAAK7I,Q,MCpBrE0e,GAAUC,KAAVD,OAEQ7W,EAAQ,KAGvB,MAAM+W,WAAuBpc,YAEzBhK,YAAYmK,GAAQ,IAAD,EACfoF,MAAMpF,GADS,YAenB/H,KAAO,CAACqM,EAAOmU,KACXxiB,KAAKqJ,SAAS,CAACgF,MAAOA,EAAOmU,SAAUA,GAAW,KAC9CxiB,KAAKimB,aAAa1b,QAAQuN,OAAOE,SAAS3J,EAAO,MAjBtC,KAmDlB6X,YAnDkB,sBAmDJ,8BAAAriB,EAAA,6DACL0f,EAAW,IAAItC,GAAc,GADxB,SAEOsC,EAAShB,SAAS,IAFzB,cAELhgB,EAFK,yBAGJA,GAHI,2CAnDI,KA6EnB4jB,WAAa,IACFnmB,KAAKomB,eAAezN,WA9EZ,KAiFnBC,aAAe,IACJ5Y,KAAKshB,cAAc1I,eAlFX,KAqFnByN,eAAkBlH,GACPnf,KAAKshB,cAAcjJ,kBAAkB8G,GAtF7B,KAyFnBmC,YAAY,IACD,IAAI5J,GAAS1X,KAAKimB,aAAa1b,SA1FvB,KA6FnBiX,aAAa,IACF,IAAI9J,GAAS1X,KAAK0W,SAAS4P,WAAW/b,SA9F9B,KAiGnB6b,aAAe,IACJpmB,KAAKshB,cAAcxJ,OAlGX,KAqGnByO,uBAAyB,IACdvmB,KAAKwhB,eAAe1J,OAtGZ,KAyGnB0O,UAAaxZ,GACFhN,KAAKwhB,eAAevJ,OAAOjL,GA1GnB,KA6GnByZ,aAAe,IACJzmB,KAAK0W,SAASqL,KAAKxX,QA9GX,KAiHnBmc,WAAa,IACF1mB,KAAK0W,SAAS3E,QAAQxH,QAlHd,KAqHnB2W,aAAgBxe,IACZ1C,KAAK0hB,aAAanX,QAAQlB,SAAS,CAACsS,SAAS,IAC7C3b,KAAK8d,oBAAoBvT,QAAQgS,MAAM,CAAC7Z,QAASA,IACjD1C,KAAK2hB,eAAepF,MAAM,CAAC7Z,QAASA,KAxHrB,KA4HnB0e,YAAc,KACVphB,KAAK0hB,aAAanX,QAAQlB,SAAS,CAACsS,SAAS,IAC7C3b,KAAK2hB,eAAenF,OACpBxc,KAAK8d,oBAAoBvT,QAAQiS,QA/HlB,KAkInBmK,OAAU3T,IACN,MAAMgL,EAAKhe,KAAK0W,SAASkQ,MAAMrc,QACzBsc,EAAY7I,EAAG8I,QAAQ,aACvBC,EAAU/I,EAAG8I,QAAQ,WACrBE,EAAchJ,EAAG8I,QAAQ,eACzBG,EAAYjJ,EAAG8I,QAAQ,aACvBI,EAAclJ,EAAG8I,QAAQ,eACzBK,EAAanJ,EAAG8I,QAAQ,cACxBM,EAAoBpJ,EAAG8I,QAAQ,qBAC/BO,EAAmBrJ,EAAG8I,QAAQ,oBAC9BQ,EAAatJ,EAAG8I,QAAQ,cAEV,WAAhBE,EACAhnB,KAAKqmB,gBAAe,IAAItF,IAAkBC,QAAQ6F,IAElD7I,EAAG3U,SAAS,CACRke,OAAO,EACPV,UAAWA,EACXE,QAASA,EACTC,YAAaA,EACbC,UAAWA,EACXC,YAAaA,EACbC,WAAYA,EACZC,kBAAmBA,EACnBC,iBAAkBA,EAClBC,WAAYA,KAzJpBtnB,KAAKwnB,SAAWxnB,KAAK+J,MAAMyd,UAAY,MACvCxnB,KAAK0W,SAAW1W,KAAK+J,MAAM4M,OAC3B3W,KAAKimB,aAAerc,cACpB5J,KAAK0hB,aAAe9X,cAEpB5J,KAAK4hB,gBAAkBhY,cAEvB5J,KAAKynB,YAAcznB,KAAKynB,YAAYC,KAAK1nB,MACzCA,KAAK2nB,aAAe3nB,KAAK2nB,aAAaD,KAAK1nB,MAE3CA,KAAKuJ,MAAQ,CAAC8E,MAAO,GAAIsN,SAAS,GAUtC9E,oBACQ7W,KAAK+J,MAAM6d,gBACX5nB,KAAK+J,MAAM6d,eAAe5nB,MAG9B,IAAI6nB,EAAsB,CACtBC,eAAe,WAAD,4BAAE,WAAehQ,EAAQD,EAASkQ,EAAKC,EAAQ7K,GAA7C,eAAAtZ,EAAA,sEACSsa,GAAiB8J,eAAenQ,EAAOa,WAAWoP,EAAIxX,IAAIwX,EAAI3P,QADvE,OACRqG,EADQ,OAEZtB,EAAS,KAAMsB,EAAS7L,KAAI,SAASsV,GACjC,IAAIC,EAAO,GAIX,MAHG,SAAUD,EAAKE,QACdD,EAAMD,EAAKE,MAAL,MAEH,CACHC,QAASH,EAAK9gB,KACdiH,MAAO6Z,EAAK9gB,KACZkhB,KAAMH,OAVF,2CAAF,2DAAC,IAgBnBnoB,KAAKomB,eAAemC,WAAa,CAACV,GAGtCnK,SAAS8K,IAUHb,eAAe,IAAD,4HACb,EAAKpE,UAAa,EAAKA,SAAStB,OADnB,uBAEZ,EAAKtP,IAAL,cAAgB,EAAKjQ,QAArB,uBACA,EAAKiQ,IAAL,6CAHY,iCAMhB,EAAK4Q,SAAW,IAAItC,GAAc,GANlB,SAOE,EAAKsC,SAASd,IAAI,IAPpB,cAOVlgB,EAPU,OAQZ,EAAKghB,SAAStB,SACd,EAAKsB,SAAStB,QAAS,GATX,kBAWT1f,GAXS,8CAcdklB,cAAe,IAAD,kHACd,EAAKlE,UACL,EAAKA,SAASzH,UAFA,6CA0FpBvM,SAEI,OACI,uBAAKjB,UAAU,qBAEX,uBAAKma,WAAazV,GAAQA,EAAInH,iBAAkBqG,OAAQlS,KAAK2mB,QACzD,gBAAC,aAAD,CAAWxP,YAAa,CAAC7F,OAAQ,SAAUoX,SAAU,KAAK1oB,KAAKimB,aAAa1b,QAAQuN,OAAO6Q,WAAY,gBAAC,KAAD,CACnGnR,IAAKxX,KAAKimB,aACVja,KAAMhM,KAAKwnB,SACXtL,MAAM,SACN7K,MAAO,OACPC,OAAQ,OACRoM,SAAU1d,KAAK0d,SACftW,KAAK,eACL+E,SAAU,GACVyc,iBAAiB,EACjBC,YAAY,EACZC,qBAAqB,EACrBC,YAAa,CACTC,gBAAiBC,KAErBC,WAAY,CACRC,2BAA2B,EAC3BC,0BAA0B,EAC1BC,gBAAgB,EAChBC,iBAAiB,EACjBC,QAAS,EACTC,0BAA0B,OAKtC,gBAAC,GAAD,CAAchS,IAAKxX,KAAK0hB,aAAc/K,OAAQ3W,OAC9C,gBAAC,GAAD,CAAawX,IAAMwG,IAAMhe,KAAK2hB,eAAe3D,GAAKrH,OAAQ3W,OAC1D,gBAAC,GAAD,CAAcwX,IAAKxX,KAAK4hB,gBAAiBjL,OAAQ3W,SAOjE,MAAMypB,WAAqB7f,YACvBhK,YAAYmK,GACRoF,MAAMpF,GADS,KAMnB2T,SAAYrP,IACRrO,KAAKqJ,SAAS,CAAC5H,QAAS4M,KALxBrO,KAAKuJ,MAAQ,CAACoS,SAAS,EAAOla,QAAS,MACvCzB,KAAK2W,OAAS5M,EAAM4M,OAOxBpH,SACI,OACI,uBAAKjB,UAAU,wBACX,gBAAC,IAAD,CAAQ5C,QAAS1L,KAAK2W,OAAOgR,aACrBhM,QAAS3b,KAAKuJ,MAAMoS,SAD5B,OAEA,gBAAC,IAAD,CAAQjQ,QAAS1L,KAAK2W,OAAO8Q,aAA7B,UACA,gBAAC,IAAD,CAAQ/b,QAAS1L,KAAK2W,OAAOuP,aAA7B,QAJJ,eAKgB,gBAAC,KAAD,CACZxI,SAAU1d,KAAK0d,SACfxR,MAAO,CAACmF,MAAO,UAEf,gBAACyU,GAAD,CAAQzX,MAAM,SAAd,OACA,gBAACyX,GAAD,CAAQzX,MAAM,SAAd,OACA,gBAACyX,GAAD,CAAQzX,MAAM,SAAd,OACA,gBAACyX,GAAD,CAAQzX,MAAM,WAAd,OACA,gBAACyX,GAAD,CAAQzX,MAAM,WAAd,MACA,gBAACyX,GAAD,CAAQzX,MAAM,YAAd,MACA,gBAACyX,GAAD,CAAQzX,MAAM,MAAd,cAEJ,gBAAC,KAAD,CAAS7E,KAAK,aAjBd,UAkBO,gBAACgc,GAAD,CAAkBK,UAAYH,IACjC1lB,KAAK2W,OAAO+L,WAAagD,OASzC,MAAMgE,WAAqB9f,YACvBhK,YAAYmK,GACRoF,MAAMpF,GADS,KAMnBwS,MAAS/b,IACL,MAAMuP,EAAO/P,KACbA,KAAKqJ,SAAS,CAACsgB,MAAM,IAErB/F,WAAW,KACH7T,EAAKxG,MAAMogB,OACX5Z,EAAK1G,SAAS,CAACsS,SAAS,IACxB5L,EAAK4S,cAAgBC,YAAY,KAEzB,GAAyB,YAArB7S,EAAK6Z,YACL,OAEJ7Z,EAAK6Z,YAAc,UACnB,MAAMC,EAAM,IAAIjL,GAASkL,ICrS3B,EAACC,EAAWjc,KAC9B,IAAKic,EAAW,CAEZ,GADAjc,EAAUA,GAAW,mBACA,qBAAVkc,MACP,MAAM,IAAIA,MAAMlc,GAEpB,MAAMA,IDgSUmc,CAAOzpB,EAAOuT,eAAe,WAAY,uBACzC,MAAMrR,EAAUlC,EAAM,QACtBqpB,EAAIrnB,UAAU,GAAd,6BAAyCE,EAAzC,gBAAkEwnB,IAC9Dna,EAAK6Z,YAAc,SACnB,MAAMO,EAAWD,EAAU,GACrB1Q,EAAU,CACZ0K,SAAU,EACVS,eAAgB,EAChByF,kBAAmB,GAEvBD,EAAQ,WAAena,QAASC,IAC5BuJ,EAAO,UAAgBvJ,EAAI,SAC3BuJ,EAAO,gBAAsBvJ,EAAI,eACjCuJ,EAAO,mBAAyBvJ,EAAI,oBAExCF,EAAK1G,SAAS,CACVqT,QAASlD,EAAQmL,eAAiBnL,EAAQ0K,SAAW,IACrDmG,eAAgB7Q,EAAQ4Q,kBAAoB5Q,EAAQ0K,SAAW,IAC/DhZ,MAAM,6CAAD,OAA+CsO,EAAQ4Q,kBAAvD,YAA4E5Q,EAAQ0K,SAApF,YAAgG1K,EAAQmL,eAAxG,gBAETxF,IACApP,EAAK6Z,YAAc,SACnB,IACI7Z,EAAK4G,OAAO6P,UAAUrH,GACxB,MAAO9W,GACLqK,QAAQC,IAAItK,OAKtB,OAGX,MArDY,KAyDnBmU,KAAO,KACHxc,KAAK4pB,YAAc,SACnB5pB,KAAKsqB,gBAAkB,SACvBtqB,KAAKqJ,SAAS,CAACsS,SAAS,EAAOe,QAAS,EAAG2N,eAAgB,EAAGV,MAAM,IAChE3pB,KAAK2iB,eACLK,cAAchjB,KAAK2iB,gBA5DvB3iB,KAAKuJ,MAAQ,CAACoS,SAAS,EAAOe,QAAS,EAAG2N,eAAgB,EAAGV,MAAM,GACnE3pB,KAAK2W,OAAS5M,EAAM4M,OA+DxBpH,SACI,OAAKvP,KAAKuJ,MAAMoS,QAEZ,2BAAM3b,KAAKuJ,MAAM2B,MACb,gBAAC,KAAD,CAAUwR,QAAS1c,KAAKuJ,MAAMmT,QAAS2N,eAAgBrqB,KAAKuJ,MAAM8gB,kBAH1C,6BAUzBrE,U,UE/UA,MAAMuE,WAAkB3gB,IAAMqI,UAEzCrS,YAAYmK,GACRoF,MAAMpF,GADS,KAInBygB,eAAiB,IACNxqB,KAAK8X,OAAOA,OALJ,KAWnB2S,YAAcC,oBAAUrc,KAEpBsc,EADgC3qB,KAAK+J,MAA7B4gB,qBACYtc,IAChB,KANRwI,oBACI7W,KAAKwqB,iBAAiBI,UAAU1e,MAAM2e,WAAa,EAOvDtb,SACI,OACI,kBAAC,KAAD,CACIub,SAAU7B,IACV5X,MAAO,OACPmG,IAAKwG,IACDhe,KAAK8X,OAASkG,GAElB3P,MAAOrO,KAAK+J,MAAMghB,YAClB/e,KAAK,MACLkQ,MAAM,SACNwB,SAAU1d,KAAKyqB,e,2DCzChB,MAAMhB,WAAqB7f,IAAMqI,UAE5CrS,YAAYmK,GACRoF,MAAMpF,GADS,KAOnBihB,WAAa,KACThrB,KAAKqJ,SAAS,CAAC4hB,WAAW,IAC1BjrB,KAAKkrB,YAAYC,WATF,KAYnBC,cAAgB,KACZprB,KAAKqJ,SAAS,CAAC4hB,WAAW,KAX1BjrB,KAAKuJ,MAAQ,CAAC0hB,WAAW,GACzBjrB,KAAKkrB,YAAanhB,EAAMmhB,YACxBlrB,KAAKqrB,SAAWthB,EAAMmhB,YAAYG,SAYtC9b,SAAU,MAAD,EAKDvP,KAAK+J,MAHLuhB,EAFC,EAEDA,UACAC,EAHC,EAGDA,aACAC,EAJC,EAIDA,cAEJ,OAAO,6BACH,kBAAC,KAAD,KAEQxrB,KAAKuJ,MAAM0hB,UAAY,0BAAMvf,QAAS1L,KAAKorB,eAAe,kBAACK,GAAA,EAAD,OACtD,0BAAM/f,QAAS1L,KAAKgrB,YAAY,kBAACU,GAAA,EAAD,OAGxC,kBAAC,IAAD,CAAQliB,KAAK,OAAO4C,KAAM,kBAACuf,GAAA,EAAD,MAAwBjgB,QAAS4f,IAC3D,kBAAC,IAAD,CAAQ9hB,KAAK,OAAOoiB,SAAUJ,EAAepf,KAAM,kBAACyf,GAAA,EAAD,MAAyBngB,QAAS6f,OChCrG,MAAMvS,GAAS/J,EAAQ,KAER,MAAM6c,GAKjBlsB,YAAY6B,GAAU,KAQtBghB,IAAM,CAAChgB,EAAKspB,EAAaC,KACrB,MAAMtpB,EAAUsW,KACJ,IAAI4F,GAASkL,IAErBrJ,aAAa,CACb/d,QAASA,EACTjB,QAASzB,KAAKyB,SACfgB,EAAKspB,EAAaC,IAfJ,KAyBrBzJ,SAAW,CAAC0J,EAAMzJ,EAAUuJ,KACZ,IAAInN,GxB/B2B,uBwBgCvCte,QAAQ+R,GAAkB,CAC1B/F,GAAIkW,EACJ1iB,QAASmsB,GACTlqB,IACiB,KAAbA,EAAGlC,OACHkC,EAAGG,KAAMge,IACL6L,EAAY7L,EAAG,MACfH,IACAgM,EAAYhM,KAGhBgM,EAAY,UAGhB5L,IACA4L,EAAY5L,MAzChBngB,KAAKyB,QAAUA,GCTvB,MAAMuN,GAAgBC,EAAQ,KAGf,MAAMid,WAAkBtiB,YAEnChK,YAAYmK,GACRoF,MAAMpF,GADS,KAMnBqF,UAAY,CAACC,EAAWvL,EAAMwL,KAE1B,MAAMjB,EAAQvK,EAAK,GAAGuL,EAAU1D,KAEhC,GAAI2D,GAAUA,EAAM,OAApB,CACI,MAAMC,EAASvP,KAAKuJ,MAAM+F,OAAX,OAA4BD,EAAU1D,KACjD4D,IACAF,EAAS,OAAaE,OAH9B,CAQA,IACI,GAAI3F,YAAgB4F,cAAcnB,EAAM7E,MAEpC,YADA6F,EAAS,OAAahB,GAAS,4BAAOA,IAI9C,MAAOhG,IAGgB,kBAAXgG,EAIW,iBAAXA,EAIW,mBAAXA,EAIS,cAAjBgB,EAAU1D,KAAwC,WAAjB0D,EAAU1D,KAAqC,QAAjB0D,EAAU1D,MACzE0D,EAAS,OAAahB,GAAS,2BAAMA,EAAMoB,aAJ3CJ,EAAS,OAAahB,GAAS,4BAAOA,EAAMoB,YAJ5CJ,EAAS,OAAahB,GAAS,4BAAOA,EAAM/M,KAAK,KAAKoO,UAAU,EAAG,MAJnEL,EAAS,OAAahB,GAAS,4BAAOvG,KAAKC,UAAUsG,GAAOqB,UAAU,EAAG,QA5B9D,KA+CnByc,UAAY,CAACroB,EAAMwL,KACf,IAAIM,EAAO,GACPC,EAAS,GACTC,EAAO,GACX,MAAMC,EAAO/P,KA0Bb,OAxBA8D,EAAKkM,SAAQ,SAAUC,GACnB,IAAK,IAAItE,KAAOsE,EACZ,IAAKJ,EAAOlE,GAAM,CACd,MAAM0D,EAAY,CACdnE,MAAOS,EACPuE,UAAWvE,EACXA,IAAKA,GAEToE,EAAKX,UAAUC,EAAWvL,GAC1B8L,EAAKzO,KAAKkO,GACVQ,EAAOlE,IAAO,MAM1B7H,EAAKkM,SAAQ,SAAUC,EAAME,GACzB,IAAIC,EAAW,GACfR,EAAKI,SAAQ,SAAUrE,GACnByE,EAASzE,EAAIA,KAAOsE,EAAKtE,EAAIA,QAEjCyE,EAAQ,IAAUD,EAClBL,EAAK3O,KAAKiP,MAEP,CAACR,EAAME,IA7EC,KAgFnBoH,QAAU,CAACpT,EAAMwL,KAAW,QAEHtP,KAAKmsB,UAAUroB,EAAMwL,GAFlB,mBAEjBM,EAFiB,KAEXE,EAFW,KAGxB9P,KAAKqJ,SAAS,CAACgH,QAAST,EAAME,KAAMA,EAAMR,OAAQA,KAnFnC,KAsFnBgB,eAAiB,CAACC,EAAKJ,EAAOK,KACT,gBAAbD,EAAInJ,MAAuC,QAAbmJ,EAAInJ,MAClCpH,KAAKqJ,SAAS,CACVoH,KAAM,CACFC,SAAS,EACT5Q,QAASyQ,EAAIlC,UA3FV,KAiGnBsC,eAAiB,KACb3Q,KAAKqJ,SAAS,CACVoH,KAAM,CACFC,SAAS,MApGF,QAEM1Q,KAAKmsB,UAAUpiB,EAAMjG,MAAQ,GAAIiG,EAAMuF,QAAU,IAFvD,mBAERM,EAFQ,KAEFE,EAFE,KAGf9P,KAAKuJ,MAAQ,CAAC8G,QAAST,EAAME,KAAMA,EAAMW,KAAM,CAACC,SAAS,IAsG7DnB,SACI,MAAMQ,EAAO/P,KACb,OAAQ,2BACA,gBAAC,KAAD,CACI6Q,MAAO,CAACN,EAAKJ,KACF,CACHW,cAAgBN,IACZT,EAAKO,eAAeC,EAAKJ,EAAOK,MAO5CH,QAASN,EAAKxG,MAAM8G,QACpBU,WAAYhB,EAAKxG,MAAMuG,OAC3B,gBAAC,KAAD,CACI5E,MAAO,OACPC,QAAS4E,EAAKxG,MAAMkH,KAAKC,QACzBtF,SAAU2E,EAAKY,eACftF,KAAM0E,EAAKY,eACXpF,WAAW,SACXyF,OAAO,MAEP,gBAAC,GAAD,CAAeC,OAAQlB,EAAKxG,MAAMkH,KAAK3Q,SAAW,QCnIvD,MAAMssB,WAAqBxiB,IAAMqI,UAE5CrS,YAAYmK,GACRoF,MAAMpF,GADS,KAMnBmN,QAAWmV,IAMP,GALArsB,KAAKqJ,SAAS,CAACgjB,YAAaA,EAAaC,SAAU,KAC/CtsB,KAAKusB,iBACLvsB,KAAKusB,gBAAgBrV,QAAQlX,KAAKuJ,MAAM8iB,YAAa,IAGrDrsB,KAAKwsB,eAAgB,CACrB,MAAMvc,EAAOjQ,KAAKuJ,MAAM8iB,YAAY,GACpCrsB,KAAKwsB,eAAetV,QAAQjH,KAdjB,KAmBnBkQ,KAAQnT,IACJhN,KAAKqJ,SAAS,CAACijB,SAAUtf,IACrBhN,KAAK8X,QACL9X,KAAK8X,OAAOA,OAAOE,SAAShL,IAtBjB,KA0BnByf,YAAc,KACV,GAAIzsB,KAAKuJ,MAAM8iB,aAAerV,GAAUtB,eAAe1V,KAAKuJ,MAAM8iB,aAAc,CAC5E,MAAMpc,EAAOjQ,KAAKuJ,MAAM8iB,YAAY,GACpC,OAAO,kBAAC,GAAD,CAAgBvoB,KAAMmM,EAAMuH,IAAMwG,GAAOhe,KAAKwsB,eAAiBxO,IAEtE,OAAO,+BA/BI,KAoCnB0O,aAAe,IACP1sB,KAAKuJ,MAAM+iB,SACJ,6BAAK,kBAAC,KAAD,CACRxB,SAAU7B,IACV5X,MAAO,OACPmG,IAAKwG,IACDhe,KAAK8X,OAASkG,GAElB3P,MAAOrO,KAAKuJ,MAAM+iB,SAClBtgB,KAAK,OACLkQ,MAAM,wBAIH,8BAlDI,KAsDnByQ,aAAe,IACP3sB,KAAKuJ,MAAM8iB,YACPrsB,KAAKuJ,MAAM8iB,aAAerV,GAAUtB,eAAe1V,KAAKuJ,MAAM8iB,kBAAlE,EAEW,oCACH,kBAAC,KAAD,CAAUngB,MAAO,CAAC+I,OAAQ,WAAY2X,QAAS,WAAYhP,iBAAkB,KACzE,kBAAC,KAASb,MAAV,CAAgBY,OAAO,SAAShS,IAAI,KAChC,kBAAC,GAAD,CAAW7H,KAAM9D,KAAKuJ,MAAM8iB,YACjB7U,IAAMwG,GAAOhe,KAAKusB,gBAAkBvO,OAMxD,8BAlEXhe,KAAKuJ,MAAQ,CAAC+iB,SAAU,IAuE5B/c,SACI,OAAO,6BACFvP,KAAK0sB,eAEF1sB,KAAK2sB,eACP3sB,KAAKysB,gB,QChFJ,MAAMI,WAAoBjjB,IAAMqI,UAC3CrS,YAAYmK,GACRoF,MAAMpF,GADS,KAKnBohB,QAAU,KACN,MAAM1oB,EAAMzC,KAAK8sB,UAAUtC,iBAAiB7R,WACtC+M,EAAS,IAAIoG,GAAO,KAC1B9rB,KAAK+J,MAAMgjB,eACXrH,EAAOjD,IAAIhgB,EAAMuK,IACbhN,KAAKgtB,aAAa9V,QAAQlK,GAC1BhN,KAAK0hB,aAAarY,SAAS,CAAC4hB,WAAW,KAExCje,IACChN,KAAKgtB,aAAa7M,KAAKnT,GACvBhN,KAAK0hB,aAAarY,SAAS,CAAC4hB,WAAW,OAf5B,KAmBnBgC,iBAAmB,IACc,KAAtBjtB,KAAKktB,aApBG,KAuBnBA,WAAa,IACFltB,KAAK8sB,UAAUtC,iBAAiB7R,WAtBvC3Y,KAAKqrB,SAAWthB,EAAM4M,OAyB1BpH,SAAU,MAAD,EAODvP,KAAK+J,MAJLghB,EAHC,EAGDA,YACAO,EAJC,EAIDA,UACAC,EALC,EAKDA,aACAC,EANC,EAMDA,cAEJ,OAAO,yBAAKld,UAAU,OAClB,kBAAC,GAAD,CACIyc,YAAaA,EACbvT,IAAKwG,IAAQhe,KAAK8sB,UAAY9O,GAC9BkN,YAAalrB,KACb2qB,oBAAqB3qB,KAAK+J,MAAM4gB,sBAEpC,kBAAC,GAAD,CACAnT,IAAKwG,IAAOhe,KAAK0hB,aAAe1D,GAChCkN,YAAalrB,KACbsrB,UAAWA,EACXC,aAAcA,EACdC,cAAeA,IACf,kBAAC,GAAD,CAAchU,IAAKwG,GAAMhe,KAAKgtB,aAAehP,MClDzD,MAAMmP,GAAgB,2CAEP,MAAMC,WAAiBxjB,IAAMqI,UACxCrS,YAAYmK,GACRoF,MAAMpF,GADS,KAanBgjB,aAAe,KACX,MAAM1e,EAAQrO,KAAKuJ,MAAM8jB,WAAWza,IAAI0a,GAAKA,EAAExtB,SAASwB,KAAK6rB,IAC7DntB,KAAK0lB,OAAOnD,SAASlU,EAAOrO,KAAKwiB,SAAWxV,QAf7B,KAyCnBugB,wBAA0B,CAACC,EAAMnf,KAC7B,IAAIof,EAAUC,qBAAU1tB,KAAKuJ,MAAM8jB,YACnC,MAAMld,EAAQsd,EAAQE,UAAUL,GAAKA,EAAEhhB,KAAOkhB,EAAKlhB,IACnDmhB,EAAQtd,GAAOrQ,QAAUuO,EACzBrO,KAAKqJ,SAAS,CACVgkB,WAAYI,KA9CD,KAkDnBzrB,KAAO,CAACqM,EAAOmU,KAGX,GAFAxiB,KAAKwiB,SAAWA,EAChBxiB,KAAK+qB,YAAc1c,EACfA,EAAO,CACP,MAAMuf,EAAO5tB,KAAK+qB,YAAYvQ,MAAM2S,IAAeva,IAAI,CAACmY,EAAa5a,KAC1D,CAACrQ,QAASirB,EAAaze,GAAI6D,KAEtCnQ,KAAKqJ,SAAS,CAACgkB,WAAYO,MAvD/B5tB,KAAK6tB,gBAAkB,GAEvB7tB,KAAKuJ,MAAQ,CACTukB,aAAc9tB,KAAK8tB,aACnBT,WAAY,CAAC,CAAC/gB,GAAI,IAAKxM,QAAS,MAEpCE,KAAK0lB,OAAS,IAAIoG,GAAO,KACzB9rB,KAAK+tB,QAAU/tB,KAAK+tB,QAAQrG,KAAK1nB,MACjCA,KAAKguB,WAAahuB,KAAKguB,WAAWtG,KAAK1nB,MAS3C+tB,QAAQ5d,GACJ,MAAM7D,EAAK2hB,KAAKC,OAAOluB,KAAKuJ,MAAM8jB,WAAWza,IAAI0a,GAAKA,EAAEhhB,KAAO,EACzDmhB,EAAUC,qBAAU1tB,KAAKuJ,MAAM8jB,YACrCI,EAAQU,OAAOhe,EAAQ,EAAG,EAAG,CAACrQ,QAAS,GAAIwM,OAC3CtM,KAAKqJ,SAAS,CACVgkB,WAAYI,IAIpBO,WAAWR,GACP,MAAMC,EAAUztB,KAAKuJ,MAAM8jB,WAAW5S,OAAO6S,GAAKA,EAAEhhB,KAAOkhB,EAAKlhB,IAChEtM,KAAKqJ,SAAS,CACVgkB,WAAYI,IAIpB5W,oBACQ7W,KAAK+J,MAAM6d,gBACX5nB,KAAK+J,MAAM6d,eAAe5nB,MAwBlCuP,SAAU,MACC8d,EAAcrtB,KAAKuJ,MAAnB8jB,WACP,OAAO,yBAAK/e,UAAU,YAEd+e,EAAWza,IAAI,CAAC0a,EAAGc,IACP,kBAAC,GAAD,CACJziB,IAAK2hB,EAAEhhB,GACPye,YAAauC,EAAExtB,QACfwM,GAAIghB,EAAEhhB,GACNgf,UAAW,IAAMtrB,KAAK+tB,QAAQK,GAC9B5C,cAAqC,IAAtB6B,EAAWhsB,OAC1BkqB,aAAc,IAAMvrB,KAAKguB,WAAWV,GACpCP,aAAc,IAAM/sB,KAAK+sB,aAAaO,GACtC3C,oBAAsBtc,GAAUrO,KAAKutB,wBAAwBD,EAAGjf,QCjFxF,MAAM2K,GAAS/J,EAAQ,KAEhB,MAAMof,GACTzuB,YAAY4mB,GACRxmB,KAAKwmB,UAAYA,EACjBxmB,KAAK2S,IAAM,GAET2b,iBAAkB,IAAD,kHACf,EAAK3L,gBACLK,cAAc,EAAKL,eACnB,EAAKA,cAAgB,MAHN,6CAOjB4L,WAAY,IAAD,kHACb,EAAKD,iBACL,EAAK3L,cAAgBC,YAAW,sBAAC,kCAAA/e,EAAA,6DACvBnB,EAAUsW,KACV6Q,EAAM,IAAI1nB,cAFa,SAGX0nB,EAAIrnB,UAAJ,4BAAoC,EAAKmQ,IAAL,SAAuB,EAA3D,4CAAyGjQ,EAAS,IAHvG,OAGvBH,EAHuB,QAIvBiX,EAAUjX,EAAIzC,QAAQ,IACjB,MAAUuB,OAAS,GAC1B,EAAKmlB,UAAUhN,EAAO,MAAU5G,IAAI3C,GACzBA,EAAKuK,MAAM,cAAc,IACjClZ,KAAK,OAEZ,EAAKqR,IAAL,OAAqB6G,EAAO,OAVC,2CAW9B,KAbU,8CCGFuM,KAAXD,O,MAEF9M,GAAS/J,EAAQ,KAGvB,MAAMuf,WAAkB5kB,YAEpBhK,YAAYmK,GACRoF,MAAMpF,GADS,KAenB/H,KAAO,CAACqM,EAAOmU,KACXxiB,KAAKqJ,SAAS,CAAEgF,MAAOA,EAAOmU,SAAUA,GAAY,KAChDxiB,KAAKimB,aAAanO,OAAOE,SAAS3J,EAAO,MAjB9B,KAgCnB6X,YAAc,KACV,MAAM2D,EAAM,IAAIjL,G9BpD2B,uB8BqDrC7O,EAAO/P,KAEPsmB,EAAatmB,KAAKumB,yBAEnBxW,EAAKxG,MAAMiZ,SAKhBqH,EAAIvpB,QAAQ+R,GAAkB,CAC1B/F,GAAIyD,EAAKxG,MAAMiZ,SACf1iB,QAASiQ,EAAKqW,eAAezN,YAC7B5W,IACiB,KAAbA,EAAGlC,OACHkC,EAAGG,KAAMge,IACLnQ,EAAKyW,UAAUtG,EAAG,MAClBH,IACAhQ,EAAKyW,UAAUzG,KAGnBhQ,EAAKyW,UAAU,UAGnBrG,IACApQ,EAAKyW,UAAUrG,KAnBfmG,EAAWtO,SAAS,2CAvCT,KAoHnBmO,WAAa,IACFnmB,KAAKomB,eAAezN,WArHZ,KAwHnBC,aAAe,KACX,IAAIC,EAAiB7Y,KAAKomB,eAAetN,oBAEzC,OADc9Y,KAAKomB,eAAevO,QAAQkB,aAAaF,IA1HxC,KA8HnBwN,eAAkBlH,IACd,MAAMrH,EAAS9X,KAAKomB,eACd9N,EAAIR,EAAOS,oBACjBT,EAAOD,QAAQK,OAAOI,EAAG6G,GACzBrH,EAAOU,SAlIQ,KAqInB4N,aAAe,IACJpmB,KAAKimB,aAAanO,OAtIV,KAyInByO,uBAAyB,IACdvmB,KAAK0W,SAAS4P,WAAW/b,QAAQuN,OA1IzB,KA6InB0O,UAAaxZ,IACT,MACM6K,EADS7X,KAAKumB,yBACG1O,QACvBA,EAAQK,OAAO,CACX3H,IAAKsH,EAAQM,YACbC,OAAQ,GACT,KAAOpL,IAnJK,KAsJnByZ,aAAe,IACJzmB,KAAK0W,SAASqL,KAAKxX,QAvJX,KA0JnBmc,WAAa,IACF1mB,KAAK0W,SAAS3E,QAAQxH,QAzJ7BvK,KAAKwnB,SAAWxnB,KAAK+J,MAAMyd,UAAY,MACvCxnB,KAAK0W,SAAW1W,KAAK+J,MAAM4M,OAAOD,SAElC1W,KAAKuJ,MAAQ,CAAE8E,MAAO,GAAIsN,SAAS,GAEnC3b,KAAK2nB,aAAe3nB,KAAK2nB,aAAaD,KAAK1nB,MAC3CA,KAAKynB,YAAcznB,KAAKynB,YAAYC,KAAK1nB,MAEzCA,KAAKyuB,WAAa,IAAIJ,GAAWruB,KAAKwmB,WAEtCxmB,KAAK2S,IAAM,GAUfkE,oBACQ7W,KAAK+J,MAAM6d,gBACX5nB,KAAK+J,MAAM6d,eAAe5nB,MAIlC0d,SAAS8K,IAmCHb,eAAgB,IAAD,yIACjB,EAAKjG,aAAarY,SAAS,CAACsS,SAAQ,IACpC,EAAKjZ,QAAUsW,KACT6Q,EAAM,IAAI1nB,eACV4N,EAAO,GACRwW,yBAAyBvO,SAAS,IACvCjI,EAAK2W,aAAa/W,OAAO7H,KAAKM,MAAM,OAE9BsmB,EAAS3e,EAAK6I,eAChB+V,EAAW5e,EAAKoW,aAGL,KAAXuI,IACAC,EAAWD,GAGTlM,EAAWzS,EAAKxG,MAAMiZ,SAC5B,EAAKiM,WAAWF,WAjBC,UAkBC1E,EAAIrnB,UAAUmsB,EAAU,EAAKjsB,QAAS,CACpD8f,SAAUA,EACVoM,QAAS,SACTzV,YAAa,WArBA,WAuBE,OALb5W,EAlBW,QAuBT1C,OAvBS,wBAwBb,EAAK4uB,WAAWH,iBAChB,EAAK9H,UAAUjkB,EAAIzC,SACnB,EAAK4hB,aAAarY,SAAS,CAACsS,SAAQ,IA1BvB,2BA6BjB,IACI,EAAK6K,UAAUjkB,EAAIzC,QAAQwB,KAAK,OACnC,MAAMutB,GACH,EAAKrI,UAAUjkB,EAAIzC,QAAJ,KAEnB,EAAK2uB,WAAWH,iBAChB,EAAK5M,aAAarY,SAAS,CAACsS,SAAQ,IAnCnB,8CAsCf8L,cAAe,IAAD,+HACX,EAAK/kB,QADM,wDAEVA,EAAUsW,KACV6Q,EAAM,IAAI1nB,cAHA,SAIE0nB,EAAIrnB,UAAU,SAAW,EAAKE,QAAQ,IAAKA,EAAS,IAJtD,OAIVH,EAJU,OAKhB,IACI,EAAKikB,UAAUjkB,EAAIzC,QAAQ,GAAZ,aAClB,MAAMuI,GACH,EAAKme,UAAUjkB,EAAIzC,SAGvB,EAAK4C,QAAU,KACf,EAAK+rB,WAAWH,iBAZA,8CAyDpB/e,SAEI,OACI,uBAAKjB,UAAU,qBAEX,uBAAKma,WAAazV,GAAQA,EAAInH,iBAAkBqG,OAAQlS,KAAK2mB,QACzD,gBAAC,aAAD,CAAWxP,YAAa,CAAE7F,OAAQ,SAAWoX,SAAU,KAAQ1oB,KAAKimB,aAAa1b,QAAQuN,OAAO6Q,WAAa,gBAAC,KAAD,CACzGnR,IAAKvH,GAAQjQ,KAAKimB,aAAahW,EAC/BjE,KAAMhM,KAAKwnB,SACXtL,MAAM,SACN7K,MAAO,OACPC,OAAQ,OACRoM,SAAU1d,KAAK0d,SACftW,KAAK,eACL+E,SAAU,GACVyc,iBAAiB,EACjBC,YAAY,EACZC,qBAAqB,EACrBC,YAAa,CACTC,gBAAiBC,KAErBC,WAAY,CACRC,2BAA2B,EAC3BC,0BAA0B,EAC1BC,gBAAgB,EAChBC,iBAAiB,EACjBC,QAAS,EACTC,0BAA0B,OAKtC,gBAAC,GAAD,CAAchS,IAAKvH,GAAQjQ,KAAK0hB,aAAazR,EAAM0G,OAAQ3W,SAO3E,MAAMypB,WAAqB7f,YACvBhK,YAAYmK,GACRoF,MAAMpF,GADS,KAMnB2T,SAAYrP,IACRrO,KAAKqJ,SAAS,CAAE5H,QAAS4M,KALzBrO,KAAKuJ,MAAQ,CAAEoS,SAAS,EAAOla,QAAS,MACxCzB,KAAK2W,OAAS5M,EAAM4M,OAQxBpH,SACI,OACI,uBAAKjB,UAAU,wBACX,gBAAC,IAAD,CAAQ5C,QAAS1L,KAAK2W,OAAOgR,aACzBhM,QAAS3b,KAAKuJ,MAAMoS,SADxB,OAEA,gBAAC,IAAD,CAAQjQ,QAAS1L,KAAK2W,OAAO8Q,aAA7B,UACA,gBAAC,IAAD,CAAQ/b,QAAS1L,KAAK2W,OAAOuP,aAA7B,UASDsI,UCrPA,MAAMM,WAAqBllB,IAAMqI,UAC5CrS,YAAYmK,GACRoF,MAAMpF,GADS,KAKnBglB,OAAUC,IACHA,IACChvB,KAAK8X,OAASkX,IAPH,KAkBnBhtB,KAAO,CAACqM,EAAOmU,KACXxiB,KAAK8X,OAAO9V,KAAKqM,EAAOmU,IAjBxBxiB,KAAK0W,SAAW1W,KAAK+J,MAAM4M,OAU/BE,oBACQ7W,KAAK+J,MAAM6d,gBACX5nB,KAAK+J,MAAM6d,eAAe5nB,MASlCuP,SACI,OAAO,6BACH,kBAAC,GAAD,CAAWoH,OAAQ3W,KAAMwX,IAAKwG,GAAMhe,KAAK+uB,OAAO/Q,GAAKwJ,SAAS,aCxB1E,MAAMvK,GAAUC,KAAKD,QAEd,MAAMgS,WAAkBrlB,YAC3BhK,YAAYmK,GACRoF,MAAMpF,GADS,KAqBnBmlB,QAAW1X,IACPxX,KAAKmvB,OAAOhuB,KAAKqW,IAtBF,KAyBnB4X,iBAAmB,KACf,MAAMC,EAAYrvB,KAAKuJ,MAAM8lB,UAC7B,IAAIC,EAAc,KAMlB,OALAtvB,KAAKmvB,OAAOnf,QAAQC,IACZA,EAAKof,YAAcA,IACnBC,EAAcrf,KAGfqf,GAjCQ,KAoCnB5R,SAAY2R,IAER,IAAIC,EAAc,KAElBtvB,KAAKuJ,MAAMgmB,MAAMvf,QAAQC,IACjBA,EAAKtE,MAAQ0jB,IACbC,EAAcrf,KAIlBqf,IAAgBA,EAAYpkB,MAAMskB,SAAS,UAC3CxvB,KAAK2W,OAAOtN,SAAS,CAAComB,cAAe,WAC/BH,IAAgBA,EAAYpkB,MAAMskB,SAAS,OACjDxvB,KAAK2W,OAAOtN,SAAS,CAAComB,cAAe,aAErCzvB,KAAK2W,OAAOtN,SAAS,CAAComB,cAAe,iBAGzCzvB,KAAKqJ,SAAS,CAACgmB,eAtDA,KAyDnBK,OAAS,CAACC,EAAWpvB,KACjBP,KAAKO,GAAQovB,IA1DE,KA6DnBC,QAAU,CAACC,EAAS1S,KAAc,MAChB2S,EAAgBD,EAAtBzoB,KAAekF,EAAOujB,EAAPvjB,GA0BjBijB,EAAQvvB,KAAKuJ,MAAMgmB,MACnBF,EAAS,gBAAYrvB,KAAK+vB,eAChCR,EAAMpuB,KAAK,CACP+J,MAAO4kB,GAAW,SAAW9vB,KAAK+vB,YAClCjwB,QA7BYuvB,IACRS,EAAQN,SAAS,UACV,gBAAC,GAAD,CAAgB7Y,OAAQ3W,KAAK2W,OAAQiR,eAAiBpQ,IACzDxX,KAAKkvB,QAAQ,CAAC1X,IAAKA,EAAK6X,UAAWA,IAC/BlS,GACAA,EAAS,CAAC3F,IAAKA,EAAK6X,UAAWA,KAEpCA,UAAWA,IACRS,EAAQN,SAAS,OAChB,gBAAC,GAAD,CAAUljB,GAAIA,EAAIlF,KAAM0oB,EAASnZ,OAAQ3W,KAAK2W,OAAQiR,eAAiBpQ,IAC1ExX,KAAKkvB,QAAQ,CAAC1X,IAAKA,EAAK6X,UAAWA,IAC/BlS,GACAA,EAAS,CAAC3F,IAAKA,EAAK6X,UAAWA,KAEpCA,UAAWA,IACTS,EAAQN,SAAS,OACf,gBAAC,GAAD,CAAc7Y,OAAQ3W,KAAK2W,OAAQiR,eAAiBpQ,IACvDxX,KAAKkvB,QAAQ,CAAC1X,IAAKA,EAAK6X,UAAWA,IAC/BlS,GACAA,EAAS,CAAC3F,IAAKA,EAAK6X,UAAWA,KAEpCA,UAAWA,SANZ,EAcGvX,CAAOuX,GAChB1jB,IAAK0jB,EACL/iB,OAEJtM,KAAKqJ,SAAS,CAACkmB,QAAOF,eAhGP,KAmGnBW,IAAM,KACFhwB,KAAK4vB,QAAQ,UAAY5vB,KAAK+vB,YAAY,GAAIvvB,QApG/B,KAuGnByvB,wBAA2BN,IACvB,IAAIO,EAMJ,OALAlwB,KAAKuJ,MAAMgmB,MAAMvf,QAAQ,CAACmgB,EAAM/B,KACxB+B,EAAKxkB,MAAQgkB,IACbO,EAAY9B,EAAI,KAGjB8B,GA9GQ,KAiHnBE,OAAUT,IACN,IAAIN,EAAYrvB,KAAKuJ,MAAM8lB,UACvBa,EAAYlwB,KAAKiwB,wBAAwBN,GAE7C,MAAMJ,EAAQvvB,KAAKuJ,MAAMgmB,MAAM9U,OAAO0V,GAAQA,EAAKxkB,MAAQgkB,GACvDJ,EAAMluB,QAAUguB,IAAcM,IAE1BN,EADAa,GAAa,EACDX,EAAMW,GAAWvkB,IAEjB4jB,EAAM,GAAG5jB,KAG7B,MAAM0kB,EAAgBrwB,KAAKmvB,OAAO1U,OAAQxK,GAASA,EAAKof,YAAcM,GACtE3vB,KAAKmvB,OAASnvB,KAAKmvB,OAAO1U,OAAQxK,GAASA,EAAKof,YAAcM,GAC9D3vB,KAAK2W,OAAO2Z,YAAYD,EAAc,IAEtCrwB,KAAKqJ,SAAS,CAACkmB,QAAOF,eA/HtBrvB,KAAK2W,OAAS5M,EAAM4M,OACpB3W,KAAKmvB,OAAS,GACdnvB,KAAK+vB,YAAc,EACnB,MAAMR,EAAQ,CACV,CACIrkB,MAAO,UACPpL,QAAS,gBAAC,GAAD,CAAgB6W,OAAQ3W,KAAK2W,OAAQiR,eAAiBpQ,IAC3DxX,KAAKkvB,QAAQ,CAAC1X,IAAKA,EAAK6X,UAAW,aACpCA,UAAU,YACb1jB,IAAK,YAGb3L,KAAKuJ,MAAQ,CACT8lB,UAAWE,EAAM,GAAG5jB,IACpB4jB,SAEJvvB,KAAK+vB,cAkHTxgB,SACI,OACI,gBAAC,KAAD,CACImO,SAAU1d,KAAK0d,SACf2R,UAAWrvB,KAAKuJ,MAAM8lB,UACtB7lB,KAAK,gBACLkmB,OAAQ1vB,KAAK0vB,QAEZ1vB,KAAKuJ,MAAMgmB,MAAM3c,IAAIud,GAAQ,gBAAC,GAAD,CAASpS,IAAKoS,EAAKjlB,MAAOS,IAAKwkB,EAAKxkB,IAC3BkC,SAAUsiB,EAAKtiB,UAAWsiB,EAAKrwB,Y,uBCnJtF,MAAMywB,GAAaC,IAAMC,MAElB,MAAMC,WAAqB9mB,YAC9BhK,YAAYmK,GACRoF,MAAMpF,GACN/J,KAAK2wB,UAAY5mB,EAAM4M,OACvB3W,KAAKuJ,MAAQ,GAGjBgG,SACI,OAAO,2BACH,2CACA,gBAACghB,GAAD,CAAYK,SAAS,GAChB5wB,KAAKuJ,MAAMyM,iBChB5B,MAAMgD,GAAS/J,EAAQ,KACR,MAAM4hB,GA0DjB,eAAellB,EAAI7H,EAAKgtB,GACpB,IAAIC,EAAWplB,EACfmlB,EAAKC,GACc,kBAATjtB,GACNZ,OAAO0M,KAAK9L,GAAMkM,QAAQghB,IACtBH,GAAMI,QAAN,UAAiBF,EAAjB,aAA8BC,EAA9B,MAAoCltB,EAAKktB,GAAGF,MA/DvCD,GACVK,iBAAmB,KACdlY,KAAW,IAAImY,QAAQ,KAAM,IAFxBN,GAIVO,WAAa,IACTpY,KAAW,GALL6X,GAQVQ,YAAelS,GACdA,EACGA,EAAIgS,QAAQ,SAAU,OADbhS,EATH0R,GAaVS,MAASnS,GACRA,EACE,IAAN,OAAW0R,GAAMQ,YAAYlS,GAA7B,KADgBA,EAdH0R,GAkBVU,QAAWpS,GACI,kBAARA,EAAyBA,EAC/BA,EAAIqS,WAAW,MAASrS,EAAIqQ,SAAS,MAGrCrQ,EAAIqS,WAAW,MAAQrS,EAAIqQ,SAAS,KAF7BrQ,EAAIsS,MAAM,EAAGtS,EAAI9d,OAAS,GAKjC8d,EAAIqS,WAAW,QAAUrS,EAAIqQ,SAAS,OAC/BrQ,EAAIsS,MAAM,EAAGtS,EAAI9d,OAAS,GAE9B8d,EA7BM0R,GAgCVa,UAAY,CAACC,EAAMC,KACtBA,EAAMD,GACFA,EAAKE,UACLF,EAAKE,SAASjf,IAAI3C,IACd4gB,GAAMa,UAAUzhB,EAAM2hB,MApCjBf,GAwCViB,QAAU,CAACH,EAAMC,KAChBD,EAAKE,UACLF,EAAKE,SAASjf,IAAI3C,IACd4gB,GAAMiB,QAAQ7hB,EAAM2hB,KAG5BA,EAAMD,IA9COd,GAiDVkB,gBAAkB,KACd,CACHvT,UAAW,QACXwT,UAAW,OACXC,eAAe,EACfC,WAAY,MAtDHrB,GAoEVsB,2BAA6B,KACzB,CACH3T,UAAW,QACXyT,eAAe,IAvENpB,GA2EVuB,SAAY9E,GACXA,EAAEkE,WAAW,MAAQlE,EAAEkC,SAAS,KAAalC,EAC3C,IAAN,OAAYA,EAAZ,KA7EauD,GAgFVwB,SAAW,CAACC,EAAQlX,KACvB,IAAIA,EACH,MAAO,IAAI,IAAImX,IAAID,IAEpB,MAAME,EAAQ,GACd,OAAOF,EAAO7X,OAAOxK,KACbA,EAAKmL,KAAUoX,KAGfA,EAAMviB,EAAKmL,IAAUnL,EAAKmL,IACnB,KA1FFyV,GA8FV4B,kBAAoB,CAACve,EAAGC,IACpBrM,KAAKC,UAAUmM,KAAOpM,KAAKC,UAAUoM,GA/F/B0c,GAiGV6B,kBAAoB,CAACC,EAAMC,IAG9B,SAASC,EAAgB3e,EAAGC,GACxB,IAAImE,EAIJ,GAAIwa,MAAM5e,IAAM4e,MAAM3e,IAAmB,kBAAND,GAA+B,kBAANC,EACxD,OAAO,EAMX,GAAID,IAAMC,EACN,OAAO,EAMX,GAAkB,oBAAND,GAAiC,oBAANC,GAClCD,aAAamO,MAAQlO,aAAakO,MAClCnO,aAAa6e,QAAU5e,aAAa4e,QACpC7e,aAAa8e,QAAU7e,aAAa6e,QACpC9e,aAAa+e,QAAU9e,aAAa8e,OACrC,OAAO/e,EAAEzE,aAAe0E,EAAE1E,WAI9B,KAAMyE,aAAahR,QAAUiR,aAAajR,QACtC,OAAO,EAGX,GAAIgR,EAAE1E,cAAc2E,IAAMA,EAAE3E,cAAc0E,GACtC,OAAO,EAGX,GAAIA,EAAEtU,cAAgBuU,EAAEvU,YACpB,OAAO,EAGX,GAAIsU,EAAEgf,YAAc/e,EAAE+e,UAClB,OAAO,EAIX,SA/CMC,GA+CQC,QAAQlf,IAAM,SA/CXmf,GA+C2BD,QAAQjf,IAAM,EACtD,OAAO,EAKX,IAAKmE,KAAKnE,EAAG,CACT,GAAIA,EAAEJ,eAAeuE,KAAOpE,EAAEH,eAAeuE,GACzC,OAAO,EAEN,UAAWnE,EAAEmE,YAAcpE,EAAEoE,GAC9B,OAAO,EAIf,IAAKA,KAAKpE,EAAG,CACT,GAAIC,EAAEJ,eAAeuE,KAAOpE,EAAEH,eAAeuE,GACzC,OAAO,EAEN,UAAWnE,EAAEmE,YAAcpE,EAAEoE,GAC9B,OAAO,EAGX,cAAgBpE,EAAEoE,IACd,IAAK,SACL,IAAK,WAKD,SA7EN6a,GA0EgBhyB,KAAK+S,SA1EVmf,GA2EMlyB,KAAKgT,IAEX0e,EAAgB3e,EAAEoE,GAAInE,EAAEmE,IACzB,OAAO,QA9EjB6a,GAiFgBG,YAjFLD,GAkFMC,MACX,MAEJ,QACI,GAAIpf,EAAEoE,KAAOnE,EAAEmE,GACX,OAAO,GAMvB,OAAO,EAGJua,CAAgBF,EAAMC,GCzLrC,MAAMrC,GAAaC,IAAMC,MACnB3K,GAASC,KAAOD,OAGf,MAAMyN,WAAkB3pB,YAC3BhK,YAAYmK,GAAQ,IAAD,EACfoF,MAAMpF,GADS,YASnB8M,kBATmB,sBASC,kCAAAhT,EAAA,6DACH,EACPH,EAAS,IAAIvB,cAFH,SAGEuB,EAAOlB,UAAU,wCAAwCquB,GAAMO,aAAaP,GAAMsB,8BAHpF,OAGV5vB,EAHU,OAIVuB,EAAO+sB,GAAMwB,SAAS9vB,EAAIzC,QAAQgE,KAAK,QACvC0vB,EAAoB,GAC1B1vB,EAAKkM,QAAQC,IACTujB,EAAkBryB,KAAK,gBAAC,GAAD,CAAQwK,IAAKsE,EAAK7I,KAAMiH,MAAO4B,EAAK7I,MAAO6I,EAAK7I,SAE3E,EAAKiC,SAAS,CAACmqB,kBAAmBA,IATlB,2CATD,KAqBnBhzB,OAAUwS,IACNhT,KAAK8D,KAAKtD,OAAOwS,EAAIgI,OAAOyY,aAAa,SAAWzgB,EAAIgI,OAAO3M,OAtBhD,KA0BnBqlB,WAAa,CAACrlB,EAAO2E,KACjBhT,KAAK8D,KAAK6vB,YAActlB,EACxB,MAAM0B,EAAO/P,KACD,IAAI4e,GAAS1N,IACrB1O,UAAU,GAAd,2CAAuD6L,EAAvD,gBAA8EvK,IAC1E,MAAMkS,EAAgB,GACtBlS,EAAKkM,QAAQC,IACT+F,EAAc7U,KAAK,gBAAC,KAAD,CAAKwK,IAAG,cAASsE,EAAK2jB,QACrC,gBAAC,KAAD,KACI,gBAAC,IAAD,CAAOjoB,IAAG,gBAAWsE,EAAK2jB,OAAS1nB,MAAO,CAACmQ,aAAc,QAASjV,KAAM6I,EAAK2jB,MAAOlW,SAAU3N,EAAKvP,OAAQgJ,KAAK,OACzGqqB,YAAa5jB,EAAK2jB,MAClBE,YAAa7jB,EAAKxE,mBAIrCsE,EAAKgkB,cAAcxpB,QAAQlB,SAAS,CAAC2M,cAAeA,KACrDmK,QA1CY,KA+CnBjY,KAAQ8K,IACJhT,KAAK8D,KAAKkwB,MAAQhhB,EAAIgI,OAAO3M,OAhDd,KAmDnB+K,UAAapG,IACThT,KAAK8D,KAAKmwB,WAAajhB,EAAIgI,OAAO3M,OApDnB,KAuDnB6lB,UAAY,KAER,IAAIC,EAAc,GAClB,IAAK,IAAInD,KAAKhxB,KAAK8D,KAAKtD,OAAQ,CAC5B,IAAI8sB,EAAIttB,KAAK8D,KAAKtD,OAAOwwB,GACzB,GAAG1D,EAAE,CACD,IAAI8G,EAAK,IAAO9G,EAAI,IACV,SAAN0D,GAAsB,0BAANA,IAChBoD,EAAK,MAAQ9G,EAAI,OAErB6G,EAAYhzB,KAAK6vB,EAAEG,QAAQ,aAAc,KAAO,IAAMiD,IAI9D,IAAIC,EAAW,GAIf,OAHIF,EAAY9yB,OAAS,IACrBgzB,EAAW,SAET,QAAN,OAjBar0B,KAiBO8D,KAAK6vB,YAAzB,aAjBa3zB,KAiBkC8D,KAAKkwB,MAApD,aAA+DK,EAA/D,YAA2EF,EAAY7yB,KAAK,WAA5F,eAjBatB,KAiBqG8D,KAAKmwB,WAAvH,MAvEAj0B,KAAKs0B,MAAQvqB,EAAM4M,OACnB3W,KAAK8D,KAAO,CAACtD,OAAO,IACpBR,KAAKuJ,MAAQ,CAACiqB,kBAAmB,IACjCxzB,KAAK+zB,cAAgBnqB,cAuEzB2F,SACI,OAAO,2BACH,gBAAC,GAAD,CAAYqhB,SAAS,GACjB,gBAAC,KAAD,KACI,gBAAC,KAAD,kBACc,gBAAC,KAAD,CACVlT,SAAU1d,KAAK0zB,WACfa,YAAU,EACVroB,MAAO,CAACmF,MAAO,KACfyiB,YAAY,yBACZU,iBAAiB,WACjBC,aAAc,CAACC,EAAOC,IAAWA,EAAO5qB,MAAM8nB,SAAS+C,cAAcxB,QAAQsB,EAAME,gBAAkB,GACvG50B,KAAKuJ,MAAMiqB,sBAKrB,2BACCxzB,KAAK+J,MAAM8qB,WAAY,4BAAc,gBAAC,GAAD,CAAYjE,SAAS,GACvD,gBAAC,KAAD,KACI,gBAAC,KAAD,KACI,gBAAC,IAAD,CAAOlT,SAAU1d,KAAKkI,KAAMsB,KAAK,OAAOiF,MAAM,OAAOolB,YAAY,OAC1DC,YAAY,8BAI/B,2BAEK9zB,KAAK+J,MAAM+qB,gBAAiB,4BAAa,gBAAC,GAAD,CAAYlE,SAAS,GAC9D,gBAAC,KAAD,KACI,gBAAC,KAAD,KACI,gBAAC,IAAD,CAAOpnB,KAAK,OAAOkU,SAAU1d,KAAKoZ,UAAW3K,MAAM,YAAYolB,YAAY,YACpEC,YAAY,iBAKhC,2BACA,gBAAC,GAAD,CAAcnd,OAAQ3W,KAAMwX,IAAKxX,KAAK+zB,kBC1HlD,MAAMxD,GAAaC,IAAMC,MAElBsE,IADQhP,KAAOD,OACH0K,IAAZuE,UAGA,MAAMC,WAAuBprB,YAChChK,YAAYmK,GACRoF,MAAMpF,GADS,KAQnBkrB,YAAehlB,GACQ,gBAAfA,EAAK2jB,OAA0C,kBAAf3jB,EAAK2jB,MAC9B,KAEQ,SAAf3jB,EAAK2jB,OAAmC,0BAAf3jB,EAAK2jB,MACvB,gBAAC,KAAD,KAAK,gBAAC,KAAD,KAAM3jB,EAAK2jB,MAAX,IAAkB,gBAACmB,GAAD,CAAU7oB,MAAO,CAACmQ,aAAc,QAASjV,KAAM6I,EAAK2jB,MAC1ClW,SAAU1d,KAAKQ,OACfgJ,KAAK,OAAOsG,KAAM,OAEvD,gBAAC,KAAD,KACH,gBAAC,KAAD,KACI,gBAAC,IAAD,CAAO5D,MAAO,CAACmQ,aAAc,QAASjV,KAAM6I,EAAK2jB,MAAOlW,SAAU1d,KAAKQ,OAAQgJ,KAAK,OAC7EqqB,YAAa5jB,EAAK2jB,MAClBE,YAAa7jB,EAAKxE,gBArBlB,KA8CnBjL,OAAUwS,IACNhT,KAAK8D,KAAKtD,OAAOwS,EAAIgI,OAAOyY,aAAa,SAAWzgB,EAAIgI,OAAO3M,OA/ChD,KAkDnBnG,KAAQ8K,IACJhT,KAAK8D,KAAKkwB,MAAQhhB,EAAIgI,OAAO3M,OAnDd,KAsDnB+K,UAAapG,IACThT,KAAK8D,KAAKmwB,WAAajhB,EAAIgI,OAAO3M,OAvDnB,KA0DnB6lB,UAAY,KAER,IAAIC,EAAc,GAClB,IAAK,IAAInD,KAAKhxB,KAAK8D,KAAKtD,OAAQ,CAC5B,IAAI8sB,EAAIttB,KAAK8D,KAAKtD,OAAOwwB,GACzBmD,EAAYhzB,KAAK6vB,EAAEG,QAAQ,aAAc,KAAxBH,KAA4C1D,EAAI,KAOrE,OAJ0B,GAAtB6G,EAAY9yB,QACZ8yB,EAAYhzB,KAAK,sBAGf,SAAN,OAAgBnB,KAAK8D,KAAKmwB,WAA1B,eAA2Cj0B,KAAKoH,KAAhD,aAA0DpH,KAAK8D,KAAKkwB,MAApE,qBACNG,EAAY7yB,KAAK,WADX,MApEAtB,KAAKs0B,MAAQvqB,EAAM4M,OACnB3W,KAAKoH,KAAO2C,EAAM3C,KAClBpH,KAAK8D,KAAO,CAACtD,OAAQ,IACrBR,KAAKuJ,MAAQ,CAACyM,cAAe,IAqBjCa,oBACI,MAAM9G,EAAO/P,KACD,IAAI4e,GAAS1N,IAErB1O,UAAU,GAAd,4BAAwCuN,EAAK3I,KAA7C,gBAAmEtD,IAC/D,MAAMkS,EAAgB,GACtBlS,EAAKkM,QAAQC,IACT,MAAM3M,EAAOtD,KAAKi1B,YAAYhlB,GACjB,OAAT3M,IACA0S,EAAc7U,KAAKmC,GACnB0S,EAAc7U,KAAK,+BAI3B4O,EAAK1G,SAAS,CAAC2M,cAAeA,KAC/BmK,OAiCP5Q,SACI,OAAO,2BACH,6DACA,gBAAC,GAAD,CAAYqhB,SAAS,GACjB,gBAAC,KAAD,KACI,gBAAC,KAAD,KACI,gBAAC,IAAD,CAAOpnB,KAAK,OAAOkU,SAAU1d,KAAKoZ,UAAWtG,KAAM,QAAS+gB,YAAY,YACjEC,YAAY,kCAI/B,2BACA,gBAAC,GAAD,CAAYlD,SAAS,GACjB,gBAAC,KAAD,KACI,gBAAC,KAAD,KACI,gBAAC,IAAD,CAAOlT,SAAU1d,KAAKkI,KAAMsB,KAAK,OAAOsJ,KAAM,QAAS+gB,YAAY,kBAC5DC,YAAY,uCAI/B,2BACA,qDACA,gBAAC,GAAD,CAAYlD,SAAS,GAChB5wB,KAAKuJ,MAAMyM,iBCvG5B,MAAMua,GAAaC,IAAMC,MACnB3K,GAASC,KAAOD,OAGf,MAAMoP,WAAkBtrB,YAC3BhK,YAAYmK,GACRoF,MAAMpF,GADS,KAsBnB2pB,WAAa,CAACrlB,EAAO2E,KACjBhT,KAAK8D,KAAK6vB,YAActlB,GAvBT,KA0BnB8mB,SAAW,CAAC9mB,EAAO2E,KACfhT,KAAK8D,KAAKsxB,UAAY/mB,GA3BP,KA8BnBnG,KAAQ8K,IACJhT,KAAK8D,KAAKkwB,MAAQhhB,EAAIgI,OAAO3M,OA/Bd,KAkCnB+K,UAAapG,IACThT,KAAK8D,KAAKmwB,WAAajhB,EAAIgI,OAAO3M,OAnCnB,KAsCnBgnB,YAAeriB,IACXhT,KAAK8D,KAAKwxB,aAAetiB,EAAIgI,OAAO3M,OAvCrB,KA0CnBknB,QAAWviB,IACPhT,KAAK8D,KAAK0xB,SAAWxiB,EAAIgI,OAAO3M,OA3CjB,KA8CnB6lB,UAAY,KAER,IAAIuB,EAAiB,GACjBz1B,KAAK8D,KAAKwxB,eACVG,EAAiB,eAAiBz1B,KAAK8D,KAAKwxB,cAGhD,IAAII,EAAU,cAKd,OAJI11B,KAAK8D,KAAK0xB,WACVE,EAAU,mBAAe11B,KAAK8D,KAAK0xB,SAAzB,MAGR,QAAN,OAXax1B,KAWO8D,KAAKsxB,UAAzB,YAXap1B,KAW8B8D,KAAKmwB,WAAhD,eAXaj0B,KAWyD8D,KAAK6vB,YAA3E,aAXa3zB,KAWoF8D,KAAKkwB,MAAtG,sBAA0H0B,EAA1H,YAAwID,EAAxI,MAxDAz1B,KAAKs0B,MAAQvqB,EAAM4M,OACnB3W,KAAK8D,KAAO,GACZ9D,KAAKuJ,MAAQ,CAACiqB,kBAAmB,IAGrC3c,oBACI,MAAM9G,EAAO/P,KACD,IAAI4e,GAAS1N,IAErB1O,UAAU,GAAI,wCAA0CsB,IACxD,MAAM0vB,EAAoB,GAC1B1vB,EAAKkM,QAAQC,IACTujB,EAAkBryB,KAAK,gBAAC,GAAD,CAAQwK,IAAKsE,EAAK7I,KAAMiH,MAAO4B,EAAK7I,MAAO6I,EAAK7I,SAE3E2I,EAAK1G,SAAS,CAACmqB,kBAAmBA,KACnCrT,OA4CP5Q,SACI,OAAO,2BACH,gBAAC,GAAD,CAAYqhB,SAAS,GACjB,gBAAC,KAAD,KACI,gBAAC,KAAD,kBACc,gBAAC,KAAD,CACVlT,SAAU1d,KAAK0zB,WACfa,YAAU,EACVroB,MAAO,CAACmF,MAAO,KACfyiB,YAAY,yBACZU,iBAAiB,WACjBC,aAAc,CAACC,EAAOC,IAAWA,EAAO5qB,MAAM8nB,SAAS+C,cAAcxB,QAAQsB,EAAME,gBAAkB,GACvG50B,KAAKuJ,MAAMiqB,sBAKrB,2BACA,gBAAC,GAAD,CAAY5C,SAAS,GACjB,gBAAC,KAAD,KACI,gBAAC,KAAD,iBACa,gBAAC,KAAD,CACTlT,SAAU1d,KAAKm1B,SACfZ,YAAU,EACVroB,MAAO,CAACmF,MAAO,KACfyiB,YAAY,wBACZU,iBAAiB,WACjBC,aAAc,CAACC,EAAOC,IAAWA,EAAO5qB,MAAM8nB,SAAS+C,cAAcxB,QAAQsB,EAAME,gBAAkB,GAErG,gBAAC,GAAD,CAAQjpB,IAAK,YAAa0C,MAAO,aAAjC,aACA,gBAAC,GAAD,CAAQ1C,IAAK,SAAU0C,MAAO,UAA9B,UACA,gBAAC,GAAD,CAAQ1C,IAAK,gBAAiB0C,MAAO,iBAArC,iBACA,gBAAC,GAAD,CAAQ1C,IAAK,SAAU0C,MAAO,UAA9B,cAKZ,2BACA,gBAAC,GAAD,CAAYuiB,SAAS,GACjB,gBAAC,KAAD,KACI,gBAAC,KAAD,KACI,gBAAC,IAAD,CAAOpnB,KAAK,OAAOkU,SAAU1d,KAAKoZ,UAAW3K,MAAM,YAAYolB,YAAY,YACpEC,YAAY,mCAI/B,2BAEA,gBAAC,GAAD,CAAYlD,SAAS,GACjB,gBAAC,KAAD,KACI,gBAAC,KAAD,KACI,gBAAC,IAAD,CAAOlT,SAAU1d,KAAKkI,KAAMsB,KAAK,OAAOqqB,YAAY,cAC7CC,YAAY,8BAI/B,2BACA,gBAAC,GAAD,CAAYlD,SAAS,GACjB,gBAAC,KAAD,KACI,gBAAC,KAAD,KACI,gBAAC,IAAD,CAAOpnB,KAAK,OAAOkU,SAAU1d,KAAKq1B,YAAaxB,YAAY,cACpDC,YAAY,mBAI/B,2BACA,gBAAC,GAAD,CAAYlD,SAAS,GACjB,gBAAC,KAAD,KACI,gBAAC,KAAD,KACI,gBAAC,IAAD,CAAOpnB,KAAK,OAAOkU,SAAU1d,KAAKu1B,QAAS1B,YAAY,UAChDC,YAAY,eAI/B,6BC5IZ,MAAMvD,GAAaC,IAAMC,MAElBsE,IADQhP,KAAOD,OACH0K,IAAZuE,UAGQ,MAAMY,WAAmB/rB,YACpChK,YAAYmK,GACRoF,MAAMpF,GADS,KAgBnBkrB,YAAehlB,GACQ,gBAAfA,EAAK2jB,OAA0C,kBAAf3jB,EAAK2jB,MAC9B,KAEQ,SAAf3jB,EAAK2jB,OAAmC,0BAAf3jB,EAAK2jB,MACvB,gBAAC,KAAD,KAAK,gBAAC,KAAD,KAAM3jB,EAAK2jB,MAAX,IAAkB,gBAAC,GAAD,CAAU1nB,MAAO,CAACmQ,aAAc,QAASjV,KAAM6I,EAAK2jB,MAC1ClW,SAAU1d,KAAKQ,OACfgJ,KAAK,OAAOsG,KAAM,OAEvD,gBAAC,KAAD,CAAKnE,IAAKsE,EAAK2jB,OAClB,gBAAC,KAAD,KACI,gBAAC,IAAD,CAAO1nB,MAAO,CAACmQ,aAAc,QAASjV,KAAM6I,EAAK2jB,MAAOlW,SAAU1d,KAAKQ,OAAQgJ,KAAK,OAC7EqqB,YAAa5jB,EAAK2jB,MAClBE,YAAa7jB,EAAKxE,gBA7BlB,KAsDnBjL,OAAUwS,IACNhT,KAAK8D,KAAKtD,OAAOwS,EAAIgI,OAAOyY,aAAa,SAAWzgB,EAAIgI,OAAO3M,OAvDhD,KA0DnBnG,KAAQ8K,IACJhT,KAAK8D,KAAKkwB,MAAQhhB,EAAIgI,OAAO3M,OA3Dd,KA8DnB+K,UAAapG,IACThT,KAAK8D,KAAKmwB,WAAajhB,EAAIgI,OAAO3M,OA/DnB,KAkEnBunB,gBAAmB5iB,IACfhT,KAAK8D,KAAK+xB,iBAAmB7iB,EAAIgI,OAAO3M,OAnEzB,KAiGnBynB,cAAgB,IACmB,SAA3B91B,KAAKuJ,MAAM2d,YACJ,gBAAC,GAAD,CAAY0J,SAAS,GACxB,gBAAC,KAAD,KACI,gBAAC,KAAD,KACI,gBAAC,IAAD,CAAOpnB,KAAK,OAAOkU,SAAU1d,KAAKoZ,UAAWtG,KAAM,QAC5C+gB,YAAa7zB,KAAKuJ,MAAM+d,WAAatnB,KAAKuJ,MAAM+d,WAAa,cAC7DwM,YAAY,QAK5B,KA7GQ,KAgHnBiC,oBAAsB,IACmB,SAAjC/1B,KAAKuJ,MAAM6d,kBACJ,gBAAC,GAAD,CAAYwJ,SAAS,GACxB,gBAAC,KAAD,KACI,gBAAC,KAAD,KACI,gBAAC,IAAD,CAAOpnB,KAAK,OAAOkU,SAAU1d,KAAK41B,gBAAiB9iB,KAAM,QAClD+gB,YAAa7zB,KAAKuJ,MAAM8d,iBAAmBrnB,KAAKuJ,MAAM8d,iBAAmB,eACzEyM,YAAY,QAK5B,KA5HQ,KA+HnBkC,kBAAoB,IACZh2B,KAAKuJ,MAAM0d,UACJjnB,KAAKuJ,MAAM0d,UAEX,YAnII,KAsInBgP,aAAe,IACmB,SAA1Bj2B,KAAKuJ,MAAM4d,WACJ,gBAAC,GAAD,CAAYyJ,SAAS,GACxB,gBAAC,KAAD,KACI,gBAAC,KAAD,KACI,gBAAC,IAAD,CAAOlT,SAAU1d,KAAKkI,KAAMsB,KAAK,OAAOsJ,KAAM,QAAS+gB,YAAa7zB,KAAKg2B,oBAClElC,YAAY,QAK5B,GA/IP9zB,KAAKs0B,MAAQvqB,EAAM4M,OACnB3W,KAAKoH,KAAO2C,EAAM3C,KAClBpH,KAAK8D,KAAO,CAACtD,OAAQ,IACrBR,KAAKuJ,MAAQ,CACTyM,cAAe,GACfkR,YAAand,EAAMmd,YACnBD,UAAWld,EAAMkd,UACjBE,WAAYpd,EAAMod,WAClBC,kBAAmBrd,EAAMqd,kBACzBC,iBAAkBtd,EAAMsd,iBACxBC,WAAYvd,EAAMud,YAsB1BzQ,oBACI,MAAM9G,EAAO/P,KACD,IAAI4e,GAAS1N,IAErB1O,UAAU,GAAd,4BAAwCuN,EAAK3I,KAA7C,gBAAmEtD,IAC/D,MAAMkS,EAAgB,GACtBlS,EAAKkM,QAAQC,IACT,MAAM3M,EAAOtD,KAAKi1B,YAAYhlB,GACjB,OAAT3M,IACA0S,EAAc7U,KAAKmC,GACnB0S,EAAc7U,KAAK,+BAI3B4O,EAAK1G,SAAS,CAAC2M,cAAeA,KAC/BmK,OAqBP+V,aAEI,IAAI/B,EAAc,GAClB,IAAK,IAAInD,KAAKhxB,KAAK8D,KAAKtD,OAAQ,CAC5B,IAAI8sB,EAAIttB,KAAK8D,KAAKtD,OAAOwwB,GACrBoD,EAAK,IAAO9G,EAAI,IACV,SAAN0D,GAAsB,0BAANA,IAChBoD,EAAK,MAAQ9G,EAAI,OAErB6G,EAAYhzB,KAAK6vB,EAAEG,QAAQ,aAAc,KAAO,IAAMiD,GAG1D,IAAIC,EAAW,GACXF,EAAY9yB,OAAS,IACrBgzB,EAAW,SAGf,IAAI8B,EAAQ,GAOZ,OALIn2B,KAAK8D,KAAK+xB,mBACVM,EAAK,aAASn2B,KAAK8D,KAAK+xB,mBAItB,OAAN,OAAc71B,KAAK8D,KAAKmwB,YAAc,UAAtC,eAAsDj0B,KAAKoH,KAA3D,aAAqEpH,KAAK8D,KAAKkwB,OAAS,GAAxF,aAAgGK,EAAhG,YAA4GF,EAAY7yB,KAAK,UAA7H,YAA0I60B,EAA1I,KAsDJC,UACI,OAAO,2BACFp2B,KAAK81B,gBACN,2BACC91B,KAAK+1B,sBACN,2BACC/1B,KAAKi2B,eACN,2BACoC,GAAnCj2B,KAAKuJ,MAAMyM,cAAc3U,OAAc,GAAK,2CAC7C,gBAAC,GAAD,CAAYuvB,SAAS,GAChB5wB,KAAKuJ,MAAMyM,iBCvKrB,MAAMqgB,WAAkBV,GAC3B/1B,YAAYmK,GACRoF,MAAMpF,GADS,KAKnBmqB,UAAY,IACD/kB,MAAM+mB,aAIjB3mB,SACI,OAAOJ,MAAMinB,WCRrB,MAAM7F,GAAaC,IAAMC,MACV1K,KAAOD,OAGf,MAAMwQ,WAAsBD,GAAW,eAAD,oBAEzCnC,UAAY,KAER,IAAIC,EAAc,GAClB,IAAK,IAAInD,KAAKhxB,KAAK8D,KAAKtD,OAAQ,CAC5B,IAAI8sB,EAAIttB,KAAK8D,KAAKtD,OAAOwwB,GACzBmD,EAAYhzB,KAAK6vB,EAAEG,QAAQ,aAAc,KAAxBH,KAA4C1D,EAAI,KAOrE,OAJ0B,GAAtB6G,EAAY9yB,QACZ8yB,EAAYhzB,KAAK,sBAGf,kBAAN,OAAyBnB,KAAKoH,KAA9B,uBACN+sB,EAAY7yB,KAAK,WADX,MAIJiO,SACI,OAAO,2BAEH,gBAAC,GAAD,CAAYqhB,SAAS,GAChB5wB,KAAKuJ,MAAMyM,iB,iDCpB5B,MAAM8P,GAASC,KAAOD,OACfiP,GAAYvE,IAAZuE,SAEA,MAAMwB,WAAuB3sB,YAEhChK,YAAYmK,GACRoF,MAAMpF,GADS,KAUnBysB,QAAWxjB,IACPhT,KAAK8D,KAAK2yB,SAAWzjB,EAAIgI,OAAO3M,OAXjB,KAcnBgG,SAAYrB,IACRhT,KAAK8D,KAAK4yB,UAAY1jB,EAAIgI,OAAO3M,OAflB,KAkBnBsoB,QAAWtoB,IACPrO,KAAK42B,SAAWvoB,GAnBD,KAsBnB4d,KAAQzD,IACJxoB,KAAK62B,MAAQrO,GAvBE,KA+BnBsO,WAAczoB,IACVrO,KAAK+2B,KAAO1oB,EACZrO,KAAKg3B,aAAazsB,QAAQ0sB,SAAU,EACpCj3B,KAAKqJ,SAAS,CAACgL,UAAU,IACP,WAAdrU,KAAK+2B,MACL/2B,KAAKqJ,SAAS,CAACgL,UAAU,IAE7BrU,KAAKqJ,SAAS,CAAC6tB,SAAU7oB,KAtCV,KA2CnB8oB,eAAkBF,IACVA,EACAj3B,KAAKo3B,QAAQ7sB,QAAQuN,OAAOE,SAAShY,KAAKq3B,eAE1Cr3B,KAAKo3B,QAAQ7sB,QAAQuN,OAAOE,SAAS,KA/C1B,KAoDnBqf,YAAc,KACV,MAAMN,EAAO/2B,KAAKuJ,MAAM2tB,UAAY,QACpC,MAAa,UAATH,EACM,8CAKG,WAATA,EACM,mCAIG,SAATA,EACM,gPAWH,MA7EQ,KAgFnBO,aAAe,IACPt3B,KAAKuJ,MAAM8K,SACJ,gBAAC,KAAD,KACH,gBAAC,KAAD,iBACa,gBAAC,GAAD,CAAUnI,MAAO,CAACmQ,aAAc,QAASjV,KAAM,WAAY0I,KAAM,GACvD4N,SAAU1d,KAAKqU,SACf7K,KAAK,OACLqqB,YAAa,WACbC,YAAW,8VAYnC,KApGQ,KAuGnByD,SAAW,IACA,2BAAK,gBAAC,KAAD,KACR,gBAAC,KAAD,aACS,gBAAC,KAAD,CAAW/f,IAAKxX,KAAKo3B,QACVprB,KAAMhM,KAAKuJ,MAAM2tB,UAAY,QAC7Bhb,MAAM,SACN7K,MAAO,QACPC,OAAQ,QACRlK,KAAK,OACL+E,SAAU,GACVyc,iBAAiB,EACjBC,YAAY,EACZC,qBAAqB,EACrBpL,SAAU1d,KAAKisB,KACflD,YAAa,CACTC,gBAAiBC,KAErBC,WAAY,CACRC,2BAA2B,EAC3BC,0BAA0B,EAC1BC,gBAAgB,EAChBC,iBAAiB,EACjBC,QAAS,OAKjC,gBAAC,KAAD,KACI,gBAAC,KAAD,KACI,gBAAC,KAAD,CAAK9gB,KAAM,GAAX,oBACqB,gBAAC,KAAD,CAAQ+O,IAAKxX,KAAKg3B,aAActZ,SAAU1d,KAAKm3B,qBArIjE,KA2InBjD,UAAY,KAER,IAAIC,EAAc,GAOlB,OANAA,EAAYhzB,KAAZ,gBAA0BnB,KAAK+2B,KAA/B,MACA5C,EAAYhzB,KAAZ,kBAA4BnB,KAAK62B,MAAjC,QACA1C,EAAYhzB,KAAZ,mBAA6BnB,KAAK42B,SAAlC,MACI52B,KAAK02B,WACLvC,EAAYhzB,KAAZ,sBAAgCnB,KAAK02B,UAArC,QAEE,4BAAN,OAAqC12B,KAAK8D,KAAK2yB,SAA/C,oBACNtC,EAAY7yB,KAAK,UADX,MAlJAtB,KAAKs0B,MAAQvqB,EAAM4M,OACnB3W,KAAKoH,KAAO2C,EAAM3C,KAClBpH,KAAK8D,KAAO,CAACtD,OAAQ,IACrBR,KAAKuJ,MAAQ,CAACyM,cAAe,IAC7BhW,KAAKo3B,QAAUxtB,cACf5J,KAAKg3B,aAAeptB,cAoBxBiN,qBA6HAtH,SACI,OAAO,2BAEH,gBAAC,KAAD,KACI,gBAAC,KAAD,KACI,gBAAC,IAAD,CAAOmO,SAAU1d,KAAKw2B,QAAShtB,KAAK,OAAOsJ,KAAM,QAAS+gB,YAAY,WAC/DC,YAAY,sBAG3B,2BAEA,gBAAC,KAAD,KACI,gBAAC,KAAD,CAAKrrB,KAAM,GACP,yCAEJ,gBAAC,KAAD,CAAKA,KAAM,IACP,gBAAC,KAAD,CACI8rB,YAAU,EACV7W,SAAU1d,KAAK22B,QACfzqB,MAAO,CAACmF,MAAO,KACfyiB,YAAY,kBACZU,iBAAiB,WACjBC,aAAc,CAACC,EAAOC,IAAWA,EAAO5qB,MAAM8nB,SAAS+C,cAAcxB,QAAQsB,EAAME,gBAAkB,GAErG,gBAAC,GAAD,CAAQvmB,MAAM,OAAd,OACA,gBAAC,GAAD,CAAQA,MAAM,QAAd,WAIZ,2BACA,gBAAC,KAAD,KACI,gBAAC,KAAD,CAAK5F,KAAM,GACP,sCAEJ,gBAAC,KAAD,CAAKA,KAAM,IACP,gBAAC,KAAD,CACI8rB,YAAU,EACVroB,MAAO,CAACmF,MAAO,KACfyiB,YAAY,uBACZU,iBAAiB,WACjB9W,SAAU1d,KAAK82B,WACfrC,aAAc,CAACC,EAAOC,IAAWA,EAAO5qB,MAAM8nB,SAAS+C,cAAcxB,QAAQsB,EAAME,gBAAkB,GAErG,gBAAC,GAAD,CAAQvmB,MAAM,QAAd,QACA,gBAAC,GAAD,CAAQA,MAAM,SAAd,SACA,gBAAC,GAAD,CAAQA,MAAM,UAAd,aAIZ,2BACCrO,KAAKs3B,eACN,2BACCt3B,KAAKu3B,WACN,2BACA,gBAAC,KAAD,KACI,gBAAC,KAAD,KACI,gBAAC,IAAD,CAAOrrB,MAAO,CAACmQ,aAAc,QAASjV,KAAM,aAAcsW,SAAU1d,KAAKQ,OAAQgJ,KAAK,OAC/EqqB,YAAa,aACbC,YAAa,mBC9NrBtD,IAAMC,MAAzB,MACM3K,GAASC,KAAOD,OAGf,MAAM0R,WAAkB5tB,YAC3BhK,YAAYmK,GACRoF,MAAMpF,GADS,KA4BnB0tB,OAAUppB,IACNrO,KAAKy3B,OAASppB,GA7BC,KA+BnB6lB,UAAY,IACF,sBAAN,OAA8Bl0B,KAAKy3B,OAAnC,gBA9BAz3B,KAAKs0B,MAAQvqB,EAAM4M,OACnB3W,KAAKoH,KAAO2C,EAAM3C,KAClBpH,KAAK8D,KAAO,CAACtD,OAAQ,IACrBR,KAAKuJ,MAAQ,CACTyM,cAAe,GACfkR,YAAand,EAAMmd,YACnBD,UAAWld,EAAMkd,UACjBE,WAAYpd,EAAMod,YAI1BtQ,oBACI,MAAM9G,EAAO/P,KACD,IAAI4e,GAAS1N,IAErB1O,UAAU,GAAd,+BAAqDsB,IACjD,MAAMkS,EAAgB,GACtBlS,EAAKkM,QAAQC,IACT+F,EAAc7U,KAAK,gBAAC,GAAD,CAAQwK,IAAKsE,EAAK7I,KAAMiH,MAAO4B,EAAK7I,MAAO6I,EAAK7I,SAEvE2I,EAAK1G,SAAS,CAAC2M,cAAeA,KAC/BmK,OAYP5Q,SACI,OAAO,2BACH,gBAAC,KAAD,KACI,gBAAC,KAAD,WACO,gBAAC,KAAD,CACHmO,SAAU1d,KAAKy3B,OACflD,YAAU,EACVroB,MAAO,CAACmF,MAAO,KACfyiB,YAAY,yBACZU,iBAAiB,WACjBC,aAAc,CAACC,EAAOC,IAAWA,EAAO5qB,MAAM8nB,SAAS+C,cAAcxB,QAAQsB,EAAME,gBAAkB,GACvG50B,KAAKuJ,MAAMyM,mBCjDVwa,IAAMC,MAAzB,MACM3K,GAASC,KAAOD,OAGf,MAAM4R,WAAmBrB,GAAW,eAAD,oBAiBtCnC,UAAY,IAEF,YAAN,OADal0B,KACW8D,KAAK6vB,YAA7B,aADa3zB,KACsC8D,KAAKkwB,MAAxD,gBADah0B,KAC8D8D,KAAK+xB,iBAAhF,KAnBkC,KAsBtC4B,OAAUppB,IACNrO,KAAK8D,KAAK6vB,YAActlB,GArB5BwI,oBACI,MAAM9G,EAAO/P,KACD,IAAI4e,GAAS1N,IAErB1O,UAAU,GAAd,+BAAqDsB,IACjD,MAAMkS,EAAgB,GACtBlS,EAAKkM,QAAQC,IACT+F,EAAc7U,KAAK,gBAAC,GAAD,CAAQwK,IAAKsE,EAAK7I,KAAMiH,MAAO4B,EAAK7I,MAAO6I,EAAK7I,SAEvE2I,EAAK1G,SAAS,CAAC2M,cAAeA,KAC/BmK,OAcP5Q,SACI,OAAO,2BACFvP,KAAK81B,gBACN,2BACC91B,KAAK+1B,sBACN,2BACC/1B,KAAKi2B,eACN,2BACA,gBAAC,KAAD,KACI,gBAAC,KAAD,WACO,gBAAC,KAAD,CACHvY,SAAU1d,KAAKy3B,OACflD,YAAU,EACVroB,MAAO,CAACmF,MAAO,KACfyiB,YAAY,yBACZU,iBAAiB,WACjBC,aAAc,CAACC,EAAOC,IAAWA,EAAO5qB,MAAM8nB,SAAS+C,cAAcxB,QAAQsB,EAAME,gBAAkB,GACvG50B,KAAKuJ,MAAMyM,mBCpD7B,MAAMua,GAAaC,IAAMC,MAEV,MAAMkH,WAAsBhC,GAEvC/1B,YAAYmK,GACRoF,MAAMpF,GADS,KAInBmqB,UAAY,KAER,IAAIiC,EAAQ,GAERn2B,KAAK8D,KAAK+xB,mBACVM,EAAK,aAASn2B,KAAK8D,KAAK+xB,mBAG5B,MAAM+B,EAAWzoB,MAAM+mB,aAAa/E,QAAQgF,EAAO,IAE7C0B,EAAe,kBAAc73B,KAAK8D,KAAKmwB,WAAxB,eAAyCj0B,KAAKoH,KAA9C,aAAwDpH,KAAK8D,KAAKkwB,OAAS,GAA3E,aAAmFmC,EAAnF,KAErB,MAAO,UAAIyB,EAAJ,qBACLC,EADK,8BAEI73B,KAAKoH,KAFT,aAEmBpH,KAAK8D,KAAKkwB,OAAS,GAFtC,gBAEiDh0B,KAAK8D,KAAKg0B,cAF3D,gBAGJC,eAnBY,KAsBnBC,aAAgBhlB,IACZhT,KAAK8D,KAAKg0B,cAAgB9kB,EAAIgI,OAAO3M,OAGzCkB,SACI,OAAO,2BACFvP,KAAK81B,gBACN,2BAEC91B,KAAK+1B,sBACN,2BACC/1B,KAAKi2B,eACN,2BACA,gBAAC,GAAD,CAAYrF,SAAS,GACjB,gBAAC,KAAD,KACI,gBAAC,KAAD,KACI,gBAAC,IAAD,CAAOlT,SAAU1d,KAAKg4B,aAAcxuB,KAAK,OAAOsJ,KAAM,QAAS+gB,YAAa,eACrEC,YAAY,8EAI/B,2BACoC,GAAnC9zB,KAAKuJ,MAAMyM,cAAc3U,OAAc,GAAK,2CAC7C,gBAAC,GAAD,CAAYuvB,SAAS,GAChB5wB,KAAKuJ,MAAMyM,iBCnDrB,MAAMiiB,WAAuBtC,GAEhC/1B,YAAYmK,GACRoF,MAAMpF,GADS,KAInBmqB,UAAY,KACR,MAAM/zB,EAAG,gDAA4Cc,mBAAmBjB,KAAK8D,KAAKkwB,QAC5EkE,EAAOC,SAASC,cAAc,KAMpC,OALAF,EAAKG,KAAOl4B,EACZ+3B,EAAKld,OAAS,SACdmd,SAASv2B,KAAK02B,YAAYJ,GAC1BA,EAAKK,QACLJ,SAASv2B,KAAK42B,YAAYN,GACnB,IAGXrhB,qBAGAtH,SACI,OAAOJ,MAAMinB,WCjBF5F,IAAMC,MAAzB,MACM3K,GAASC,KAAOD,OAGf,MAAM2S,WAAyB7uB,YAClChK,YAAYmK,GACRoF,MAAMpF,GADS,KA+BnB0tB,OAAUppB,IACNrO,KAAKy3B,OAASppB,GAhCC,KAkCnB6lB,UAAY,IACF,0BAAN,OAAkCl0B,KAAKy3B,OAAvC,gBAjCAz3B,KAAKs0B,MAAQvqB,EAAM4M,OACnB3W,KAAKoH,KAAO2C,EAAM3C,KAClBpH,KAAK8D,KAAO,CAACtD,OAAQ,IACrBR,KAAKuJ,MAAQ,CACTyM,cAAe,GACfkR,YAAand,EAAMmd,YACnBD,UAAWld,EAAMkd,UACjBE,WAAYpd,EAAMod,YAI1BtQ,oBACI,MAAM9G,EAAO/P,KACD,IAAI4e,GAAS1N,IAErB1O,UAAU,GAAd,iCAAuDsB,IAEnD,MAAMkS,EAAgBlS,EAAK2W,OAAOxK,GACN,WAAjBA,EAAKyoB,SACb9lB,IAAI3C,GACI,gBAAC,GAAD,CAAQtE,IAAKsE,EAAKvN,QAAS2L,MAAO4B,EAAKvN,SAAUuN,EAAKvN,UAGjEqN,EAAK1G,SAAS,CAAC2M,cAAeA,KAC/BmK,OAYP5Q,SACI,OAAO,2BACH,gBAAC,KAAD,KACI,gBAAC,KAAD,oBACgB,gBAAC,KAAD,CACZmO,SAAU1d,KAAKy3B,OACflD,YAAU,EACVroB,MAAO,CAACmF,MAAO,KACfyiB,YAAY,qBACZU,iBAAiB,WACjBC,aAAc,CAACC,EAAOC,IAAWA,EAAO5qB,MAAM8nB,SAAS+C,cAAcxB,QAAQsB,EAAME,gBAAkB,GACvG50B,KAAKuJ,MAAMyM,mBC/CtB,MAAM2iB,WAAc/uB,YACvBhK,YAAYmK,GACRoF,MAAMpF,GADS,KAQnB6uB,sBAAwB,KACpB54B,KAAKge,GAAG3U,SAAS,CAACke,OAAO,EAAOsR,gBAAgB,KATjC,KAWnBC,qBAAuB,KACnB,MAAMr2B,EAAMzC,KAAK+4B,SAASxuB,QAAQ2pB,YAClCl0B,KAAKge,GAAGkW,UAAUzxB,GAClBzC,KAAKge,GAAG3U,SAAS,CAACke,OAAO,EAAOsR,gBAAgB,KAdjC,KAiBnBG,cAAgB,IACoB,SAA5Bh5B,KAAKge,GAAGzU,MAAMsd,UACP,gBAAC,GAAD,CAAWlQ,OAAQ3W,KAAMwX,IAAKxX,KAAK+4B,WAEd,SAA5B/4B,KAAKge,GAAGzU,MAAMsd,UACP,gBAAC,GAAD,CAAWzf,KAAMpH,KAAKge,GAAGzU,MAAMsd,UAAWrP,IAAKxX,KAAK+4B,WAG/B,gBAA5B/4B,KAAKge,GAAGzU,MAAMsd,UACP,gBAAC,GAAD,CAAezf,KAAMpH,KAAKge,GAAGzU,MAAMsd,UAAWrP,IAAKxX,KAAK+4B,WAGnC,gBAA5B/4B,KAAKge,GAAGzU,MAAMsd,UACP,gBAAC,GAAD,CAAezf,KAAMpH,KAAKge,GAAGzU,MAAMsd,UAAWrP,IAAKxX,KAAK+4B,WAGnC,iBAA5B/4B,KAAKge,GAAGzU,MAAMsd,UACP,gBAAC,GAAD,eAAgBzf,KAAMpH,KAAKge,GAAGzU,MAAMsd,UAAWrP,IAAKxX,KAAK+4B,UAAc/4B,KAAKge,GAAGzU,QAG1D,cAA5BvJ,KAAKge,GAAGzU,MAAMsd,UACP,gBAAC,GAAD,CAAWzf,KAAMpH,KAAKge,GAAGzU,MAAMsd,UAAWrP,IAAKxX,KAAK+4B,WAG/B,qBAA5B/4B,KAAKge,GAAGzU,MAAMsd,UACP,gBAAC,GAAD,CAAkBzf,KAAMpH,KAAKge,GAAGzU,MAAMsd,UAAWrP,IAAKxX,KAAK+4B,WAGtC,cAA5B/4B,KAAKge,GAAGzU,MAAMsd,UACP,gBAAC,GAAD,CAAgBzf,KAAMpH,KAAKge,GAAGzU,MAAMsd,UAAWrP,IAAKxX,KAAK+4B,WAGpC,aAA5B/4B,KAAKge,GAAGzU,MAAMsd,UACP,gBAAC,GAAD,eAAYzf,KAAMpH,KAAKge,GAAGzU,MAAMsd,UAAWrP,IAAKxX,KAAK+4B,UAAc/4B,KAAKge,GAAGzU,QAGpD,SAA9BvJ,KAAKge,GAAGzU,MAAMyd,YACP,gBAAC,GAAD,eAAW5f,KAAMpH,KAAKge,GAAGzU,MAAMsd,UAAWrP,IAAKxX,KAAK+4B,UAAc/4B,KAAKge,GAAGzU,QAG9E,gBAAC,GAAD,CAAgBnC,KAAMpH,KAAKge,GAAGzU,MAAMsd,UAAWrP,IAAKxX,KAAK+4B,WAvDhE/4B,KAAKge,GAAKjU,EAAM4M,OAChB3W,KAAK+4B,SAAWnvB,cAChB5J,KAAKuJ,MAAQ,CAACsvB,gBAAgB,EAAM3tB,MAAOnB,EAAMmB,OACjDlL,KAAK8D,KAAO,GAwDhByL,SACI,OACI,2BACI,gBAAC,IAAD,CACIrE,MAAOlL,KAAKuJ,MAAM2B,MAClBC,QAASnL,KAAKuJ,MAAMsvB,eACpBztB,SAAUpL,KAAK44B,sBACfvtB,KAAMrL,KAAK84B,qBACXttB,OAAO,KACPD,WAAW,UAEVvL,KAAKg5B,mB,wBChF1B,MAAMjc,GAAQC,KAASD,MACPG,KAAKD,QAEd,MAAMgc,WAAqBrvB,YAC9BhK,YAAYmK,GACRoF,MAAMpF,GADS,KAWnBmZ,QAAU,CAAC8N,EAAG1D,KACVttB,KAAKk5B,SAASlI,GAAK1D,GAZJ,KAenBxG,QAAWkK,GACAhxB,KAAKk5B,SAASlI,GAhBN,KAmBnBmI,YAAenmB,IACX,MAAMgU,EAAchU,EAAIgI,OAAOyY,aAAa,eAC5CzzB,KAAKkjB,QAAQ,YAAalQ,EAAIgI,OAAOyY,aAAa,SAClDzzB,KAAKkjB,QAAQ,UAAWlQ,EAAIgI,OAAOyY,aAAa,SAChDzzB,KAAKkjB,QAAQ,cAAe8D,GAC5BhnB,KAAKkjB,QAAQ,YAAalQ,EAAIgI,OAAOyY,aAAa,cAAgB,IAClEzzB,KAAKkjB,QAAQ,mBAAoBlQ,EAAIgI,OAAOyY,aAAa,qBAAuB,IAChFzzB,KAAKkjB,QAAQ,aAAclQ,EAAIgI,OAAOyY,aAAa,eAAiB,IACpEzzB,KAAKkjB,QAAQ,cAAelQ,EAAIgI,OAAOyY,aAAa,iBAAkB,GACtEzzB,KAAKkjB,QAAQ,aAAclQ,EAAIgI,OAAOyY,aAAa,gBAAiB,GACpEzzB,KAAKkjB,QAAQ,oBAAqBlQ,EAAIgI,OAAOyY,aAAa,uBAAwB,IA7BnE,KAkCnBS,UAAazxB,IACTzC,KAAK0W,SAAS0Y,mBAAmB5X,IAAI6O,eAAe5jB,IAnCrC,KAuCnB22B,UAAY,IACJp5B,KAAKuJ,MAAMge,MACJ,gBAAC,GAAD,CAAO5Q,OAAQ3W,KAAMkL,MAAOlL,KAAKuJ,MAAMwd,UAE3C,KA3CQ,KA+CnBsS,cAAiBrmB,IACbhT,KAAKm5B,YAAYnmB,GACjBhT,KAAK0W,SAAS0Y,mBAAmB5X,IAAImP,OAAO3T,IA/C5ChT,KAAK0W,SAAW3M,EAAM4M,OACtB3W,KAAKuJ,MAAQ,GACbvJ,KAAKk5B,SAAW,GAGpBriB,qBA6CAtH,SACI,OACI,2BACI,gBAAC,KAAD,CAAUrD,MAAO,CAAC+I,OAAQ,UAAW2X,QAAS,YAC1C,gBAAC,GAAD,CAAOjP,OAAO,aAAahS,IAAI,KAC3B,gBAAC,KAAD,CAAK2tB,OAAQ,IACT,gBAAC,KAAD,CAAK7wB,KAAM,GACP,gBAAC,IAAD,CAAMyC,MAAO,kBAET,gBAAC,KAAD,CAAKquB,KAAM,CAACld,aAAc,QAASnR,MAAM,iBACpCiuB,YAAan5B,KAAKm5B,YAAa/xB,KAAM,OACrCoyB,KAAM,wBACNC,WAAW,EAAM7lB,MAAM,UAAU9C,cAAe9Q,KAAKq5B,eAH1D,aAMA,gBAAC,KAAD,CAAKE,KAAM,CAACld,aAAc,QAASnR,MAAM,YAAYiuB,YAAan5B,KAAKm5B,YAClE/xB,KAAM,OACNoyB,KAAM,2BACNC,WAAW,EAAM7lB,MAAM,UAAU9C,cAAe9Q,KAAKq5B,eAH1D,eAMR,gBAAC,KAAD,CAAK5wB,KAAM,GACP,gBAAC,IAAD,CAAMyC,MAAM,cACR,gBAAC,KAAD,CAAKquB,KAAM,CAACld,aAAc,QAAS8c,YAAan5B,KAAKm5B,YAChD/xB,KAAM,eACNoyB,KAAM,kCACNC,WAAW,EAAM7lB,MAAM,UAAU9C,cAAe9Q,KAAKq5B,eAH1D,SAKA,gBAAC,KAAD,CAAKE,KAAM,CAACld,aAAc,QAAS8c,YAAan5B,KAAKm5B,YAChD/xB,KAAM,kBACNoyB,KAAM,qCACNC,WAAW,EAAM7lB,MAAM,UAAU9C,cAAe9Q,KAAKq5B,eAH1D,YAKA,gBAAC,KAAD,CAAKE,KAAM,CAACld,aAAc,QAAS8c,YAAan5B,KAAKm5B,YAAaroB,cAAe9Q,KAAKq5B,cACjFjyB,KAAM,eACNoyB,KAAM,oCACNC,WAAW,EAAM7lB,MAAM,WAH5B,gBAKA,gBAAC,KAAD,CAAK1H,MAAO,CAACmQ,aAAc,QAAS8c,YAAan5B,KAAKm5B,YAAaroB,cAAe9Q,KAAKq5B,cAClFjyB,KAAM,YACNoyB,KAAM,0BACNC,WAAW,EAAM7lB,MAAM,WAH5B,oBAKA,gBAAC,KAAD,CAAK1H,MAAO,CAACmQ,aAAc,QAAS8c,YAAan5B,KAAKm5B,YAAaroB,cAAe9Q,KAAKq5B,cAClFjyB,KAAM,mBACNoyB,KAAM,+CACNC,WAAW,EAAM7lB,MAAM,WAH5B,iBAKA,gBAAC,KAAD,CAAK1H,MAAO,CAACmQ,aAAc,QAAS8c,YAAan5B,KAAKm5B,YAAaroB,cAAe9Q,KAAKq5B,cAClFjyB,KAAM,aACNoyB,KAAM,iBACNC,WAAW,EAAM7lB,MAAM,WAH5B,gBAOR,gBAAC,KAAD,CAAKnL,KAAM,GACP,gBAAC,IAAD,CAAMyC,MAAM,UACR,gBAAC,KAAD,CAAKgB,MAAO,CAACmQ,aAAc,QAAS8c,YAAan5B,KAAKm5B,YAAaroB,cAAe9Q,KAAKq5B,cAClFjyB,KAAM,eAAgBsyB,YAAa,OACnCF,KAAM,oBACNG,UAAW,iBAAkBC,YAAa,OAAQC,WAAY,QAC9DC,kBAAmB,OACnBL,WAAW,EAAM7lB,MAAM,WAL5B,qBAOA,gBAAC,KAAD,CAAK1H,MAAO,CAACmQ,aAAc,QAAS8c,YAAan5B,KAAKm5B,YAAaroB,cAAe9Q,KAAKq5B,cAClFjyB,KAAM,oBAAqBsyB,YAAa,OACxCF,KAAM,qBACNG,UAAW,iBAAkBC,YAAa,OAAQC,WAAY,QAC9DC,kBAAmB,OACnBL,WAAW,EAAM7lB,MAAM,WAL5B,yBAUZ,2BACA,gBAAC,KAAD,CAAK0lB,OAAQ,IACT,gBAAC,KAAD,CAAK7wB,KAAM,GACP,gBAAC,IAAD,CAAMyC,MAAM,8BACR,gBAAC,KAAD,CAAKiuB,YAAan5B,KAAKm5B,YAAa/xB,KAAM,YAAasyB,YAAa,OAAQ5oB,cAAe9Q,KAAKq5B,cAC3FG,KAAM,2BACNC,WAAW,EAAM7lB,MAAM,WAF5B,cAIA,gBAAC,KAAD,CAAKulB,YAAan5B,KAAKm5B,YAAaroB,cAAe9Q,KAAKq5B,cACnDjyB,KAAM,WACNoyB,KAAM,8BACNG,UAAW,mBACXI,iBAAkB,gBAClBC,WAAY,gBACZJ,YAAa,OACbC,WAAY,QACZC,kBAAmB,QACnBL,WAAW,EAAM7lB,MAAM,WAT5B,gCAYR,gBAAC,KAAD,CAAKnL,KAAM,GACP,gBAAC,IAAD,CAAMyC,MAAM,QACR,gBAAC,KAAD,CAAKgB,MAAO,CAACmQ,aAAc,QAAS8c,YAAan5B,KAAKm5B,YAAa/xB,KAAM,UAAW0J,cAAe9Q,KAAKq5B,cACnGK,YAAa,SACbD,WAAW,EAAM7lB,MAAM,WAF5B,aAGA,gBAAC,KAAD,CAAK1H,MAAO,CAACmQ,aAAc,QAAS8c,YAAan5B,KAAKm5B,YAAa/xB,KAAM,OAAQ0J,cAAe9Q,KAAKq5B,cAChGK,YAAa,OACbC,UAAW,qBAAsBC,YAAa,OAC9CJ,KAAM,gBACNC,WAAW,EAAM7lB,MAAM,WAJ5B,YAMA,gBAAC,KAAD,CAAK1H,MAAO,CAACmQ,aAAc,QAAS8c,YAAan5B,KAAKm5B,YAAaroB,cAAe9Q,KAAKq5B,cAClFjyB,KAAM,mBAAoBsyB,YAAa,GACvCF,KAAM,0BACNC,WAAW,EAAM7lB,MAAM,WAH5B,8BAMR,gBAAC,KAAD,CAAKnL,KAAM,GACP,gBAAC,IAAD,CAAMyC,MAAM,SACR,gBAAC,KAAD,CAAKgB,MAAO,CAACmQ,aAAc,QAAS8c,YAAan5B,KAAKm5B,YAAaroB,cAAe9Q,KAAKq5B,cAClFjyB,KAAM,cAAesyB,YAAa,OAClCF,KAAM,sDACNC,WAAW,EAAM7lB,MAAM,WAH5B,0BAIA,gBAAC,KAAD,CAAK1H,MAAO,CAACmQ,aAAc,QAAS8c,YAAan5B,KAAKm5B,YAAaroB,cAAe9Q,KAAKq5B,cAClFjyB,KAAM,iBAAkBsyB,YAAa,OACrCF,KAAM,oCACNG,UAAW,GAAIC,YAAa,OAAQC,WAAY,OAChDC,kBAAmB,QACnBL,WAAW,EAAM7lB,MAAM,WAL5B,eAOA,gBAAC,KAAD,CAAK1H,MAAO,CAACmQ,aAAc,QAAS8c,YAAan5B,KAAKm5B,YAAaroB,cAAe9Q,KAAKq5B,cAClFjyB,KAAM,eAAgBsyB,YAAa,SACnCF,KAAM,GACNC,WAAW,EAAM7lB,MAAM,WAH5B,iBAIA,gBAAC,KAAD,CAAK1H,MAAO,CAACmQ,aAAc,QAAS8c,YAAan5B,KAAKm5B,YAAaroB,cAAe9Q,KAAKq5B,cAAejyB,KAAM,OACvGsyB,YAAa,OACbC,UAAW,qBAAsBC,YAAa,QAC9CJ,KAAM,mBACNC,WAAW,EAAM7lB,MAAM,WAJ5B,aAKA,gBAAC,KAAD,CAAK1H,MAAO,CAACmQ,aAAc,QAAS8c,YAAan5B,KAAKm5B,YAAaroB,cAAe9Q,KAAKq5B,cAClFjyB,KAAM,eAAgBsyB,YAAa,OACnCC,UAAW,GAAIC,YAAa,QAASC,WAAY,OACjDL,KAAM,+BACNC,WAAW,EAAM7lB,MAAM,WAJ5B,gBAMA,gBAAC,KAAD,CAAK1H,MAAO,CAACmQ,aAAc,QAAS8c,YAAan5B,KAAKm5B,YAAaroB,cAAe9Q,KAAKq5B,cAClFjyB,KAAM,YAAasyB,YAAa,GAChCF,KAAM,qBACNC,WAAW,EAAM7lB,MAAM,WAH5B,mBAMA,gBAAC,KAAD,CAAK1H,MAAO,CAACmQ,aAAc,QAAS8c,YAAan5B,KAAKm5B,YAAaroB,cAAe9Q,KAAKq5B,cAClFjyB,KAAM,iBAAkBsyB,YAAa,OACrCF,KAAM,6BACNG,UAAW,GAAIC,YAAa,QAASC,WAAY,OACjDC,kBAAmB,QACnBL,WAAW,EAAM7lB,MAAM,WAL5B,qBAMA,gBAAC,KAAD,CAAK1H,MAAO,CAACmQ,aAAc,QAAS8c,YAAan5B,KAAKm5B,YAAaroB,cAAe9Q,KAAKq5B,cAClFjyB,KAAM,cAAesyB,YAAa,OAClCF,KAAM,aACNG,UAAW,GAAIC,YAAa,QAASC,WAAY,OACjDC,kBAAmB,OACnBL,WAAW,EAAM7lB,MAAM,WAL5B,aAOA,gBAAC,KAAD,CAAK1H,MAAO,CAACmQ,aAAc,QAAS8c,YAAan5B,KAAKm5B,YAAaroB,cAAe9Q,KAAKq5B,cAClFjyB,KAAM,WAAYsyB,YAAa,OAC/BF,KAAM,cACNG,UAAW,GAAIC,YAAa,QAASC,WAAY,OACjDC,kBAAmB,OACnBL,WAAW,EAAM7lB,MAAM,WAL5B,eAOA,gBAAC,KAAD,CAAK1H,MAAO,CAACmQ,aAAc,QAAS8c,YAAan5B,KAAKm5B,YAAaroB,cAAe9Q,KAAKq5B,cAClFjyB,KAAM,cAAesyB,YAAa,OAClCF,KAAM,2BACNG,UAAW,eAAgBC,YAAa,QAASC,WAAY,QAC7DC,kBAAmB,OACnBL,WAAW,EAAM7lB,MAAM,WAL5B,4BAOA,gBAAC,KAAD,CAAK1H,MAAO,CAACmQ,aAAc,QAAS8c,YAAan5B,KAAKm5B,YAAaroB,cAAe9Q,KAAKq5B,cAClFjyB,KAAM,eAAgBsyB,YAAa,OACnCF,KAAM,gBACNG,UAAW,cAAeC,YAAa,OAAQC,WAAY,QAC3DC,kBAAmB,OACnBL,WAAW,EAAM7lB,MAAM,WAL5B,6BAMA,gBAAC,KAAD,CAAK1H,MAAO,CAACmQ,aAAc,QAAS8c,YAAan5B,KAAKm5B,YAAaroB,cAAe9Q,KAAKq5B,cAClFjyB,KAAM,eACNsyB,YAAa,SACbD,WAAW,EAAM7lB,MAAM,WAH5B,yBAWnB5T,KAAKo5B,c,0CCvPda,GAA4BC,KAA5BD,SAAUE,GAAkBD,KAAlBC,cACH,MAAMC,WAAsBxwB,YACvChK,YAAYmK,GACRoF,MAAMpF,GACN/J,KAAKuJ,MAAM,CAAC8wB,IAAI,GAAG1e,SAAQ,GAIzBE,SAAS,IAAD,iIACZ,EAAKxS,SAAS,CAACsS,SAAQ,IADX,SAEM1C,GAAcqhB,oBAFpB,OAGI,OADV/3B,EAFM,QAGL1C,SACIw6B,EAAM,GACZ93B,EAAIzC,QAAQkQ,QAAQC,IACboqB,EAAIpqB,EAAKsqB,UAGXF,EAAIpqB,EAAKsqB,UAAUp5B,KAAK8O,EAAKuqB,OAF7BH,EAAIpqB,EAAKsqB,UAAY,CAACtqB,EAAKuqB,SAKhC,EAAKnxB,SAAS,CAACgxB,SAEnB,EAAKhxB,SAAS,CAACsS,SAAQ,IAdZ,6CAiBd8e,OACI,OAAOv3B,OAAOw3B,QAAQ16B,KAAKuJ,MAAM8wB,KAAKznB,IAAI,EAAEjH,EAAI0C,KACrC,gBAAC4rB,GAAD,CAAU/uB,MAAOS,EAAKA,IAAKA,GAC9B0C,EAAMuE,IAAI3C,GACA,gBAACgqB,GAAD,CAAU7tB,KAAM,gBAACuuB,GAAA,EAAD,MAAmBzvB,MAAO+E,EAAMtE,IAAG,UAAKA,EAAL,YAAYsE,GAAQ2qB,QAAM,OAM7F/jB,oBAAoB,IAAD,kIAChB,EAAKgF,SADW,6CAIzBtM,SACE,OACE,gBAAC,KAAD,CAAMsrB,IAAI,aAAaC,SAAU96B,KAAKuJ,MAAMoS,SAC5C,gBAACwe,GAAD,KACCn6B,KAAKy6B,U,MC5CNR,GAA4BC,KAA5BD,SAAUE,GAAkBD,KAAlBC,cACH,MAAMY,WAAuBnxB,YACxChK,YAAYmK,GAAQ,IAAD,EACfoF,MAAMpF,GADS,YAMnBixB,YANmB,uCAML,WAAM9yB,GAAN,iBAAArE,EAAA,sEACMoV,GAAcgiB,GAAG/yB,GADvB,UAEI,OADV3F,EADM,QAEL1C,QAAiB0C,EAAIzC,QAAQ,GAAGo7B,gBAF3B,uBAGDC,EAAO54B,EAAIzC,QAAQ8S,IAAI3C,IACzBA,EAAI,OAAa,EAAKmrB,MAAMnrB,GAC5BA,EAAI,IAAUA,EAAK/H,KACnB+H,EAAI,MAAYA,EAAK/H,KAAKsS,MAAM,KAAKiX,OAAO,GAAG,GAC/CxhB,EAAI,QAAcA,EAAKorB,OAChBprB,IARJ,kBAUAkrB,GAVA,gCAYJ,IAZI,2CANK,2DAqBnBC,MAAOnrB,GACEA,EAAKqrB,WAAW9J,WAAW,KAtBjB,KAyBlB+J,WAzBkB,uCAyBL,WAAOC,GAAP,SAAA33B,EAAA,sEAC4B,EAAKm3B,YAAYQ,EAASzxB,MAAM0xB,QAAQvzB,MADpE,OACZszB,EAASzxB,MAAM0xB,QAAQ5J,SADX,OAEZ,EAAKxoB,SAAS,CAAC8xB,KAAK,IAAI,EAAK5xB,MAAM4xB,QAFvB,2CAzBK,2DA8BnBO,gBAAkB53B,GACTA,EAAK8O,IAAI3C,GACXA,EAAK4hB,SACC,gBAAC,GAAD,CAAU3mB,MAAO+E,EAAK/E,MAAOS,IAAKsE,EAAKtE,IAAKivB,OAAQ3qB,EAAK2qB,OAASa,QAASxrB,GAC/EjQ,KAAK07B,gBAAgBzrB,EAAK4hB,WAGxB,gBAAC,GAAD,CAAU3mB,MAAO+E,EAAK/E,MAAOS,IAAKsE,EAAKtE,IAAKivB,OAAQ3qB,EAAK2qB,OAAQa,QAASxrB,KAnCjFjQ,KAAKuJ,MAAM,CAAC4xB,KAAK,GAAGxf,SAAQ,GAuC1BE,SAAS,IAAD,+HACX,EAAKxS,SAAS,CAACsS,SAAQ,IADZ,SAEQ,EAAKqf,YAAY,KAFzB,OAELG,EAFK,OAGX,EAAK9xB,SAAS,CAACsS,SAAQ,EAAMwf,SAHlB,6CAMRtkB,oBAAoB,IAAD,kIAChB,EAAKgF,SADW,6CAIzBtM,SACE,OACE,2BACE,gBAAC,KAAD,CAAMsrB,IAAI,aAAaC,SAAU96B,KAAKuJ,MAAMoS,SAC7C,gBAAC,GAAD,CAAeggB,SAAU37B,KAAKu7B,YAC1Bv7B,KAAK07B,gBAAgB17B,KAAKuJ,MAAM4xB,U,2EC9DKlsB,EAAQ,KAEpD2sB,GAAiB,CACnBvyB,S,GAHItF,uBAKF83B,GAAgB,CAClBxyB,S,GAN2BpF,gB,GCIkDN,IAAYC,aAAZ,uCAAyB,WAAOrD,GAAP,yBAAAsD,EAAA,yDAChGH,EAAS,IAAIvB,cADmF,EAE5E5B,EAAOuD,KAA1Bg4B,EAF+F,EAE/FA,KAAKC,EAF0F,EAE1FA,WACRD,EAAKV,MAH6F,iCAI/E13B,EAAOrB,IAAIC,UAAa8C,gBAAgB,CAACkH,GAAGwvB,EAAKxvB,KAJ8B,UAKlF,OADV/J,EAJ4F,QAK3F1C,OAL2F,yCAMvF,CAACiE,KAAK,CACT7B,MAAM,oBAAD,OAAsB65B,EAAKrtB,MAA3B,qBAA6ClM,EAAIzC,YAPoC,OAU5Fk8B,EAAaz5B,EAAIzC,QACvBi8B,EAAWE,sBAAsB,CAAC3vB,GAAIwvB,EAAKxvB,GAAIxM,QAASk8B,EAAWl8B,QAASsH,KAAM40B,EAAW50B,OAXK,iCAa/F,CAACtD,KAAK,KAbyF,4CAAzB,uDAA3Do4B,G,GAARl4B,QAA2Cm4B,G,GAAP57B,O,GCC4BoD,IAAYC,aAAZ,uCAAyB,WAAOrD,GAAP,mCAAAsD,EAAA,yDAC7FH,EAAS,IAAIvB,cADgF,EAE3C5B,EAAOuD,KAAvDs4B,EAF2F,EAE3FA,WAF2F,EAE/EL,WAAWM,EAFoE,EAEpEA,KAFoE,IAE/DC,qBAF+D,MAEjD,GAFiD,IAGhFD,EAAKE,gBAAjBC,EAH4F,EAG5FA,SAH4F,yCAMxF,CAAC14B,KAAK,CACT24B,gBAAiB,gCAP0E,OAW3FX,EAASv7B,EAAOuI,QAAhBgzB,KAEJV,GAAQ,EAbuF,KAc3FgB,EAd2F,OAe1F,SAf0F,QA2B1F,WA3B0F,4BAgB3FhB,GAAQ,EACJoB,EAAShN,SAAS,WAClBgN,EAAShN,SAAS,QAClBgN,EAAShN,SAAS,OAnBqE,0CAoBhF,CACH1rB,KAAM,CACF24B,gBAAiB,mDAtB8D,mDA4B3FrB,GAAQ,EA5BmF,oCAgC7FsB,EAAa,CACfF,SAAUA,EACVpB,MAAOA,EACPt7B,QAASw8B,EACTK,SAAUb,EAAKxvB,IApCgF,UAuCjF5I,EAAON,KAAKd,UAAa+B,iBAAiBq4B,GAvCuC,wCAyC5F,CACH54B,KAAK,2BACEvD,EAAOuD,MADV,IAEA84B,UAAW/L,GAAMO,iBA5C0E,4CAAzB,uDAAtDyL,G,GAAT74B,QAA0C84B,G,GAARv8B,O,GCDgBoD,IAAYC,aAAZ,uCAAyB,WAAOrD,GAAP,uBAAAsD,EAAA,6DAC/Ek5B,EAAgBx8B,EAAOuD,KAAvBi5B,aACaC,EAAmBz8B,EAAOuI,QAAvCi0B,aACDE,EAAiBF,EAAatiB,OAAOxK,IAAO+sB,EAAgBriB,SAAS1K,IACrEitB,EAAmBF,EAAgBviB,OAAOxK,IAAO8sB,EAAapiB,SAAS1K,IACvEvM,EAAS,IAAIvB,cACnBuQ,QAAQC,IAAIsqB,EAAeC,GAC3BD,EAAejtB,QAAf,uCAAuB,WAAMmtB,GAAN,SAAAt5B,EAAA,sEACbH,EAAON,KAAKd,UAAa+B,iBAAiB,CAC5CiI,GAAI6wB,EAAQC,YAAW,IAFR,2CAAvB,uDAMAF,EAAiBltB,QAAjB,uCAAyB,WAAMmtB,GAAN,SAAAt5B,EAAA,sEACfH,EAAON,KAAKd,UAAa+B,iBAAiB,CAC5CiI,GAAI6wB,EAAQC,YAAW,IAFN,2CAAzB,uDAbsF,kBAmB/E,CACHt5B,KAAM,CACFi5B,kBArB8E,2CAAzB,uDAA3CM,G,GAARr5B,QAAmCs5B,G,GAAP/8B,O,GCCoCoD,IAAYC,aAAZ,uCAAyB,WAAOrD,GAAP,eAAAsD,EAAA,6DAC3Fi4B,EAASv7B,EAAOuD,KAAhBg4B,KAD2F,SAE7F35B,cAAYuB,OAAON,KAAKd,UAAa+C,mBAAoB,CAC3DiH,GAAIwvB,EAAKxvB,KAHsF,gCAK5F,CACHxI,KAAK,2BACEvD,EAAOuD,MADV,IAEA84B,UAAW/L,GAAMK,uBAR0E,2CAAzB,uDAAtDqM,G,GAATv5B,QAA0Cw5B,G,GAARj9B,O,GCD8CoD,IAAYC,aAAZ,uCAAyB,WAAOrD,GAAP,qBAAAsD,EAAA,yDAC9GH,EAAS,IAAIvB,cADiG,EAE1F5B,EAAOuD,KAA1Bg4B,EAF6G,EAE7GA,KAF6G,EAExGC,WACRD,EAAKV,MAH2G,gCAI7F13B,EAAON,KAAKd,UAAaoD,wBAAwB,CAAC4G,GAAGwvB,EAAKxvB,KAJmC,UAKhG,OADV/J,EAJ0G,QAKzG1C,OALyG,yCAMrG,CAACiE,KAAK,CACT7B,MAAM,wBAAD,OAA0B65B,EAAKrtB,MAA/B,qBAAiDlM,EAAIzC,YAP8C,gCAY7G,CAACgE,KAAK,KAZuG,2CAAzB,uDAAzE25B,G,GAARz5B,QAAkD05B,G,GAAPn9B,O,GCAYoD,IAAYC,aAAZ,uCAAyB,WAAOrD,GAAP,qBAAAsD,EAAA,6DACpFH,EAAS,IAAIvB,cADuE,EAEzE5B,EAAOuD,KAAjBg4B,EAFmF,EAEnFA,KAFmF,EAE9E6B,EAF8E,SAGvEj6B,EAAON,KAAKd,UAAaqD,oBAAoB,CAAC2G,GAAGwvB,EAAKxvB,KAHiB,UAI1E,OADV/J,EAHoF,QAInF1C,OAJmF,yCAK/E,CAACiE,KAAK,CACL7B,MAAM,iBAAD,OAAmB65B,EAAKrtB,MAAxB,qBAA0ClM,EAAIzC,YAN2B,gCASnF,CAACgE,KAAK,KAT6E,2CAAzB,uDAA/C85B,G,GAAR55B,QAAkC65B,G,GAAPt9B,OCGzC,MAAMu9B,OACKC,eAAe,iBADpBD,GAEKE,iBAAiB,mBAFtBF,GAGKG,iBAAiB,mBAHtBH,GAIKI,cAAc,gBAJnBJ,GAKKK,YAAY,gBALjBL,GAMKM,OAAO,SAElB,MAAMC,GAAkB,2BACjBzC,IADiB,IAEpB,CAACkC,GAAsBC,gBAAgB7B,GACvC,CAAC4B,GAAsBE,kBAAkBnB,GACzC,CAACiB,GAAsBM,QAAQf,GAC/B,CAACS,GAAsBG,kBAAkBV,GACzC,CAACO,GAAsBI,eAAeT,GACtC,CAACK,GAAsBK,aAAaP,KAElCU,GAAiB,2BAChBzC,IADgB,IAEnB,CAACiC,GAAsBC,gBAAgB5B,GACvC,CAAC2B,GAAsBE,kBAAkBlB,GACzC,CAACgB,GAAsBM,QAAQd,GAC/B,CAACQ,GAAsBG,kBAAkBT,GACzC,CAACM,GAAsBI,eAAeR,GACtC,CAACI,GAAsBK,aAAaN,KAGxC,SAASU,GAAkBh1B,EAAOhJ,GAClC,OAAO+9B,GAAkB/9B,EAAOiJ,MAAMD,EAAOhJ,EAAOuD,M,kCCoCrC06B,OAnEf,MAA4B,cAAD,KAkBvBC,MAAS7Q,IAEL,IAAkBkO,EAAkB1N,EAAhCsQ,EAAU,GAAUC,EAAQ,GAChC,IAAKvQ,EAAI,EAAGA,EAAIR,EAAKvsB,OAAQ+sB,GAAK,EAC9BsQ,EAAQ9Q,EAAKQ,GAAG9hB,IAAM8hB,EACtBR,EAAKQ,GAAGwQ,WAAa,GAEzB,IAAKxQ,EAAI,EAAGA,EAAIR,EAAKvsB,OAAQ+sB,GAAK,EAE9B,GADA0N,EAAOlO,EAAKQ,GACU,IAAlB0N,EAAKa,SACL,IACI/O,EAAK8Q,EAAQ5C,EAAKa,WAAWiC,WAAWz9B,KAAK26B,GAC/C,MAAOzzB,GACLqK,QAAQC,IAAImpB,GACZppB,QAAQC,IAAI+rB,EAAQ5C,EAAKa,gBAI7BgC,EAAMx9B,KAAK26B,GAGnB,OAAO6C,GAvCY,KA0CvBE,QAAW5uB,IACHA,EAAI,YAAkBA,EAAI,WAAe5O,OAAS,IAClD4O,EAAI,SAAeA,EAAI,WACvBA,EAAI,SAAa2C,IAAKksB,GACX9+B,KAAK6+B,QAAQC,KAG5B7uB,EAAI,GAAS+iB,OAAO/iB,EAAI,IACxBA,EAAI,IAAUA,EAAI,GAElBA,EAAI,MAAY,8BAAOA,EAAKxB,OAC5BwB,EAAI,QAAcA,EAAI,MACtBA,EAAI,UAAgBA,EAAI,WACpBA,EAAI,MACJA,EAAI,KAAW,kBAAC8uB,GAAA,EAAD,MAEf9uB,EAAI,KAAW,kBAAC+uB,GAAA,EAAD,MAGZ/uB,K,yLC5Df,MAAMgvB,GAAWvxB,KAAOC,IAAV,MAaCuxB,OANf,WACI,OAAO,kBAACD,GAAD,KACH,kBAAC,KAAD,CAAMpE,IAAI,kBCZlB,MAAMsE,GAAiB,EAAEC,iBAAej1B,YAAUk1B,eAAa,MAAD,EAEE/0B,wBAAS/I,GAFX,mBAEnD+9B,EAFmD,KAE3BC,EAF2B,KAiD1D,MAAO,CAACC,aA7CaC,sBAAaj/B,IAAY,MAClCgQ,EAAgBhQ,EAAhBgQ,MAAOsrB,EAASt7B,EAATs7B,KAEf,IAAI4D,EAAUlvB,EAAMmvB,QAChBC,EAASpvB,EAAMqvB,QACnB,MAAMtH,EAASvlB,IACX,IAAIosB,EAAe70B,QAAS,QACP60B,EAAe70B,QAAQu1B,SAAS9sB,EAAIgI,SAErDukB,OAA0Bh+B,IAGlC42B,SAAS4H,iBAAiB,QAASxH,GAEnC,MAAMyH,EAAS,KACXT,OAA0Bh+B,IAS9B,OAPA42B,SAAS4H,iBAAiB,SAAUC,GAEpCT,EAA0B,CACtBU,MAAOP,EACPQ,MAAON,EACPtzB,GAAIwvB,EAAKxvB,IAAMwvB,EAAKnwB,MAEjB,KACHwsB,SAASgI,oBAAoB,QAAQ5H,GACrCJ,SAASgI,oBAAoB,SAASH,KAE5C,CAACT,IAiBkBa,GAfVX,sBAAY,KACnB,IAAKH,EACD,OAFmB,uBAIWA,GAA1BW,EAJe,EAIfA,MAAOC,EAJQ,EAIRA,MACTG,GALiB,EAID/zB,GACL,CACbg0B,OAAQ,IACRnb,SAAU,QACV9P,KAAK,GAAD,OAAK4qB,EAAL,MACJ/qB,IAAI,GAAD,OAAKgrB,EAAL,MACHxuB,aAAc,MACd6uB,UAAW,uGAEf,OAAO,yBAAK/oB,IAAK4nB,EAAgBlzB,MAAOm0B,GAAWhB,EAAS,CAACC,yBAAuBC,4BAA0Bp1B,gBAChH,CAACm1B,MC7BAnF,GAAiBD,KAAjBC,cAGDnsB,GAAY,CACdwyB,MAAO,GACPv+B,WAAOV,EACPk7B,qBAAiBl7B,EACjB66B,gBAAY76B,EACZk/B,iBAAal/B,EACbm/B,cAAc,EACd9D,eAAWr7B,EACXoa,SAAS,EACTohB,aAAc,IAIZ4D,GAAoB/2B,IAAMC,gBAEhC,SAAS+2B,GAAW72B,GAAQ,MACjBgyB,EAAchyB,EAAdgyB,WADgB,EAEI3tB,0BAAgBmwB,GAAmBvwB,GAAWqwB,IAFlD,mBAEhB90B,EAFgB,KAETY,EAFS,KAInBwR,EAQApS,EARAoS,QACA6kB,EAOAj3B,EAPAi3B,MACAv+B,EAMAsH,EANAtH,MAAOw6B,EAMPlzB,EANOkzB,gBACPL,EAKA7yB,EALA6yB,WACAsE,EAIAn3B,EAJAm3B,aACAD,EAGAl3B,EAHAk3B,YACA7D,EAEArzB,EAFAqzB,UACAG,EACAxzB,EADAwzB,aAEEr5B,EAAS,IAAIvB,cACbi9B,EAAiBr0B,mBAdA,EAeR81B,IAAKC,UAAbzE,EAfgB,oBAiBvBrxB,oBAAU,MACO,uCAAG,oCAAAnH,EAAA,sEACSH,EAAOrB,IAAIC,UAAaqD,oBAAqB,IADtD,UAEU,OADhBo7B,EADM,QAEDlhC,OAFC,iEAKM6D,EAAOrB,IAAIC,UAAa6C,iBAAkB,IALhD,UAMO,OADb5C,EALM,QAMJ1C,OANI,mDAUNmhC,EAAU,IAAIxC,GAEdyC,EAAUD,EAAQvC,MAAMl8B,EAAIzC,SAASohC,KAAK,CAACr9B,EAAGs9B,IACzCA,EAAE70B,GAAKzI,EAAEyI,IAGpBy0B,EAAOjhC,QAAQ8S,IAAI3C,IACfA,EAAK,GAAG0sB,SAAW,EACnB1sB,EAAK,GAAGxB,MAAQ,0BAAMvC,MAAO,CAAC0H,MAAO,UAAW3D,EAAK,GAAGxB,MAAQ,sBAChE,MAAMqtB,EAAOkF,EAAQvC,MAAMxuB,GAE3B,OADAgxB,EAAQ,GAAGrC,WAAaqC,EAAQ,GAAGrC,WAAWwC,OAAOtF,EAAK,IACnD7rB,IAGLoxB,EAAWJ,EAAQruB,IAAI3C,GAClB+wB,EAAQnC,QAAQ5uB,IAG3B4gB,GAAMa,UAAU2P,EAAS,GAAKpxB,IACtBA,EAAKmtB,YACLL,EAAa57B,KAAK8O,EAAK3D,MAI/BnC,EAAU,CACNX,KAAM,WACN1F,KAAM,CACF08B,MAAOa,EACP1lB,SAAS,EACTohB,kBAvCI,4CAAH,qDA4CbuE,IACD,CAAC1E,IAEJ,MAjEuB,EAiKiCuC,GAAe,CAACC,iBAAgBj1B,YAAWk1B,SAhGlF,EAAEC,yBAAwBC,4BAA2Bp1B,gBAAgB,MAC3EmC,EAAMgzB,EAANhzB,GACP,IAAI0O,OAASzZ,EAOb,OALAsvB,GAAMa,UAAU8O,EAAM,GAAKvwB,IACnBA,EAAK3D,KAAOA,IACZ0O,EAAS/K,KAGb3D,IAAOk0B,EAAM,GAAGl0B,GACT,kBAAC,IAAD,KACH,kBAAC,IAAKL,KAAN,CAAWG,KAAM,kBAACm1B,GAAA,EAAD,MAAsB71B,QACnC,KACIvB,EAAU,CACNX,KAAM,WACN1F,KAAM,CACFg4B,KAAM9gB,EACNohB,WAAY,SACZqE,YAAa,iBACbC,cAAc,OAR9B,mBAgBH1lB,EAAOogB,MAuBL,kBAAC,IAAD,KACFpgB,EAAO2hB,UAAY6D,EAAM,GAAGl0B,IAAM,kBAAC,IAAKL,KAAN,CAAWG,KAAM,kBAACo1B,GAAA,EAAD,MAAqB91B,QAAS,KAC9EvB,EAAU,CACNX,KAAMs0B,GAAsBK,YAC5Br6B,KAAM,CACFg4B,KAAM9gB,KAGdukB,OAA0Bh+B,IAC3BoK,IAAK,GAR2B,gBAUnC,kBAAC,IAAKM,KAAN,CAAWG,KAAM,kBAACq1B,GAAA,EAAD,MAAoB/1B,QAAS,KAC1CvB,EAAU,CACNX,KAAM,WACN1F,KAAM,CACFg4B,KAAM9gB,EACNohB,WAAY,OACZqE,YAAa,cACbC,cAAc,KAGtBnB,OAA0Bh+B,IAC3BoK,IAAK,GAXR,iBAYA,kBAAC,IAAKM,KAAN,CAAWG,KAAM,kBAACm1B,GAAA,EAAD,MAAsB71B,QAAS,KAC5CvB,EAAU,CACNX,KAAM,WACN1F,KAAM,CACFg4B,KAAM9gB,EACNohB,WAAY,SACZqE,YAAa,gBACbC,cAAc,KAGtBnB,OAA0Bh+B,IAC3BoK,IAAK,GAXR,iBAYA,kBAAC,IAAKM,KAAN,CAAWG,KAAM,kBAACs1B,GAAA,EAAD,MAAmBh2B,QAAS,KACzCvB,EAAU,CACNX,KAAMs0B,GAAsBG,iBAC5Bn6B,KAAM,CACFg4B,KAAM9gB,KAGdukB,OAA0Bh+B,IAC3BoK,IAAK,GARR,WAzDO,kBAAC,IAAD,KACH,kBAAC,IAAKM,KAAN,CAAWP,QAAS,KAChBvB,EAAU,CACNX,KAAMs0B,GAAsBI,cAC5Bp6B,KAAM,CACFg4B,KAAM9gB,KAGdukB,OAA0Bh+B,IAC3BoK,IAAK,GARR,iCASA,kBAAC,IAAKM,KAAN,CAAWP,QAAS,KAChBvB,EAAU,CACNX,KAAMs0B,GAAsBG,iBAC5Bn6B,KAAM,CACFg4B,KAAM9gB,KAGdukB,OAA0Bh+B,IAC3BoK,IAAK,GARR,cA0DSg2B,EAjKE,EAiKhBnC,aAAkCoC,EAjKlB,EAiKcxB,GAErC,OACI,kBAACO,GAAkB11B,SAAnB,CAA4BoD,MAAO,CAAClE,cAC/By3B,IACD,kBAAC,KAAD,CACI12B,MAAOu1B,EACPt1B,QAASu1B,EACTt1B,SAAU,KACNjB,EAAU,CACNX,KAAM,WACN1F,KAAM,CAAC48B,cAAc,MAG7Br1B,KAAM,KACFlB,EAAU,CACNX,KAAMs0B,GAAsBE,iBAC5Bl6B,KAAM,CACF48B,cAAc,EACd3E,aAAYK,aACZC,WAIZ9wB,WAAW,SACXyF,OAAO,MAGHyrB,GAAmB,kBAAC,GAAD,CAAU3uB,QAAS2uB,IAE1C,kBAAC,IAAD,CAAMJ,KAAMA,GACR,kBAAC,IAAKpwB,KAAN,CAAW7E,KAAK,WAAWqH,MAAM,aAC7B,kBAAC,IAAD,SAIXxM,GAAS,kBAAC,GAAD,CAAU6L,QAAS7L,IAC5B0Z,GAAW,kBAAC,GAAD,OACVA,GACF,kBAAC,GAAD,CAAerK,OAAQ,IACRuwB,SAAW9E,IACP5yB,EAAU,CACNX,KAAMs0B,GAAsBM,OAC5Bt6B,KAAM,CAACi5B,mBAGfjsB,cAAe,CAACkC,EAAK8oB,KACjB3xB,EAAU,CACNX,KAAMs0B,GAAsBC,eAC5Bj6B,KAAM,CAACi4B,aAAYD,WAG3BgG,oBAAqB/E,EACrBgF,aAAa,QACbvC,aAAcmC,EACdK,aAAc,kBAACC,GAAA,EAAD,MACdZ,SAAUb,K,MC1P7BvjB,GAAYC,KAAZD,QACO,MAAMilB,WAAqBt4B,YACtChK,YAAYmK,GACRoF,MAAMpF,GACN/J,KAAK0W,SAAW3M,EAAM4M,OAE1BpH,SACG,OAAO,gBAAC,KAAD,CAAMqO,iBAAiB,IAAI1R,MAAO,CAAC4Q,SAAS,SAAUe,WAAalS,IAChE,MAANA,GACI3L,KAAKmiC,kBACJniC,KAAKmiC,iBAAiBtmB,WAS9B,gBAAC,GAAD,CAASkC,IAAI,SAASpS,IAAI,KAC3B,uBAAK2C,UAAU,gBACX,gBAACsyB,GAAD,CAAY7E,WAAc/7B,KAAK0W,aAGnC,gBAAC,GAAD,CAASqH,IAAI,YAAYpS,IAAI,KAC7B,uBAAK2C,UAAU,gBACX,gBAAC,GAAD,CAAekJ,IAAMwG,GAAMhe,KAAKmiC,iBAAmBnkB,MAGvD,gBAAC,GAAD,CAASD,IAAI,aAAapS,IAAI,KAC9B,uBAAK2C,UAAU,gBACX,gBAAC,GAAD,CAAgBkJ,IAAMwG,GAAMhe,KAAKoiC,kBAAoBpkB,Q,OC3BhE,MAAMqkB,WAAsBpwB,YAExBrS,YAAYmK,GACRoF,MAAMpF,GADS,KAqBnBkyB,sBAAyBniB,IACrB,MAAM/J,EAAO/P,KACb,GAAIA,KAAKsiC,gBAAgBvuB,eAAe+F,EAAOxN,IAAK,CAChD,MAAMi2B,EAAYviC,KAAKsiC,gBAAgBxoB,EAAOxN,IAC9Ci2B,EAAU/qB,IAAIxV,KAAK8X,EAAOha,QAASga,EAAOxN,IAC1CtM,KAAKwiC,YAAYj4B,QAAQmT,SAAS6kB,EAAUlT,gBAG5CrvB,KAAKwiC,YAAYj4B,QAAQqlB,QAAQ9V,EAASyoB,IACtCA,EAAU/qB,IAAIxV,KAAK8X,EAAOha,QAASga,EAAOxN,IAC1CyD,EAAKuyB,gBAAgBxoB,EAAOxN,IAAMi2B,IAKtCzoB,EAAO1S,KAAKooB,SAAS,OACrBzf,EAAK1G,SAAS,CAAComB,cAAe,aACxB3V,EAAO1S,KAAKooB,SAAS,OAC3Bzf,EAAK1G,SAAS,CAAComB,cAAe,iBAE9B1f,EAAK1G,SAAS,CAAComB,cAAe,YAzCnB,KA6CnBa,YAAeiS,IACX,MAAME,EAAsBv/B,OAAO0M,KAAK5P,KAAKsiC,iBAAiB7nB,OAAO9O,GAC1D3L,KAAKsiC,gBAAgB32B,GAAK0jB,YAAckT,EAAUlT,WAC1Dpb,OAAO,CAACyuB,EAAK/2B,KACZ+2B,EAAI/2B,GAAO3L,KAAKsiC,gBAAgB32B,GACzB+2B,GACR,IACH1iC,KAAKsiC,gBAAkBG,GApDR,KAuDnBrT,iBAAmB,IACRpvB,KAAKwiC,YAAYj4B,QAAQ6kB,mBAxDjB,KA4DnBlM,QAAWpf,IACP9D,KAAKyd,aAAe3Z,EACpB9D,KAAK+hB,KAAKxX,QAAQ2M,WA9DH,KAiEnByrB,aAAe,KACX,GAAiC,aAA7B3iC,KAAKuJ,MAAMkmB,eAA6D,iBAA7BzvB,KAAKuJ,MAAMkmB,cACtD,OAAO,6BACH,kBAAC,aAAD,CAAWtY,YAAa,CAAC7F,OAAQ,SAAUoX,SAAU,KACjD1oB,KAAKsmB,WAAW/b,QAAQuN,OAAO6Q,WAE/B,kBAAC,KAAD,CACIrX,OAAQ,OACRD,MAAO,OACPmG,IAAKxX,KAAKsmB,WACVta,KAAK,OACLkQ,MAAM,SACN9U,KAAK,iBAIb,6BACI,kBAAC,GAAD,CAAWoQ,IAAKxX,KAAK+hB,KAAMpL,OAAQ3W,QAEvC,yBAAKsO,UAAU,uBACX,kBAAC,GAAD,CAAmBkJ,IAAKxX,KAAK+R,QAAS4E,OAAQ3W,UAlF1DA,KAAKuJ,MAAQ,CACTq5B,WAAY,GACZnT,cAAe,UAGnBzvB,KAAKwiC,YAAc54B,IAAMi5B,YACzB7iC,KAAKsmB,WAAa1c,IAAMi5B,YACxB7iC,KAAK+R,QAAUnI,IAAMi5B,YACrB7iC,KAAK+hB,KAAOnY,IAAMi5B,YAClB7iC,KAAK4mB,MAAQhd,IAAMi5B,YAKnB7iC,KAAKsiC,gBAAkB,GA2E3B/yB,SACI,OACI,yBAAKjB,UAAU,UAEZ,yBAAKA,UAAU,gBACf,kBAAC,aAAD,CAAYpC,MAAO,CAAE42B,aAAc,OAAQC,YAAa,UACvD,kBAAC,GAAD,CAAevrB,IAAMwG,GAAKhe,KAAKgjC,gBAAkBhlB,EAAIrH,OAAQ3W,SAI7D,yBAAKsO,UAAU,iBACX,yBAAKpC,MAAO,CAACmQ,aAAc,SACvB,kBAAC,GAAD,CAAc7E,IAAKxX,KAAK4mB,MAAOjQ,OAAQ3W,QAE3C,kBAAC,GAAD,CAAWwX,IAAKxX,KAAKwiC,YAAa7rB,OAAQ3W,OACzCA,KAAK2iC,kBAQXN,U,WC7Hf,MAAMY,GACJrjC,YAAYsjC,GACVljC,KAAKkjC,WAAaA,EAGpBC,QAAQC,GACN,OAAOA,EAAOnvB,OAAO,CAACovB,EAAGC,IAAUA,EAAMD,GAAIrjC,KAAKkjC,aAIvCK,OAZJL,GAAe,IAAID,GAAaC,GCEpC,MAAMM,GAAeN,GAAa,cAAcA,EAAY,eAAD,iCAE5DO,iBAAmB,KACjBzjC,KAAKqJ,SAAS,CAACq6B,gBAAgB1jC,KAAKuJ,MAAMm6B,kBAHgB,KAM5DA,eAAkB1wB,IAChB,IAAIA,EAAI8oB,KAAK/xB,MAAT,MACF,OAEF,MAAM45B,EAAe,CAACnJ,MAAOxnB,EAAI8oB,KAAK/xB,MAAT,MAAwB65B,GAAI5wB,EAAI8oB,KAAK/xB,MAAT,IACzD/J,KAAKqJ,SAAS,CAACq6B,gBAAe,EAAKC,kBAXuB,KAc5DE,iBAAmB,IACX7jC,KAAKuJ,MAAMo6B,aAGV3jC,KAAKuJ,MAAMo6B,aAAaC,GAAK,IAAM5jC,KAAKuJ,MAAMo6B,aAAanJ,MAFrD,GAhB6C,KAqB5DsJ,UArB4D,uCAqBhD,WAAO9b,GAAP,mBAAAnkB,EAAA,sDACR,EAAKwF,SAAS,CAACq6B,gBAAe,IADtB,EAEW,EAAKn6B,MAAMo6B,aAAvBC,EAFC,EAEDA,GAAGpJ,EAFF,EAEEA,MAEV,EAAKuJ,SAASC,WAAWhc,EAAO4b,EAAGpJ,GAJ3B,2CArBgD,wDCIhDL,IAAkBD,KAA5BD,SAA4BC,KAAlBC,eAEH,MAAM8J,WAAwBV,GAAIxI,IAAgBoI,KAAKK,KAClE5jC,YAAYmK,GAAQ,IAAD,EACfoF,MAAMpF,GADS,YAKnB25B,eAAkB1wB,IACd,MAAM2wB,EAAe,CAACnJ,MAAOxnB,EAAI8oB,KAAK/xB,MAAM0xB,QAAf,KAA+BmI,GAAI,IAChE5jC,KAAKqJ,SAAS,CAACq6B,gBAAe,EAAKC,kBAPpB,KAUnBG,UAVmB,uCAUP,WAAO9b,EAAOkc,EAAGC,GAAjB,iBAAAtgC,EAAA,sDACR,EAAKwF,SAAS,CAACq6B,gBAAe,IADtB,EAEW,EAAKn6B,MAAMo6B,aAFtB,EAEDC,GAAGpJ,EAFF,EAEEA,MACV,EAAKuJ,SAASC,WAAWhc,EAAOkc,EAAG1J,EAAM2J,GAHjC,2CAVO,+DAgBnB50B,OAAS,IACE,2BACH,gBAAC,KAAD,CACIrE,MAAK,uBAAkBlL,KAAK6jC,mBAAvB,MACL14B,QAASnL,KAAKuJ,MAAMm6B,eACpBt4B,SAAUpL,KAAKyjC,iBACfp4B,KAAM,KAAQrL,KAAK8jC,UAAU,OAAO9jC,KAAKokC,WAAWtgC,KAAK6vB,YAAY3zB,KAAKokC,WAAWtgC,KAAKtD,SAC1F+K,WAAW,SACXyF,OAAO,MACH,gBAAC,GAAD,CAAWrF,IAAK3L,KAAK6jC,mBAAoBhP,YAAY,EAAMC,iBAAiB,EAAMtd,IAAKwG,GAAIhe,KAAKokC,WAAWpmB,EAAKrH,OAAQ3W,QAEhI,gBAAC,KAAD,CAAM66B,IAAI,aAAaC,SAAU96B,KAAKuJ,MAAMoS,SACxC,gBAAC,GAAD,CAAerK,OAAQ,IAAKqqB,SAAU37B,KAAKu7B,WAAYwG,aAAa,cAAcvC,aAAcx/B,KAAK0jC,gBAChG1jC,KAAK07B,gBAAgB17B,KAAKuJ,MAAM4xB,SA3B7Cn7B,KAAK+jC,SAAWh6B,EAAM4M,OAAOotB,U,MCL7B9J,GAA4BC,KAA5BD,SAAUE,GAAkBD,KAAlBC,cACH,MAAMkK,WAAuBd,GAAInJ,IAAe+I,KAAKK,KAChE5jC,YAAYmK,GACRoF,MAAMpF,GADS,KAInBu6B,WAActxB,IACVhT,KAAKqJ,SAAS,CACVi2B,uBAAwB,CACpBW,MAAOjtB,EAAIxC,MAAMyvB,MACjBC,MAAOltB,EAAIxC,MAAM0vB,MACjB1F,MAAOxnB,EAAI8oB,KAAK/xB,MAAT,MACP65B,GAAI5wB,EAAI8oB,KAAK/xB,MAAT,OARZ/J,KAAK+jC,SAAWh6B,EAAM4M,OAAOotB,SAYjCtJ,OACI,OAAOv3B,OAAOw3B,QAAQ16B,KAAKuJ,MAAM8wB,KAAKznB,IAAI,EAAEjH,EAAK0C,KACtC,gBAAC,GAAD,CAAUnD,MAAOS,EAAKA,IAAKA,GAC7B0C,EAAMuE,IAAI3C,GACA,gBAAC,GAAD,CAAU7D,KAAM,gBAACuuB,GAAA,EAAD,MAAmBzvB,MAAO+E,EAAMuqB,MAAOvqB,EAAM2zB,GAAIj4B,EAAKA,IAAG,UAAKA,EAAL,YAAYsE,GAAQ2qB,QAAM,OAM1HrrB,SAEI,OACI,2BACK,gBAAC,KAAD,CACGrE,MAAK,aACLC,QAASnL,KAAKuJ,MAAMm6B,eACpBt4B,SAAUpL,KAAKyjC,iBACfp4B,KAAM,KAAKrL,KAAK8jC,UAAU,UAC1Bv4B,WAAW,SACXyF,OAAO,MANV,gBAOYhR,KAAK6jC,mBAPjB,OASD,gBAAC,KAAD,CAAMhJ,IAAI,aAAaC,SAAU96B,KAAKuJ,MAAMoS,SACxC,gBAAC,GAAD,CAAe6jB,aAAcx/B,KAAK0jC,gBAC7B1jC,KAAKy6B,W,SC5CoC92B,IAAYC,aAAZ,uCAAyB,WAAOrD,GAAP,iBAAAsD,EAAA,sEACrEoV,GAAcsrB,mBADuD,UAEpE,OADbhiC,EADiF,QAE/E1C,OAF+E,uBAG7Ew6B,EAAM,GACZ93B,EAAIzC,QAAQkQ,QAAQC,IACXoqB,EAAIpqB,EAAKu0B,WAGVnK,EAAIpqB,EAAKu0B,WAAWrjC,KAAK8O,EAAKmJ,WAF9BihB,EAAIpqB,EAAKu0B,WAAa,CAACv0B,EAAKmJ,aAN+C,kBAW5E,CACHtV,KAAK,aACDu2B,OAAO95B,EAAOuD,QAb6D,gCAkBhF,CACHA,KAAK,eAAKvD,EAAOuD,QAnBkE,2CAAzB,uDAA1C2gC,G,GAATzgC,QAAoC0gC,G,GAARnkC,O,GCDkBoD,IAAYC,aAAZ,uCAAyB,WAAOrD,GAAP,iBAAAsD,EAAA,+DACrDtD,EAAOuD,KAA7B6gC,EAD2E,EAC3EA,UAD2E,EACjEZ,SACRC,WAAW,OAAO,GAAGW,GAFoD,kBAG3E,CACH7gC,KAAM,KAJwE,2CAAzB,uDAAvC8gC,G,GAAR5gC,QAAiC6gC,G,GAAPtkC,O,GCGyBoD,IAAYC,aAAZ,uCAAyB,WAAOrD,GAAP,iBAAAsD,EAAA,6DAC/EyI,EAAM/L,EAAOuD,KAAbwI,GACDsZ,EAAQ,IAAIzjB,cAFoE,SAGhFyjB,EAAMvjB,IAAIC,UAAamC,sBAAsB,CAAC2U,UAAU9M,IAHwB,gCAI/E,CACHxI,KAAM,CACF84B,UAAW/L,GAAMO,gBAN6D,2CAAzB,uDAA3C0T,G,GAAR9gC,QAAmC+gC,G,GAAPxkC,O,GCDgCoD,IAAYC,aAAZ,uCAAyB,WAAOrD,GAAP,mCAAAsD,EAAA,+DAC9DtD,EAAOuD,KAAhCkhC,EADuF,EACvFA,WAAYjB,EAD2E,EAC3EA,SACZkB,EAAgB1kC,EAAOuI,QAAvBm8B,YACMN,EAAoBM,EAA1B79B,KAAiBoC,EAASy7B,EAATz7B,KAHsE,SAK9Du6B,EAASmB,aAAa,OAAQ,GAAIP,GAL4B,gBAKvFliC,EALuF,EAKvFA,IAAK2W,EALkF,EAKlFA,UAEP+rB,EAAU/9B,IACZwe,EAAMpjB,UAAN,yBACOC,EADP,sCAEmB2W,EAFnB,eAEmChS,EAFnC,aAE6C49B,EAF7C,oBAGOnU,GAAMO,aAAc,CAAE5Q,OAAO,KAElCoF,EAAQ,IAAIzjB,cAb6E,KAcvFqH,EAduF,OAetF,SAfsF,QAkBtF,SAlBsF,QAqBtF,UArBsF,gCAgBvF27B,EAAO,QAhBgF,oCAmBvFA,EAAO,WAnBgF,oCAsBvFA,EAAO,SAtBgF,sDA2BxF,CACHrhC,KAAK,eACEvD,EAAOuD,QA7B6E,4CAAzB,uDAAlDshC,G,GAATphC,QAAwCqhC,G,GAAR9kC,OCC/C,MAAM+kC,OACKC,KAAO,OADZD,GAEKE,KAAO,OAFZF,GAGKG,OAAS,SAHdH,GAIKI,UAAY,WAEvB,MAAMC,GAAsB,2BACrB/J,IADqB,IAExB,CAAC0J,GAA0BC,MAAMd,GACjC,CAACa,GAA0BE,MAAMZ,GACjC,CAACU,GAA0BG,QAAQX,GACnC,CAACQ,GAA0BI,WAAWN,KAGpCQ,GAAqB,2BACpB/J,IADoB,IAEvB,CAACyJ,GAA0BC,MAAMb,GACjC,CAACY,GAA0BE,MAAMX,GACjC,CAACS,GAA0BG,QAAQV,GACnC,CAACO,GAA0BI,WAAWL,KAG1C,SAASQ,GAAsBt8B,EAAOhJ,GACtC,OAAOqlC,GAAsBrlC,EAAOiJ,MAAMD,EAAOhJ,EAAOuD,M,2CCtBhDm2B,GAA4BC,KAA5BD,SAAUE,GAAkBD,KAAlBC,cACV1wB,GAAYC,IAAZD,QAEFuE,GAAY,CACdqsB,IAAK,GACL1e,SAAS,EACTgpB,eAAWpjC,EACXukC,SAAS,EACTlJ,eAAWr7B,EAEXwkC,UAAU,EACVd,YAAa,CACT79B,UAAM7F,EACNiI,UAAMjI,IAKRykC,GAAwBp8B,IAAMC,gBAEpC,SAASo8B,GAAel8B,GAAQ,MACpBg6B,EAAqCh6B,EAArCg6B,SAAkBmC,EAAmBn8B,EAA3B8R,OADS,EAEAzN,0BAAgBy3B,GAAuB73B,GAAW23B,IAFlD,mBAEpBp8B,EAFoB,KAEbY,EAFa,KAGnBkwB,EAEJ9wB,EAFI8wB,IAAK1e,EAETpS,EAFSoS,QAASgpB,EAElBp7B,EAFkBo7B,UAAWmB,EAE7Bv8B,EAF6Bu8B,QAASlJ,EAEtCrzB,EAFsCqzB,UACtCmJ,EACAx8B,EADAw8B,SAAUd,EACV17B,EADU07B,YAER7F,EAAiBr0B,mBANI,EAQN81B,IAAKC,UAAnBqF,EARoB,sBAuF+BhH,GAAe,CAAEC,iBAAgBj1B,YAAWk1B,SA7ErF,EAAGC,yBAAwBC,4BAA2Bp1B,gBAAiB,MAC5EmC,EAAOgzB,EAAPhzB,GAER,OAAO,kBAAC,IAAD,KACH,kBAAC,IAAKL,KAAN,CAAWG,KAAM,kBAACg6B,GAAA,EAAD,MAAwB16B,QAAS,KAC9CvB,EAAU,CACNX,KAAM87B,GAA0BE,KAChC1hC,KAAM,CACF6gC,UAAWr4B,EACXy3B,cAGR55B,EAAU,CACNX,KAAM,WACN1F,KAAM,CACFgiC,SAAS,KAGjBvG,OAA0Bh+B,IAC3BoK,IAAK,GAfR,cAiBA,kBAAC,GAAD,CAASS,KAAM,kBAACi6B,GAAA,EAAD,MAAuBn7B,MAAM,UACxC,kBAAC,IAAKe,KAAN,CAAWG,KAAM,kBAACk6B,GAAA,EAAD,MAAyB56B,QAAS,KAC/CvB,EAAU,CACNX,KAAM,WACN1F,KAAM,CACFmhC,YAAa,CACT79B,KAAMkF,EACN9C,KAAM,QAEVu8B,UAAU,EACVhC,cAIRxE,OAA0Bh+B,IAC3BoK,IAAK,KAdR,WAeA,kBAAC,IAAKM,KAAN,CAAWG,KAAM,kBAACk6B,GAAA,EAAD,MAAyB56B,QAAS,KAC/CvB,EAAU,CACNX,KAAM,WACN1F,KAAM,CACFmhC,YAAa,CACT79B,KAAMkF,EACN9C,KAAM,SAEVu8B,UAAU,KAIlBxG,OAA0Bh+B,IAC3BoK,IAAK,KAbR,YAcA,kBAAC,IAAKM,KAAN,CAAWG,KAAM,kBAACk6B,GAAA,EAAD,MAAyB56B,QAAS,KAC/CvB,EAAU,CACNX,KAAM,WACN1F,KAAM,CACFmhC,YAAa,CACT79B,KAAMkF,EACN9C,KAAM,QAEVu8B,UAAU,KAGlBxG,OAA0Bh+B,IAC3BoK,IAAK,KAZR,kBAeJ,kBAAC,IAAKM,KAAN,CAAWP,QAAS,KAChBvB,EAAU,CACNX,KAAM87B,GAA0BG,OAChC3hC,KAAM,CACFwI,QAGRizB,OAA0Bh+B,IAC3BoK,IAAK,EAAGS,KAAM,kBAACs1B,GAAA,EAAD,OARjB,cAWcC,EAvFK,EAuFnBnC,aAAkCoC,EAvFf,EAuFWxB,GActC,OAZAp1B,oBAAU,KACNb,EAAU,CACNX,KAAM,WACN1F,KAAM,CAAE6X,SAAS,KAErBxR,EAAU,CACNX,KAAM87B,GAA0BC,KAChCzhC,KAAM,CACF6X,SAAS,MAGlB,CAACihB,EAAWsJ,IAEX,kBAACF,GAAsB/6B,SAAvB,CAAgCoD,MAAO,CAAElE,cACrC,kBAAC,KAAD,CACIe,MAAK,oBAAe+5B,EAAYz7B,MAChC2B,QAAS46B,EACT36B,SAAU,KACNjB,EAAU,CACNX,KAAM,WACN1F,KAAM,CACFiiC,UAAU,MAItB16B,KAAM,KAAO,MACD25B,EAAemB,EAAWI,iBAA1BvB,WACRmB,EAAWK,cACXr8B,EAAU,CACNX,KAAM87B,GAA0BI,UAChC5hC,KAAM,CAAEiiC,UAAU,EAAOf,aAAYjB,eAG7Cx4B,WAAW,SACXyF,OAAO,MACP,kBAAC,IAAD,CAAMqrB,KAAM8J,GACR,kBAAC,IAAKl6B,KAAN,CAAWyC,MAAO,CACd,CACIC,UAAU,EACVb,QAAS,wBAGbW,MAAM,SACNrH,KAAK,cACL,kBAAC,IAAD,SAIZ,kBAAC,KAAD,CACI8D,MAAK,aACLC,QAAS26B,EACT16B,SAAU,KACNjB,EAAU,CACNX,KAAM,WACN1F,KAAM,CACFgiC,SAAS,MAIrBz6B,KAAM,KACFlB,EAAU,CACNX,KAAM,WACN1F,KAAM,CAAE6gC,gBAGhBp5B,WAAW,SACXyF,OAAO,MAlBX,eAmBa2zB,EAnBb,MAqBA,kBAAC,KAAD,CAAM9J,IAAI,aAAaC,SAAUnf,GAC5BimB,IACD,kBAAC,GAAD,CAAetwB,OAAQ,IAAKR,cAAe,CAACkC,EAAK8oB,KAC7C3xB,EAAU,CACNX,KAAM87B,GAA0BE,KAChC1hC,KAAM,CACF6gC,UAAW7I,EAAKxvB,GAChBy3B,cAGR55B,EAAU,CACNX,KAAM,WACN1F,KAAM,CACFgiC,SAAS,MAGlBtG,aAAcmC,GAETz+B,OAAOw3B,QAAQL,GAAKoM,QAAQ,EAAE96B,EAAK0C,KACxBA,EAAMuE,IAAI3C,GACN,kBAAC,GAAD,CAAU7D,KAAM,kBAACuuB,GAAA,EAAD,MAAmBruB,GAAI2D,EAAMuqB,MAAOvqB,EAAM2zB,GAAIj4B,EAAKT,MAAO+E,EAAMtE,IAAKsE,EAAM2qB,QAAM,S,SCtMtEj3B,IAAYC,aAAZ,uCAAyB,WAAOrD,GAAP,2BAAAsD,EAAA,2DACjEtD,EAAOuD,KAAtB4iC,EADgF,EAChFA,OADgF,EACzE5K,KACRlW,EAAQ,IAAIzjB,cACdukC,EAHmF,gCAInE9gB,EAAMpjB,UAAN,kCAAkDquB,GAAMO,aAAaP,GAAMkB,mBAJR,UAMhE,OAFfxvB,EAJ+E,QAM3E1C,OAN2E,uBAOzEw6B,EAAO93B,EAAIzC,QAAQgE,KAAK8O,IAAI3C,IAC9BA,EAAI,IAAUA,EAAK02B,cAAgB12B,EAAK22B,UACxC32B,EAAI,MAAYA,EAAKtE,IACrBsE,EAAI,QAAa,EACjBA,EAAI,SAAe,GACZA,IAZoE,kBAcxE,CACHnM,KAAK,aACDu2B,OAAO95B,EAAOuD,QAhByD,WAsBpF4iC,EAtBoF,kCAuB7E9gB,EAAMpjB,UAAN,6BAAsCkkC,EAAtC,MAAiD7V,GAAMO,aAAaP,GAAMkB,mBAvBG,yBAwBnEnM,EAAMpjB,UAAN,+BAA+CquB,GAAMO,aAAaP,GAAMkB,mBAxBL,WA0BhE,OAFfxvB,EAxB+E,QA0B3E1C,OA1B2E,wBA2BzEgnC,EAAUtkC,EAAIzC,QAAQgE,KAAK2W,OAAOxK,IACzBA,EAAKsqB,UAAYtqB,EAAK22B,aACnBF,GACf9zB,IAAI3C,IACHA,EAAI,IAAJ,UAAiBy2B,EAAjB,YAA2Bz2B,EAAKmJ,WAChCnJ,EAAI,MAAYA,EAAKmJ,UACrBnJ,EAAI,QAAa,EACjBA,EAAI,KAAS,gBAAC0qB,GAAA,EAAD,MACN1qB,IAEJoqB,EAAO95B,EAAOuI,QAAduxB,IACDyM,EAASzM,EAAIznB,IAAIgxB,IAChBA,EAAGj4B,MAAM+6B,IACR9C,EAAG/R,SAAWgV,GAEXjD,IA1CoE,kBA4CxE,CACH9/B,KAAK,2BAAKvD,EAAOuD,MAAb,IAAkBu2B,IAAIyM,MA7CiD,iCAmDhF,CACHhjC,KAAK,eAAKvD,EAAOuD,QApDkE,4CAAzB,uDAA1C2gC,G,GAATzgC,QAAoC0gC,G,GAARnkC,O,GCHuBoD,IAAYC,aAAZ,uCAAyB,WAAOrD,GAAP,2CAAAsD,EAAA,+DACvBtD,EAAOuD,KAA/D6gC,EAD+E,EAC/EA,UAAWZ,EADoE,EACpEA,SAAUgD,EAD0D,EAC1DA,gBAAgBC,EAD0C,EAC1CA,gBAD0C,EAEnErC,EAAUnqB,MAAM,KAFmD,mBAEhFopB,EAFgF,KAE5EpJ,EAF4E,KAI/EyM,EAAsCF,EAAtCE,YAAaC,EAAyBH,EAAzBG,WAAYC,EAAaJ,EAAbI,SAC3BC,EAAsBJ,GAAmBnW,GAAMuB,SAAS4U,GAC1DA,GAAmBC,GACbI,EAAQD,EAAqB,QAAUH,EAAYr0B,IAAI3C,GAAM,IAAF,OAAM4gB,GAAMQ,YAAYphB,GAAxB,MAAkC3O,KAAK,KAAO,IAC/GyiC,EAASC,WAAW,OAAQJ,EAAIpJ,EAAM,CAAC8M,UAAWD,KAE7CL,GAAmBE,GAAcC,GAChCI,EAD0C,UACjCH,EADiC,eACPvW,GAAMS,MAAM4V,GADL,gBACwBrW,GAAMS,MAAM6V,GADpC,eACoDC,EADpD,MAEhDrD,EAASC,WAAW,OAAQJ,EAAIpJ,EAAM,CAAC8M,UAAWC,KAElDxD,EAASC,WAAW,OAAQJ,EAAIpJ,GAdmD,kBAgBhF,CACH12B,KAAM,KAjB6E,2CAAzB,uDAA1C8gC,G,GAAT5gC,QAAoC6gC,G,GAARtkC,OCCrCinC,GAAO,CAAC1jC,EAAM2jC,IAChB3jC,EAAK8O,IAAI3C,IACL,MAAME,EAAQF,EAAK/E,MAAMkoB,QAAQqU,GAC3BC,EAAYz3B,EAAK/E,MAAMy8B,OAAO,EAAGx3B,GACjCy3B,EAAW33B,EAAK/E,MAAMy8B,OAAOx3B,EAAQs3B,EAAYpmC,QACjD6J,EACFiF,GAAS,EACL,8BACKu3B,EACD,0BAAMp5B,UAAU,0BAA0Bm5B,GACzCG,GAGD,8BAAO33B,EAAK/E,OAGxB,OAAI+E,EAAK4hB,SACE,2BAAK5hB,GAAZ,IAAkB/E,QAAO2mB,SAAU2V,GAAKv3B,EAAK4hB,SAAU4V,KAGpD,2BAAKx3B,GAAZ,IAAkB/E,Y,GAG4CvH,IAAYC,aAAZ,uCAAyB,WAAOrD,GAAP,uBAAAsD,EAAA,yDACnFw2B,EAAQ95B,EAAOuI,QAAfuxB,IACAoN,EAAgBlnC,EAAOuD,KAAvB2jC,YAFmF,yCAIhF,CACH3jC,KAAM,CACFi5B,aAAc,GAAI8K,WAAYxN,KANiD,cAWvFyN,EAAW,GACX/K,EAAe1C,EACdoM,QAAQx2B,IAAS,IAAD,EACb,MAAMiQ,GAAM,UAAAjQ,EAAK4hB,gBAAL,eAAejf,IAAIm1B,GACvBA,EAAI78B,MAAMkoB,QAAQqU,IAAgB,EAC3Bx3B,EAAKtE,IAET,MACR8O,OAAOxK,GAAQA,KAAS,GAK3B,OAHGA,EAAK/E,MAAMkoB,QAAQqU,IAAgB,GAClCK,EAAS3mC,KAAK8O,EAAKtE,KAEhBuU,IAGf6c,EAAelM,GAAMwB,SAAS0K,GACxB8K,EAAaL,GAAKnN,EAAKoN,GAAahtB,OAAOxK,GACtC8sB,EAAapiB,SAAS1K,EAAKtE,MAAQm8B,EAASntB,SAAS1K,EAAKtE,MA7BsB,kBA+BpF,CACH7H,KAAM,CACFi5B,eAAc8K,gBAjCqE,2CAAzB,uDAA9CG,G,GAAThkC,QAAsCikC,G,GAAR1nC,OCvB7C,MAAM2nC,OACK3C,KAAO,OADZ2C,GAEK1C,KAAO,OAFZ0C,GAGKC,OAAS,SAEpB,MAAMC,GAAkB,2BACjBxM,IADiB,IAEpB,CAACsM,GAAsB3C,MAAMd,GAC7B,CAACyD,GAAsB1C,MAAOZ,GAC9B,CAACsD,GAAsBC,QAASH,KAE9BK,GAAiB,2BAChBxM,IADgB,IAEnB,CAACqM,GAAsB3C,MAAMb,GAC7B,CAACwD,GAAsB1C,MAAOX,GAC9B,CAACqD,GAAsBC,QAASF,KAGpC,SAASK,GAAkB/+B,EAAOhJ,GAClC,OAAO8nC,GAAkB9nC,EAAOiJ,MAAMD,EAAOhJ,EAAOuD,MCdhBo2B,KAA5BD,S,MAAUE,GAAkBD,KAAlBC,cAEZnsB,GAAY,CACdqsB,IAAK,GACL1e,SAAS,EACTgpB,eAAWpjC,EACXukC,SAAS,EACTlJ,eAAWr7B,EACXw7B,aAAc,IAGZwL,GAAoB3+B,IAAMC,gBAEhC,SAAS2+B,GAAWz+B,GAChB,MAAMg6B,EAAW0E,GAAiB1E,SAClBmC,EAAmBn8B,EAA3B8R,OAFe,EAGIzN,0BAAgBk6B,GAAmBt6B,GAAWo6B,IAHlD,mBAGhB7+B,EAHgB,KAGTY,EAHS,KAIfkwB,EAEJ9wB,EAFI8wB,IAAK1e,EAETpS,EAFSoS,QAASgpB,EAElBp7B,EAFkBo7B,UAAWmB,EAE7Bv8B,EAF6Bu8B,QAASlJ,EAEtCrzB,EAFsCqzB,UACtCiL,EACAt+B,EADAs+B,WAAY9K,EACZxzB,EADYwzB,aALO,EChB3B,WAA+B,MAAD,EAEQzyB,mBAAS,IAFjB,mBAEnBq6B,EAFmB,KAER+D,EAFQ,OAGIp+B,oBAAS,GAHb,mBAGnBqR,EAHmB,KAGV8J,EAHU,OAIFnb,mBAAS,IAJP,mBAInBxG,EAJmB,KAIbof,EAJa,OAKA5Y,wBAAS/I,GALT,mBAKnBU,EALmB,KAKZ0mC,EALY,OAMoBr+B,wBAAS/I,GAN7B,mBAMnBylC,EANmB,KAMF4B,EANE,OAOYt+B,oBAAS,GAPrB,mBAOnBu+B,EAPmB,KAONC,EAPM,OAQXjI,IAAKC,UAAbzE,EARmB,oBASpBzW,EAAQ,IAAIzjB,cAElB6I,oBAAU,MACK,uCAAG,sCAAAnH,EAAA,yDACL8gC,EADK,0DAEUA,EAAUnqB,MAAM,KAF1B,mBAEHopB,EAFG,KAECpJ,EAFD,KAGV/U,GAAW,GAHD,SAKQG,EAAMpjB,UAAN,yCAAkDohC,EAAlD,YAAwDpJ,EAAxD,MAChB3J,GAAMO,aAAaP,GAAMkB,mBANjB,OAQS,OAHbxvB,EALI,QAQF1C,QACEiE,EAAOvB,EAAIzC,QAAQgE,KAAK8O,IAAI3C,IAAQ,QAEdA,EAAK84B,UAAUvuB,MAAM,KAAK,GAAGA,MAAM,KAFrB,mBAE/BpC,EAF+B,KAEvB/J,EAFuB,KAMtC,OAHK24B,GACD4B,EAAmBxwB,GAEhB,CAAEA,SAAQ/J,WAErB6U,EAAQpf,GACRglC,GAAe,GACK,IAAhBhlC,EAAKzC,QACLynC,GAAe,KASnB5lB,EAAQ,IACR4lB,GAAe,IAEnBrjB,GAAW,GAhCD,2CAAH,qDAkCX3jB,IACD,CAAC6iC,IAEJ,MAAMR,EAAUrgC,EAAKklC,UAAUp2B,IAAI3C,GACxB,kBAAC,KAAO6V,OAAR,CAAezX,MAAO4B,EAAK5B,OAAQ4B,EAAK5B,QAiCnD,MAAO,CAAE+xB,GA/BE,IACA,oCACH,kBAAC,KAAD,CAAMtF,SAAUnf,GACX1Z,GAAS,kBAAC,IAAD,CAAOiK,MAAO,CAAEmQ,aAAc,QAAU7S,KAAK,QAAQsE,QAAS7L,IAEpE4mC,GAAe,kBAAC,IAAD,CAAkBv8B,GAAG,sBAGnCu8B,GAAe,kBAAC,IAAD,CAAMxM,KAAMA,GACxB,kBAAC,IAAKpwB,KAAN,CAAW7E,KAAK,aAAaqH,MAAO,kBAAC,IAAD,CAAkBnC,GAAG,iBACrD,kBAAC,KAAD,CAAQioB,YAAU,GACb4P,IAGT,kBAAC,IAAKl4B,KAAN,CAAW7E,KAAK,WAAWqH,MAAO,kBAAC,IAAD,CAAkBnC,GAAG,eACnD,kBAAC,KAAD,CAAQioB,YAAU,GACb4P,IAIT,kBAAC,KAAD,MACA,kBAAC,IAAKl4B,KAAN,CAAW7E,KAAK,cAAcqH,MAAO,kBAAC,IAAD,CAAkBnC,GAAG,kBACtD,kBAAC,KAAD,CAAQN,KAAK,QACRm4B,OAQhB9H,OAAMqM,eAAcC,WAAU3B,kBAAiB6B,eDtDxDI,GALQC,EARW,EAQf9I,GACE+I,EATa,EASnB9M,KACc+M,EAVK,EAUnBV,aACUW,EAXS,EAWnBV,SACA3B,EAZmB,EAYnBA,gBAAgB6B,EAZG,EAYHA,YAEdzJ,EAAiBr0B,mBAdA,EAgCmCo0B,GAAe,CAAEC,iBAAgBj1B,YAAWk1B,SAhBrF,EAAGC,yBAAwBC,4BAA2Bp1B,gBAAiB,MAC5EmC,EAAOgzB,EAAPhzB,GAER,OADAoG,QAAQC,IAAIrG,GACL,kBAAC,IAAD,KACH,kBAAC,IAAKL,KAAN,CAAWG,KAAM,kBAACg6B,GAAA,EAAD,MAAwB16B,QAAS,KAC9CvB,EAAU,CACNX,KAAM,WACN1F,KAAM,CACFgiC,SAAS,EACTnB,UAAWr4B,KAGnBizB,OAA0Bh+B,IAC3BoK,IAAK,GATR,kBAYcg2B,EAhCC,EAgCfnC,aAAkCoC,EAhCnB,EAgCexB,GAmBtC,OAjBAp1B,oBAAU,KACNb,EAAU,CACNX,KAAM,WACN1F,KAAM,CAAE6X,SAAS,KAErBxR,EAAU,CACNX,KAAM0+B,GAAsB3C,KAC5BzhC,KAAM,CACF6X,SAAS,MAGlB,CAACihB,EAAWsJ,IAEfl7B,oBAAU,KACNo+B,EAAyBzE,IAC1B,CAACyE,EAA0BzE,IAG1B,kBAAC4D,GAAkBt9B,SAAnB,CAA4BoD,MAAO,CAAElE,cACjC,kBAAC,KAAD,CACIe,MAAO,kBAAC,IAAD,CAAkBoB,GAAG,mBAC5BnB,QAAS26B,EACT16B,SAAU,KACNjB,EAAU,CACNX,KAAM,WACN1F,KAAM,CACFgiC,SAAS,KAGjBqD,EAAc3C,eAElBn7B,KAAM,KACF,MAAM07B,EAAkBoC,EAAc5C,iBACjCsC,GAAgB9B,EAAgBE,aAAiBF,EAAgBG,YAAcH,EAAgBI,UAIpGh9B,EAAU,CACNX,KAAM0+B,GAAsB1C,KAC5B1hC,KAAM,CACF6gC,YACAZ,WACAgD,kBACAC,qBAGR78B,EAAU,CACNX,KAAM,WACN1F,KAAM,CACFgiC,SAAS,KAGjBqD,EAAc3C,eAlBV6C,EAAkB,4BAoB1B99B,WAAW,SACXyF,OAAO,MACP,kBAACk4B,EAAD,OAEJ,kBAAC,KAAD,CAAMrO,IAAI,aAAaC,SAAUnf,GAC5BimB,IACD,kBAAC,IAAD,CAAO11B,MAAO,CAAEmQ,aAAc,GAAKyX,YAAY,SAASpW,SACnDrV,IACG8B,EAAU,CACNX,KAAM0+B,GAAsBC,OAC5BrkC,KAAM,CAAE2jC,YAAap/B,EAAE2S,OAAO3M,YAI1C,kBAAC,GAAD,CAAeiD,OAAQ,IACnByrB,aAAcA,EACdsE,SAAUwG,GAAcxN,EACxBsB,SAAQ,uCACJ,WAAOG,GAAP,SAAAj4B,EAAA,sDACIsG,EAAU,CACNX,KAAM,WACN1F,KAAM,CAAE6X,SAAS,KAErBxR,EAAU,CACNX,KAAM0+B,GAAsB3C,KAC5BzhC,KAAM,CAAE4iC,OAAQ5K,EAAKnwB,IAAKmwB,OAAMngB,SAAS,KAPjD,2CADI,sDAWNomB,aAAa,QAAQF,SAAW9E,IAC9B5yB,EAAU,CACNX,KAAM,WACN1F,KAAM,CAAEi5B,mBAEbjsB,cAAe,CAACkC,EAAK8oB,KACfA,EAAKlB,QAGVzwB,EAAU,CACNX,KAAM,WACN1F,KAAM,CACFgiC,SAAS,EACTnB,UAAW7I,EAAKnwB,QAGzB6zB,aAAc,EAAGhvB,QAAOsrB,WACnBA,EAAKlB,QACL+G,EAAe,CAAEnxB,QAAOsrB,c,SEvJ6Bn4B,IAAYC,aAAZ,uCAAyB,WAAOrD,GAAP,+CAAAsD,EAAA,+DACvCtD,EAAOuD,KAA/DijC,EAD+F,EAC/FA,gBAAgBpC,EAD+E,EAC/EA,UAAU2E,EADqE,EACrEA,kBAAkBvF,EADmD,EACnDA,SADmD,EAEnFY,EAAUnqB,MAAM,KAFmE,mBAE/FopB,EAF+F,KAE5FpJ,EAF4F,KAG/FwM,EAAyCD,EAAzCC,gBAAgBuC,EAAyBxC,EAAzBwC,WAAWC,EAAczC,EAAdyC,WAC5B5jB,EAAQ,IAAIzjB,cAJoF,SAM7EyjB,EAAMvjB,IAAIC,UAAa8D,iBAAiB,CAACgB,KAAKw8B,IAN+B,cAMhG6F,EANgG,OAOhGC,EAAY7Y,GAAMK,mBACpByY,EAAa,GACd3C,IACC2C,EAAU,iCAA6B3C,EAA7B,uCACQuC,EADR,uCAEQC,EAFR,yCAGWF,EAHX,gBAOR7mC,EAjBgG,kBAkBlGgnC,EAAW3pC,QAAQ8pC,QAlB+E,8BAmBtFjF,EAnBsF,aAmBvEgF,EAnBuE,eAmBtDD,EAnBsD,eAqBtG3F,EAASC,WAAW,OAAQJ,EAAIpJ,EAAM,CAACqP,QAASpnC,EAAIqnC,cAAcJ,IArBoC,kBAuB/F,CACH5lC,KAAK,eACEvD,EAAOuD,QAzBoF,4CAAzB,uDAA3DimC,G,GAAR/lC,QAA2CgmC,G,GAAPzpC,OCHlD,MAAM0pC,OACKzE,KAAO,OAElB,MAAM0E,GAAiB,2BAChBtO,IADgB,IAEnB,CAACqO,GAAqBzE,MAAMuE,KAE1BI,GAAgB,2BACftO,IADe,IAElB,CAACoO,GAAqBzE,MAAMwE,KAGhC,SAASI,GAAiB7gC,EAAOhJ,GACjC,OAAO4pC,GAAiB5pC,EAAOiJ,MAAMD,EAAOhJ,EAAOuD,M,0BCVnD,SAASumC,GAAetgC,GAAQ,MAAD,EACFO,mBAASP,EAAMugC,cAAgB,IAD7B,mBACpBj8B,EADoB,KACd2J,EADc,KAuB3B,MAAO,CAACooB,GArBI,IACR,kBAAC,KAAD,KACA,kBAAC,KAAD,CAAK33B,KAAM,IACT,kBAAC,KAAD,CACE8hC,IAAKxgC,EAAMwgC,KAAK,GAChBrc,IAAKnkB,EAAMmkB,KAAK,IAChBxQ,SAAWrP,IAAS2J,EAAS3J,IAC7BA,MAAOA,KAGX,kBAAC,KAAD,CAAK5F,KAAM,GACT,kBAAC,KAAD,CACE8hC,IAAKxgC,EAAMwgC,KAAK,GAChBrc,IAAKnkB,EAAMmkB,KAAK,IAChBhiB,MAAO,CAAE+I,OAAQ,UACjB5G,MAAOA,EACPqP,SAAWrP,IAAS2J,EAAS3J,QAK1BA,SCpBf,SAASm8B,KAAqB,MAAD,EAESlgC,mBAAS,IAFlB,mBAElBq6B,EAFkB,KAEP+D,EAFO,OAGKp+B,oBAAS,GAHd,mBAGlBqR,EAHkB,aAIDrR,mBAAS,KAJR,mBAIlBxG,EAJkB,KAIZof,EAJY,OAKC5Y,mBAAS,IALV,mBAKlBrI,EALkB,KAKX0mC,EALW,OAMGr+B,mBAAS,IANZ,mBAMlB8N,EANkB,KAMVqyB,EANU,OAOV5J,IAAKC,UAAbzE,EAPkB,oBAQnBzW,EAAQ,IAAIzjB,cARO,EAUgCkoC,GAAe,CACpEC,aAAc,GACdC,IAAK,EACLrc,IAAK,MAHGwc,EAVa,EAUjBtK,GAA2BkJ,EAVV,EAUGj7B,MAM5BrD,oBAAU,KACN,GAAI25B,EAAW,CAAC,MAAD,EACSA,EAAUnqB,MAAM,KADzB,mBACJopB,EADI,KAEL8F,GAFK,KAEO7Y,GAAMK,qBACb,uCAAG,4BAAArtB,EAAA,sEACQ+hB,EAAMpjB,UAAN,uDACJmiC,EADI,gBACc+E,EADd,oCAEVA,EAFU,sBAGhB7Y,GAAMO,aAHU,2BAGQP,GAAMkB,mBAHd,IAGgC4Y,YAAY/G,KAJpD,OAKK,OAJTrhC,EADI,QAKJ1C,OACJqjB,EAAQ3gB,EAAIzC,QAAQgE,MAEnBof,EAAQ,IARD,2CAAH,qDAWXphB,KAEL,CAAC6iC,IAEL35B,oBAAU,KACN,GAAGoN,EAAO,EACG,uCAAG,oCAAAvU,EAAA,+DACU8gC,EAAUnqB,MAAM,KAD1B,mBACHopB,EADG,KACCpJ,EADD,cAGQ5U,EAAMvjB,IAAIC,UAAa+D,qBAAqB,CAC3DqgC,OAAO9C,EAAGxqB,UAAUohB,EAAOoQ,WAAWxyB,IAJ/B,OAMQ,OAHZ7V,EAHI,QAMH1C,QACHw8B,EAAKwO,eAAe,CACjBtB,WAAYhnC,EAAIzC,QAAQyqC,IACxBf,WAAYjnC,EAAIzC,QAAQouB,MATrB,2CAAH,qDAaXpsB,KAEJ,CAACsW,EAAOusB,IAGT,MAAMR,EAAUrgC,EAAK2W,OAAOxK,GAAyB,WAAnBA,EAAK66B,WAAwBl4B,IAAI3C,GACxD,kBAAC,KAAO6V,OAAR,CAAezX,MAAO4B,EAAK86B,UAAW96B,EAAK86B,WAgCtD,MAAO,CAAE3K,GA9BE,IACe,IAAnB+D,EAAQ9iC,OACA,oCAAE,kBAAC,IAAD,CAAkBiL,GAAG,uBAE3B,oCACH,kBAAC,KAAD,CAAMwuB,SAAUnf,GACX1Z,GAAS,kBAAC,IAAD,CAAOiK,MAAO,CAAEmQ,aAAc,QAAU7S,KAAK,QAAQsE,QAAS7L,IACxE,kBAAC,IAAD,CAAMo6B,KAAMA,GACR,kBAAC,IAAKpwB,KAAN,CAAW7E,KAAK,kBAAkBqH,MAAO,kBAAC,IAAD,CAAkBnC,GAAG,qBAC1D,kBAAC,KAAD,CAAQoR,SAAarP,IACjBo8B,EAAUp8B,KAET81B,IAGT,kBAAC,IAAKl4B,KAAN,CAAW7E,KAAK,aAAaqH,MAAO,kBAAC,IAAD,CAAkBnC,GAAG,gBACrD,kBAAC,IAAD,OAGJ,kBAAC,KAAD,MACA,kBAAC,IAAKL,KAAN,CAAW7E,KAAK,aAAaqH,MAAO,kBAAC,IAAD,CAAkBnC,GAAG,gBACrD,kBAAC,IAAD,OAEJ,kBAAC,IAAKL,KAAN,CAAW7E,KAAK,gBAAgBqH,MAAO,kBAAC,IAAD,CAAkBnC,GAAG,mBACvDo+B,QAMRrO,OAAMqM,eAAcC,WAASW,qB,MCpFvCnP,GAAiBD,KAAjBC,cACDnsB,GAAY,CACdqsB,IAAK,GACL1e,SAAQ,EACRmqB,SAAQ,EACRnB,eAAWpjC,EACXU,WAAOV,GAGLypC,GAAmBphC,IAAMC,gBAE/B,SAASohC,KACL,MAAMlH,EAAW0E,GAAiB1E,SADjB,EAEU31B,0BAAgBg8B,GAAkBp8B,GAAWk8B,IAFvD,mBAEV3gC,EAFU,KAEHY,EAFG,KAGVkwB,EAAuC9wB,EAAvC8wB,IAAI1e,EAAmCpS,EAAnCoS,QAAQmqB,EAA2Bv8B,EAA3Bu8B,QAAQnB,EAAmBp7B,EAAnBo7B,UAHV,GAG6Bp7B,EAATtH,MAEiEuoC,MAA5FU,EALO,EAKV9K,GAAoB+I,EALV,EAKK9M,KAAmBqM,EALxB,EAKwBA,aAAsBW,EAL9C,EAKqCV,SAA2BW,EALhE,EAKgEA,kBAE3ElK,EAAiBr0B,mBAPN,EAwByCo0B,GAAe,CAAEC,iBAAgBj1B,YAAWk1B,SAfrF,EAAGC,yBAAwBC,4BAA2Bp1B,gBAAiB,MAC5EmC,EAAOgzB,EAAPhzB,GACR,OAAO,kBAAC,IAAD,KACH,kBAAC,IAAKL,KAAN,CAAWG,KAAM,kBAACg6B,GAAA,EAAD,MAAwB16B,QAAS,KAC9CvB,EAAU,CACNX,KAAM,WACN1F,KAAM,CACFgiC,SAAS,EACTnB,UAAWr4B,KAGnBizB,OAA0Bh+B,IAC3BoK,IAAK,GATR,kBAYcg2B,EAxBL,EAwBTnC,aAAkCoC,EAxBzB,EAwBqBxB,GA6CtC,OA3CAp1B,oBAAU,MACK,uCAAG,gCAAAnH,EAAA,6DACVsG,EAAU,CACNX,KAAM,WACN1F,KAAM,CAAE6X,SAAS,KAEfiK,EAAQ,IAAIzjB,cALR,SAMQyjB,EAAMvjB,IAAIC,UAAa6D,aAAc,IAN7C,OAOS,OADb5D,EANI,QAOF1C,SACEwhC,EAAW9+B,EAAIzC,QAAQgE,KAAK8O,IAAI3C,IAClCA,EAAKtE,IAAMsE,EAAK7I,KAChB6I,EAAK/E,MAAQ+E,EAAK7I,KAClB6I,EAAK2qB,QAAS,EACd3qB,EAAK4hB,SAAW5hB,EAAK42B,OAAOj0B,IAAI4nB,IACrB,CACHluB,GAAG,GAAD,OAAK2D,EAAK7I,KAAV,YAAkBozB,EAAMpzB,MAC1BuE,IAAI,GAAD,OAAKsE,EAAK7I,KAAV,YAAkBozB,EAAMpzB,MAC3B8D,MAAOsvB,EAAMpzB,MAASozB,EAAM2J,QAAQgH,QAAW,6BAAH,IAC5CvQ,QAAQ,EACRxuB,KAAM,kBAACuuB,GAAA,EAAD,SAGP1qB,IAEX9F,EAAU,CACNX,KAAM,WACN1F,KAAM,CAAEu2B,IAAKgH,MAIrBl3B,EAAU,CACNX,KAAM,WACN1F,KAAM,CAAE6X,SAAQ,KA/BV,2CAAH,qDAkCX7Z,IACD,IAEHkJ,oBAAU,KACN09B,EAAa/D,IACf,CAACA,EAAU+D,IAIT,yBAAKp6B,UAAU,gBACf,kBAAC08B,GAAiB//B,SAAlB,CAA2BoD,MAAO,CAAElE,cACpC,kBAAC,KAAD,CACQe,MAAO,kBAAC,IAAD,CAAkBoB,GAAG,mBAC5BnB,QAAS26B,EACT16B,SAAU,KACNjB,EAAU,CACNX,KAAM,WACN1F,KAAM,CACFgiC,SAAS,KAGjBqD,EAAc3C,eAElBn7B,KAAM,KACF,MAAM07B,EAAkBoC,EAAc5C,iBAC/BS,EAAyCD,EAAzCC,gBAAgBuC,EAAyBxC,EAAzBwC,WAAWC,EAAczC,EAAdyC,YAC/BxC,GACKuC,IAAeC,IAAcF,IAMrCn/B,EAAU,CACNX,KAAMygC,GAAqBzE,KAC3B1hC,KAAM,CACF6gC,YACAZ,WACAgD,kBACAuC,uBAGRn/B,EAAU,CACNX,KAAM,WACN1F,KAAM,CACFgiC,SAAS,KAGjBqD,EAAc3C,eApBN6C,EAAkB,iEAsB9B99B,WAAW,SACXyF,OAAO,MACP,kBAACk6B,EAAD,OAEL,kBAAC,KAAD,CAAMrQ,IAAI,aAAaC,SAAUnf,GAC3BimB,IACD,kBAAC,GAAD,CAAetwB,OAAQ,IACnB+vB,SAAUhH,EACV0H,aAAa,QACbjxB,cAAe,CAACkC,EAAK8oB,KACZA,EAAKlB,QAGVzwB,EAAU,CACNX,KAAM,WACN1F,KAAM,CACFgiC,SAAS,EACTnB,UAAW7I,EAAKnwB,QAGzB6zB,aAAc,EAAGhvB,QAAOsrB,WACnBA,EAAKlB,QACL+G,EAAe,CAAEnxB,QAAOsrB,e,MChJ5C7e,GAAYC,KAAZD,QACO,MAAMmuB,WAAiBxhC,YAClChK,YAAYmK,GACRoF,MAAMpF,GACN/J,KAAK+jC,SAAWh6B,EAAM4M,OACtB3W,KAAKuJ,MAAQ,CACT8hC,mBAAe9pC,GAIvBgO,SACI,OAAO,gBAAC,KAAD,CAAMqO,iBAAiB,IAAIC,WAAalS,IAC/B,MAARA,GACI3L,KAAKmiC,kBACLniC,KAAKmiC,iBAAiBtmB,SAGlB,MAARlQ,GACI3L,KAAKoiC,mBACLpiC,KAAKoiC,kBAAkBvmB,WAI/B,gBAAC,GAAD,CAASkC,IAAK,gBAAC,IAAD,CAAkBzR,GAAG,mBAAqBX,IAAI,KACxD,uBAAK2C,UAAU,gBACX,gBAAC23B,GAAD,CAAgBpqB,OAAQ7b,KAAKuJ,MAAM8hC,cAAetH,SAAU/jC,KAAK+jC,aAIzE,gBAAC,GAAD,CAAShmB,IAAK,gBAAC,IAAD,CAAkBzR,GAAG,SAAWX,IAAI,KAC9C,uBAAK2C,UAAU,gBACX,gBAACk6B,GAAD,QAIR,gBAAC,GAAD,CAASzqB,IAAK,gBAAC,IAAD,CAAkBzR,GAAG,eAAiBX,IAAI,KACpD,uBAAK2C,UAAU,gBACX,gBAAC,GAAD,CAAgBkJ,IAAMwG,GAAOhe,KAAKmiC,iBAAmBnkB,EAAIrH,OAAQ3W,SAGzE,gBAAC,GAAD,CAAS+d,IAAK,gBAAC,IAAD,CAAkBzR,GAAG,gBAAkBX,IAAI,KACrD,uBAAK2C,UAAU,gBACX,gBAAC,GAAD,CAAiBkJ,IAAMwG,GAAOhe,KAAKoiC,kBAAoBpkB,EAAIrH,OAAQ3W,SAG3E,gBAAC,GAAD,CAAS+d,IAAK,gBAAC,IAAD,CAAkBzR,GAAG,UAAYX,IAAI,KAC/C,gBAACs/B,GAAD,SCvDDh8B,EAAQ,KAAvB,MACaq8B,GAAcpI,GAAe,cAAcA,EAAY,eAAD,iCAE/Dc,WAF+D,uCAElD,WAAOhc,EAAQ4b,EAAIpJ,EAAO2J,GAA1B,SAAAtgC,EAAA,6DACT,EAAKigC,UAAU9b,EAAQ4b,EAAIpJ,EAAO2J,GADzB,kBAEF,GAFE,2CAFkD,iEAO/De,aAP+D,uCAOhD,WAAOld,EAAQ4b,EAAIpJ,EAAO2J,GAA1B,2BAAAtgC,EAAA,yDACPuV,EAAYyX,GAAMK,mBADX,UAGO0S,EAHP,KAKNA,GACU,GAGX+F,EAAa,SACbxF,EAWmB,YAVnBwF,GAA0BzmC,OAAO0M,KAAKu0B,GAClC1pB,OAAOuW,GACG,cAANA,GACS,YAANA,GACM,kBAANA,GAEPpe,IAAIoe,IACA,MAAM1D,EAAI6W,EAAQnT,GAClB,MAAM,GAAN,OAAUA,EAAEG,QAAQ,aAAc,KAAlC,eAA6C7D,EAA7C,SACDhsB,KAAK,YAERqoC,EAAa,IAEdA,EAAa,GAGhBlnC,EA3BO,eA2BOulB,EA3BP,aA2BmB4b,EA3BnB,YA2ByBpJ,EA3BzB,aA2BoCmP,EA3BpC,eA2BqDvwB,EA3BrD,KA6BI,UAAX4O,IACAvlB,EAAG,sBAAmBmhC,EAAnB,YAAyBpJ,EAAzB,aAAoCmP,EAApC,eAAqDvwB,EAArD,MAGO,SAAX4O,IACCvlB,EAAM0hC,EAAQ0F,SAAR,qBAAkCjG,EAAlC,YAAwCpJ,EAAxC,aAAmDmP,EAAnD,eAAoEvwB,EAApE,KACNA,EAAY+qB,EAAQ2F,eAAiB1wB,GAG1B,SAAX4O,EAtCO,kCAuCW/O,GAAcsyB,UAAU/Q,GAvCnC,QAuCDj4B,EAvCC,OAwCDgpC,EAAYhpC,EAAIzC,QAElB2C,EADqB,MAArB8oC,EAAU1rC,OACP,uCAAoC0rC,EAAUnyB,UAA9C,iBAAiEyX,GAAMuB,SAASmZ,EAAUnyB,WAA1F,4CACayX,GAAMuB,SAASmZ,EAAUnyB,WADtC,eACuDA,EADvD,KAGA,UAAMmyB,EAAUzrC,QAAhB,4CACa+wB,GAAMuB,SAASmZ,EAAUnyB,WADtC,eACuDA,EADvD,KA7CA,cAkDI,SAAX4O,IACAvlB,EAAG,eAAWmhC,EAAX,aAAmBpJ,EAAnB,aAA8BmP,EAA9B,gBAAgDvwB,EAAhD,MAGQ,SAAX4O,IACIwjB,EAAc,SACdrH,GAAWA,EAAQmD,UACnBkE,GAA4BrH,EAAQmD,UACjCkE,EAAc,GAEfC,EAAgB5a,GAAMK,mBAC5BzuB,EAAG,qBAAkBmhC,EAAlB,YAAwBpJ,EAAxB,aAAmCmP,EAAnC,eAAoD8B,EAApD,KACHhpC,GAAS,wBAAoBgpC,EAApB,YAAqCD,EAArC,eAAuDpyB,EAAvD,MA9DF,kBAiEJ,CAAE3W,MAAK2W,cAjEH,4CAPgD,iEA0E/D0qB,UA1E+D,uCA0EnD,WAAO9b,EAAQ4b,EAAIpJ,EAAO2J,GAA1B,2BAAAtgC,EAAA,6DAGR,EAAK6nC,KAAO,GAHJ,SAKyB,EAAKxG,aAAald,EAAQ4b,EAAIpJ,EAAO2J,GAL9D,uBAKA/qB,EALA,EAKAA,UAAW3W,EALX,EAKWA,IAEnB,EAAKipC,KAAKvqC,KAAK,CAAEiY,YAAW3W,QAC5B,EAAK4G,SAAS,CAAEsiC,cAAc,IARtB,UAUU,EAAKjoC,OAAOlB,UAC1BC,EACAouB,GAAMO,aACNP,GAAMkB,mBAbF,WAUFxvB,EAVE,OAcR,EAAK8G,SAAS,CAAEsiC,cAAc,IACX,MAAfppC,EAAI1C,OAfA,wBAgBJ,EAAK+rC,cAAL,uBAAmCxyB,EAAnC,aAAiD7W,EAAIzC,UAhBjD,6BAmBiByC,EAAIzC,QAArB+rC,EAnBA,EAmBAA,OAAQ/nC,EAnBR,EAmBQA,KAChB,EAAKgoC,gBAAgB,GAAI,GAAI1yB,EAAWyyB,EAAQ/nC,GAChD,EAAK0gC,UAAY3T,GAAMO,aACvB,EAAK/nB,SAAS,CAAEm7B,UAAW,EAAKA,YAtBxB,4CA1EmD,iEAmG/DsH,gBAAkB,CAAC9jB,EAAQ4b,EAAIpJ,EAAOqR,EAAQ/nC,KAC1C9D,KAAK2jC,aAAe,CAAE3b,SAAQ4b,KAAIpJ,QAAOqR,SAAQ/nC,QACjD9D,KAAK+rC,cAAcjoC,EAAM+nC,MCtGpBG,GAAmB9I,GAAe,cAAcA,EAAY,eAAD,iCACrE+I,kBAAoB,IACVjsC,KAAK0rC,KAAK1rC,KAAK0rC,KAAKrqC,OAAS,GAF8B,KAKrE6qC,SALqE,uCAK1D,WAAO1rC,GAAP,uBAAAqD,EAAA,2DACJ,EAAK6nC,KAAKrqC,OAAS,GADf,uBAEL,EAAKuqC,cAAc,yBAFd,iCAKY,EAAKF,KAAKpY,MACxBqQ,EAAe,EAAK+H,KAAKpY,MANvB,SAOU,EAAK5vB,OAAOrB,IAAIC,UAAawD,UAAW,CAAEsB,KAAMu8B,EAAavqB,YAPvE,UAQW,OADb7W,EAPE,QAQA1C,OARA,0BASoBiI,KAAKM,MAAM7F,EAAIzC,QAAQC,UAAxC+D,EATH,EASGA,KAAM+nC,EATT,EASSA,OATT,UAUC,EAAKM,MAAL,2BAAgBxI,GAAhB,IAA8ByI,MAAOtoC,EAAMuoC,QAASR,KAVrD,iDAaC,EAAKM,MAAMxI,GAbZ,4CAL0D,2DAuBrE2I,qBAvBqE,uCAuB9C,WAAO7pC,EAAIjC,GAAX,iBAAAqD,EAAA,6DACd4M,EAAO,EAAKi7B,KAAK94B,IAAI3C,GAAQA,EAAKxN,KAAKnB,KAAK,IAD9B,SAEF,EAAKoC,OAAOlB,UAAZ,UACZiO,EADY,uBAEZhO,GACHouB,GAAMO,aAHS,2BAIVP,GAAMkB,mBAAsBvxB,IANhB,cAEd+B,EAFc,yBAObA,GAPa,2CAvB8C,6DAoCrE4pC,MApCqE,uCAoC7D,WAAO3rC,GAAP,+BAAAqD,EAAA,yDACGuV,EAAmC5Y,EAAnC4Y,UAAW3W,EAAwBjC,EAAxBiC,IAAK2pC,EAAmB5rC,EAAnB4rC,MAAOC,EAAY7rC,EAAZ6rC,QAC/B,EAAKX,KAAKvqC,KAAK,CAACiY,YAAU3W,SAEtB2pC,IAASC,EAJR,uBAKF,EAAKP,gBAAgB,GAAI,GAAI1yB,EAAWizB,EAASD,GAL/C,kBAMK,KANL,cASC37B,EAAO,EAAKi7B,KAAK94B,IAAI3C,GAAQA,EAAKxN,KAAKnB,KAAK,IAT7C,kBAWgB,EAAKoC,OAAOlB,UAAUiO,EAAMogB,GAAMO,aAAlC,2BACZP,GAAMkB,mBADM,IAEfvT,UAAW,iCACX+tB,6BAA8BnzB,EAC9BozB,sBAAuB1kC,KAAKC,UAAU,EAAK2jC,SAf5C,UAiBiB,OANbnpC,EAXJ,QAiBM1C,OAjBN,wBAkBC,EAAK6rC,KAAKpY,MACV,EAAKsY,cAAcrpC,EAAIzC,SAnBxB,kBAoBQ,KApBR,iBAsBuByC,EAAIzC,QAArBgE,EAtBN,EAsBMA,KAAM+nC,EAtBZ,EAsBYA,OACd,EAAKC,gBAAgB,GAAI,GAAI1yB,EAAWyyB,EAAQ/nC,GAvB9C,kBAwBK,KAxBL,yCA0BF,EAAK8nC,cAAc,oCA1BjB,kBA2BK,KA3BL,0DApC6D,2DAmErEa,KAnEqE,uCAmE9D,WAAOrzB,EAAWszB,GAAlB,yBAAA7oC,EAAA,yDACqB,IAArB,EAAK6nC,KAAKrqC,OADV,uBAED,EAAKuqC,cAAc,2CAFlB,kBAGM,KAHN,UAKEnpC,EALF,wBAKyBouB,GAAMuB,SAAS,EAAK6Z,oBAAoB7yB,WALjE,eAKkFyX,GAAMuB,SAAShZ,GALjG,KAMJ,EAAKsyB,KAAKvqC,KAAK,CAAEiY,YAAW3W,QACtBkqC,EAAW,EAAKjB,KAAK94B,IAAI3C,GAAQA,EAAKxN,KAAKnB,KAAK,MAEhDsrC,EAAiB/b,GAAMO,aACzByb,EAAc,CAAEhtC,OAAQ,IACxB6sC,EAXA,wBAYKI,EAZL,UAYqBH,EAZrB,qCAagBvzB,EAbhB,uCAayDA,EAbzD,gBAeK,EAAK1V,OAAOlB,UAAUsqC,EAAYF,EAAgB,CACrDA,iBACApsB,OAAO,IAjBT,QAmBDqsB,EAAc,CAAEnqC,QAASkqC,EAAgB/sC,OAAQ,GAnBhD,yBAsBc,EAAK6D,OAAON,KAAKd,UAAakC,cAAetB,OAAOC,OAAO,CAC1EiW,YACA3W,IAAKkqC,EACLnI,UAAW,EAAKA,UAChBqH,OAAQ/jC,KAAKC,UAAU,EAAK47B,aAAakI,SACzCgB,IA3BC,eAsBEtqC,EAtBF,yBA6BGA,EAAI1C,QA7BP,4CAnE8D,0D,0CCCpD6J,IAAZD,QACO,MAAMsjC,WAAoBnjC,YACrChK,YAAYmK,GACRoF,MAAMpF,GADS,KAMnBwS,MAAQ,KACJvc,KAAKqJ,SAAS,CAAE2jC,cAAc,IAC9BhtC,KAAK+jC,SAAS16B,SAAS,CAAC4jC,cAAa,KARtB,KAUnBzwB,KAAO,KACHxc,KAAKqJ,SAAS,CAAE2jC,cAAc,IAC9BhtC,KAAK+jC,SAAS16B,SAAS,CAAC4jC,cAAa,KAZtB,KAenBC,gBAAkB,KAChBltC,KAAKmtC,UAhBY,KAmBnBA,OAAS,KACLntC,KAAKqJ,SAAS,CAAE+jC,aAAcptC,KAAKuJ,MAAM6jC,eApB1B,KAuBnBC,iBAAmB,OAvBA,KAwBnBC,aAAe,OAtBXttC,KAAK+J,MAAQA,EACb/J,KAAKuJ,MAAQ,CAAEyjC,cAAc,EAAMI,aAAY,GAC/CptC,KAAK+jC,SAAWh6B,EAAM4M,OAAOotB,SAsBjCx0B,SACI,OAAO,uBAAKrD,MAAOlM,KAAK+J,MAAMmC,MAAOoC,UAAWtO,KAAK+J,MAAMuE,WAAa,WACpE,gBAAC,KAAD,CAAOpD,MAAO,OACVC,QAASnL,KAAKuJ,MAAM6jC,YACpBhiC,SAAUpL,KAAKmtC,OACf9hC,KAAMrL,KAAK+J,MAAMwjC,OACjBhiC,WAAW,SACX8F,MAAM,MACNL,OAAO,MACP,gBAAC,IAAD,CAAM1C,UAAU,cACZ,gBAAC,IAAKrC,KAAN,KAAW,gBAAC,IAAD,CAAO4nB,YAAY,YAAYnW,SAAU1d,KAAK+J,MAAMsjC,kBAAoBrtC,KAAKqtC,iBAAkBvZ,YAAY,MACtH,gBAAC,IAAK7nB,KAAN,CAAWwC,MAAM,mCAAkC,gBAAC,KAAD,CAAQiP,SAAU1d,KAAK+J,MAAMujC,cAAgBttC,KAAKstC,kBAG7G,uBAAKh/B,UAAU,cAAa,gBAAC,IAAD,CAAQqN,QAAS3b,KAAKuJ,MAAMyjC,aAActhC,QAAS1L,KAAK+J,MAAMyjC,QAAShkC,KAAK,WAA5E,UAC5B,uBAAK8E,UAAU,cAAa,gBAAC,IAAD,CAAQsd,SAAU5rB,KAAKuJ,MAAMyjC,aAActhC,QAAS1L,KAAKmtC,OAAQ3jC,KAAK,WAAtE,YAC5B,uBAAK8E,UAAU,cAAa,gBAAC,IAAD,CAAQsd,SAAU5rB,KAAKuJ,MAAMyjC,aAActhC,QAAS1L,KAAK+J,MAAM0jC,YAA/D,eChDjC,MAAMC,GAAmBxK,GAAe,cAAcA,EAAY,eAAD,iCACpEqK,OADoE,sBAC3D,sBAAA1pC,EAAA,sEACgB,EAAKkgC,SAAS0I,KAAK,EAAKkB,iBAAiB,EAAKC,gBAD9D,OAEO,MAFP,SAGD,EAAK7J,SAAS8J,wBACd,EAAK9J,SAAS+J,wBAJb,2CAD2D,KASnEL,WATmE,sBAStD,sBAAA5pC,EAAA,6DACZ,EAAKkqC,eAAexxB,QADR,SAES,EAAKwnB,SAASmI,WAFvB,OAGA,MAHA,SAIR,EAAKnI,SAAS8J,wBACd,EAAK9J,SAAS+J,wBAElB,EAAKC,eAAevxB,OAPR,2CATsD,KAmBnE6wB,iBAAoBj0B,IACjBpZ,KAAK2tC,iBAAmBv0B,EAAU4B,OAAO3M,OApBuB,KAsBnEi/B,aAAcrW,IACXj3B,KAAK4tC,eAAiB3W,K,aCpBtBnR,GAAWC,KAAXD,OACO,MAAMkoB,WAAwBpkC,YACzChK,YAAYmK,GAAQ,IAAD,EACfoF,MAAMpF,GADS,YAWnB8R,OAXmB,sBAWV,8BAAAhY,EAAA,6DACCoqC,EAAqB,EAAKC,YAAYC,SAASxK,aAAakI,OAD7D,SAEmB5yB,GAAcsyB,UAAU,EAAK6C,WAFhD,OAGoB,OADnBA,EAFD,QAGSvuC,QACV,EAAKwJ,SAAS,CACVglC,mBAAoBJ,EAAmBK,OACvCC,gBAAiBzmC,KAAKM,MAAMgmC,EAAUtuC,QAAQ0uC,aAAaF,SAN9D,2CAXU,KAqBnBz3B,kBArBmB,sBAqBC,sBAAAhT,EAAA,sEACV,EAAKgY,SADK,2CArBD,KAyBnB4yB,KAAQjgC,IACJxO,KAAKkuC,YAAYC,SAAWjrC,OAAOC,OAAOnD,KAAKkuC,YAAYC,SAAU3/B,GACrExO,KAAKkuC,YAAYO,QA3BF,KA6BnBl/B,OAAS,IACE,gBAAC,IAAD,CAAMjB,UAAU,aAAaC,SAAUvO,KAAKyuC,MAC/C,gBAAC,IAAKxiC,KAAN,CAAW7E,KAAK,YAAYsH,MAAO,CAAC,CAAEC,UAAU,EAAMb,QAAS,oCAC3D,gBAAC,KAAD,CACIW,MAAM,gBACN8lB,YAAU,EACVroB,MAAO,CAAEmF,MAAO,KAChByiB,YAAa9zB,KAAK2jC,aAClBnP,iBAAiB,WACjBC,aAAc,CAACC,EAAOC,IAClBA,EAAO5qB,MAAM8nB,SAAS+C,cAAcxB,QAAQsB,EAAME,gBAAkB,GAGvE50B,KAAKuJ,MAAM8kC,mBAAmBz7B,IAAI3C,GACxB,gBAAC,GAAD,CAAQtE,IAAKsE,EAAK7I,KAAMiH,MAAO4B,EAAK7I,MAAO6I,EAAK7I,SAInE,gBAAC,IAAK6E,KAAN,CAAW7E,KAAK,aAAasH,MAAO,CAAC,CAAEC,UAAU,EAAMb,QAAS,oCAC5D,gBAAC,KAAD,CACIW,MAAM,aACN8lB,YAAU,EACVroB,MAAO,CAAEmF,MAAO,KAChByiB,YAAa9zB,KAAKouC,UAClB5Z,iBAAiB,WACjBC,aAAc,CAACC,EAAOC,IAClBA,EAAO5qB,MAAM8nB,SAAS+C,cAAcxB,QAAQsB,EAAME,gBAAkB,GAGvE50B,KAAKuJ,MAAMglC,gBAAgB37B,IAAI3C,GACrB,gBAAC,GAAD,CAAQtE,IAAKsE,EAAK7I,KAAMiH,MAAO4B,EAAK7I,MAAO6I,EAAK7I,SAInE,gBAAC,IAAK6E,KAAN,KACI,gBAAC,IAAD,CAAQzC,KAAK,UAAUqF,SAAS,UAAhC,UA9DR7O,KAAK+jC,SAAWh6B,EAAM4M,OAAOotB,SAC7B/jC,KAAKkuC,YAAcnkC,EAAM4M,OACzB3W,KAAK2jC,aAAe3jC,KAAKkuC,YAAYC,SAASxK,aAAanJ,MAC3Dx6B,KAAKouC,UAAYpuC,KAAKkuC,YAAYC,SAASC,UAC3CpuC,KAAKuJ,MAAQ,CACT8kC,mBAAoB,GACpBE,gBAAiB,K,eCXd,MAAMG,WAAqB9kC,YACxChK,YAAYmK,GACVoF,MAAMpF,GADW,KA0BnB0qB,aAAe,CAACka,EAAYha,IAAWA,EAAOzpB,MAAMkoB,QAAQub,IAAe,EA1BxD,KA4BnBC,aAAeC,IACb7uC,KAAKqJ,SAAS,CAAEwlC,eACb7uC,KAAK+J,MAAM6kC,cACZ5uC,KAAK+J,MAAM6kC,aAAa,CAAEC,gBA/BX,KAmCnBC,gBAAkB,IACT9uC,KAAKuJ,MAAMslC,YAAc,GAlChC7uC,KAAK+jC,SAAWh6B,EAAM4M,OAAOotB,SAC7B/jC,KAAKuJ,MAAQvJ,KAAKkgB,IAAInW,GAIxBmW,IAAInW,GASF,MAAO,CAACjG,KARaiG,EAAMglC,aAAan8B,IAAI3C,IACnC,CACL/E,MAAM+E,EAAK7I,KACXuE,IAAKsE,EAAK7I,QAKDynC,WAFM,IAKrBG,mBAAmBC,GAEbjvC,KAAK+J,MAAMglC,eAAiBE,EAAUF,cACtC/uC,KAAKqJ,SAAL,eAAkBrJ,KAAKkgB,IAAIlgB,KAAK+J,SAkBtCwF,SACE,OAAO,uBAAKrD,MAAO,CAACmQ,aAAa,SAC/B,gBAAC,KAAD,CACF6yB,UAAW,CACT79B,MAAO,IACPC,OAAQ,KAEVP,WAAY/Q,KAAKuJ,MAAMzF,KACvBywB,YAAU,EACVE,aAAcz0B,KAAKy0B,aACnBoa,WAAY7uC,KAAKuJ,MAAMslC,WACvBnxB,SAAU1d,KAAK4uC,aAEfr/B,OAAQU,GAAQA,EAAK/E,UCnDV,MAAMikC,WAA6BvlC,YAC9ChK,YAAYmK,GAAQ,IAAD,EACfoF,MAAMpF,GADS,YAYnB8R,OAZmB,sBAYV,8BAAAhY,EAAA,6DACCoqC,EAAqB,EAAKC,YAAYC,SAASxK,aAAakI,OAD7D,SAEmB5yB,GAAcsyB,UAAU,EAAK6C,WAFhD,OAGoB,OADnBA,EAFD,QAGSvuC,QACV,EAAKwJ,SAAS,CACVglC,mBAAoBJ,EAAmBK,OACvCC,gBAAiBzmC,KAAKM,MAAMgmC,EAAUtuC,QAAQ0uC,aAAaF,SAN9D,2CAZU,KAuBnBz3B,kBAvBmB,sBAuBC,sBAAAhT,EAAA,sEACV,EAAKgY,SADK,2CAvBD,KA2BnBuzB,WAAcP,IACV7uC,KAAKkuC,YAAYC,SAAWjrC,OAAOC,OAAOnD,KAAKkuC,YAAYC,SAAU,CACjEkB,kBAAmBR,EAAWA,cA7BnB,KAiCnBS,YAAeT,IACX7uC,KAAKkuC,YAAYC,SAAWjrC,OAAOC,OAAOnD,KAAKkuC,YAAYC,SAAU,CACjEoB,mBAAmBV,EAAWA,cAnCnB,KAuCnBW,MAAQ,KACJxvC,KAAKkuC,YAAYv3B,OAAOkF,UAxCT,KA2CnBtM,OAAS,IACE,gBAAC,IAAD,CAAOhH,SAAW,CAAEE,KAAM,IAC7B,gBAAC,IAAKwD,KAAN,CAAW7E,KAAK,oBAAoBqH,MAAM,gBAC1C,gBAAC,GAAD,CAAcmgC,aAAc5uC,KAAKovC,WAAYL,aAAc/uC,KAAKuJ,MAAM8kC,mBAAoB72B,IAAMwG,GAAOhe,KAAKqvC,kBAAoBrxB,EAAIrH,OAAQ3W,QAG5I,gBAAC,IAAKiM,KAAN,CAAW7E,KAAK,qBAAqBqH,MAAOzO,KAAKouC,UAAU,IAC3D,gBAAC,GAAD,CAAeQ,aAAc5uC,KAAKsvC,YAAcP,aAAc/uC,KAAKuJ,MAAMglC,gBAAiB/2B,IAAMwG,GAAOhe,KAAKuvC,mBAAqBvxB,EAAIrH,OAAQ3W,QAG7I,gBAAC,IAAKiM,KAAN,KACA,gBAAC,IAAKA,KAAN,SAAY,gBAAC,IAAD,CAAQwjC,QAAM,GAAd,YApDhBzvC,KAAK+jC,SAAWh6B,EAAM4M,OAAOotB,SAC7B/jC,KAAKkuC,YAAcnkC,EAAM4M,OACzB3W,KAAK2jC,aAAe3jC,KAAKkuC,YAAYC,SAASxK,aAAanJ,MAC3Dx6B,KAAKouC,UAAYpuC,KAAKkuC,YAAYC,SAASC,UAC3CpuC,KAAKuJ,MAAQ,CACT8kC,mBAAmB,GACnBE,gBAAgB,K,MCVpBzoB,GAAWC,KAAXD,OACO,MAAM4pB,WAAwB9lC,YACzChK,YAAYmK,GAAQ,IAAD,EACfoF,MAAMpF,GADS,YASnB8R,OATmB,sBASV,8BAAAhY,EAAA,sEACaoV,GAAcsrB,mBAD3B,OACChiC,EADD,OAEDskC,EAAS,GACM,MAAftkC,EAAI1C,SACJgnC,EAAStkC,EAAIzC,QAAQ8S,IAAI3C,IACd,CACH7I,KAAM6I,EAAKmJ,UACX/K,MAAO4B,EAAKmJ,cAIxB,EAAK/P,SAAS,CAAEw9B,WAXX,2CATU,KAuBnBhwB,kBAvBmB,sBAuBC,sBAAAhT,EAAA,sEACV,EAAKgY,SADK,2CAvBD,KA2BnB4yB,KAAQjgC,IAEJxO,KAAKkuC,YAAYC,SAAWjrC,OAAOC,OAAOnD,KAAKkuC,YAAYC,SAAS3/B,GACpExO,KAAKkuC,YAAYO,QA9BF,KAkCnBl/B,OAAS,IACG,gBAAC,IAAD,CAAMjB,UAAU,aAAaC,SAAUvO,KAAKyuC,MAChD,gBAAC,IAAKxiC,KAAN,CAAW7E,KAAK,WAAWsH,MAAO,CAAC,CAAEC,UAAU,EAAMb,QAAS,8BAC1D,gBAAC,KAAD,CACIymB,YAAU,EACVroB,MAAO,CAAEmF,MAAO,KAChByiB,YAAY,mBACZU,iBAAiB,WACjBC,aAAc,CAACC,EAAOC,IAClBA,EAAO5qB,MAAM8nB,SAAS+C,cAAcxB,QAAQsB,EAAME,gBAAkB,GAGxE,gBAAC,GAAD,CAAQjpB,IAAI,QAAQ0C,MAAM,cAA1B,cACA,gBAAC,GAAD,CAAQ1C,IAAI,OAAO0C,MAAM,aAAzB,aACA,gBAAC,GAAD,CAAQ1C,IAAI,QAAQ0C,MAAM,cAA1B,cACA,gBAAC,GAAD,CAAQ1C,IAAI,OAAO0C,MAAM,aAAzB,eAIR,gBAAC,IAAKpC,KAAN,CAAW7E,KAAK,YAAYsH,MAAO,CAAC,CAAEC,UAAU,EAAMb,QAAS,+BAC3D,gBAAC,KAAD,CACIymB,YAAU,EACVroB,MAAO,CAAEmF,MAAO,KAChByiB,YAAY,oBACZU,iBAAiB,WACjBC,aAAc,CAACC,EAAOC,IAClBA,EAAO5qB,MAAM8nB,SAAS+C,cAAcxB,QAAQsB,EAAME,gBAAkB,GAGvE50B,KAAKuJ,MAAMs9B,OAAOj0B,IAAK3C,GACb,gBAAC,GAAD,CAAQtE,IAAKsE,EAAK7I,KAAMiH,MAAO4B,EAAK5B,OAAQ4B,EAAK7I,SAKpE,gBAAC,IAAK6E,KAAN,KACI,gBAAC,IAAD,CAAQzC,KAAK,UAAUqF,SAAS,UAAhC,UApER7O,KAAK+jC,SAAWh6B,EAAM4M,OAAOotB,SAC7B/jC,KAAKkuC,YAAcnkC,EAAM4M,OACzB3W,KAAKuJ,MAAQ,CACTs9B,OAAQ,K,2OCGZ8I,GAASC,KAATD,KACFE,GAAcniC,KAAOC,IAAV,MAUjB,MAAMmiC,WAAoBvM,GAAI35B,aAAiBu5B,KAC3CuK,KAEA9tC,YAAYmK,GAAQ,IAAD,EACfoF,MAAMpF,GADS,YAanByjC,QAbmB,sBAaT,8DAAA3pC,EAAA,yDACAggC,EAAmB,EAAKE,SAASJ,aAAanJ,MAD9C,EAEwF,EAAK2T,SAA3FC,EAFF,EAEEA,UAAW2B,EAFb,EAEaA,SAAUC,EAFvB,EAEuBA,UAAWC,EAFlC,EAEkCA,WAAYZ,EAF9C,EAE8CA,kBAAmBE,EAFjE,EAEiEA,mBAEnEF,GAAsBE,EAJpB,uBAKF,EAAKxL,SAAS6H,cAAc,4BAL1B,iCASN,EAAKmC,eAAexxB,QATd,SAUiBtD,GAAcsyB,UAAU6C,GAVzC,cAUA8B,EAVA,OAWAC,EAAgBD,EAASpwC,QACzBswC,EAAuBf,GAAqBA,EAAkBz8B,IAAI3C,GAAI,UAAO4zB,EAAP,aAA6B5zB,EAA7B,MAAuC3O,KAAK,KAClH+uC,EAAwBd,GAAsBA,EAAmB38B,IAAI3C,GAAI,UAAOm+B,EAAP,aAAsBn+B,EAAtB,MAAgC3O,KAAK,KAE9GgvC,EAfA,UAekBzM,EAflB,aAewCmM,EAfxC,KAgBAO,EAhBA,UAgBmBnC,EAhBnB,aAgBkC6B,EAhBlC,KAkBAO,EAlBA,UAkBaT,EAlBb,YAkByB3B,EAlBzB,eAkByCkC,EAlBzC,cAkB2DC,GAG7DE,EAAa,GACbL,GAAwBC,IACxBI,EAAaL,EAAuB,IAAMC,GAG1CD,IAAyBC,IACzBI,EAAaL,IAGZA,GAAwBC,IACzBI,EAAaJ,GAGXj3B,EAAYyX,GAAMK,mBAElBzuB,EApCA,UAoCS0tC,EAAcrwC,QApCvB,sBAoC4C2wC,EApC5C,iBAoC+D5M,EApC/D,YAoCmF2M,EApCnF,eAoCiGp3B,EApCjG,KAqCN1G,QAAQC,IAAIlQ,GArCN,UAsCA,EAAKshC,SAASoI,MAAM,CAAE/yB,YAAW3W,QAtCjC,QAuCN,EAAKsrC,eAAevxB,OACpB,EAAKunB,SAAS8J,wBAxCR,4CAbS,KAwDnBY,KAAO,KACHzuC,KAAKqJ,SAAS,CAAEqnC,YAAa1wC,KAAKuJ,MAAMmnC,YAAc,KAzDvC,KA2DnBC,QAAU,KACN3wC,KAAKqJ,SAAS,CAAEqnC,YAAa1wC,KAAKuJ,MAAMmnC,YAAc,KA1DtD1wC,KAAK+jC,SAAWh6B,EAAM4M,OAAOotB,SAC7B/jC,KAAKmuC,SAAW,CAAExK,aAAc3jC,KAAK+jC,SAASJ,cAC9C3jC,KAAKuJ,MAAQ,CACTmnC,YAAa,EACbE,MAAO,CACH,gBAAC,GAAD,CAAiBj6B,OAAQ3W,OACzB,gBAAC,GAAD,CAAiB2W,OAAQ3W,OACzB,gBAAC,GAAD,CAAqB2W,OAAQ3W,SAsDzCuP,SACI,OAAO,uBAAKjB,UAAU,YAClB,uBAAKA,UAAW,gBACZ,gBAAC,GAAD,CAAaqI,OAAQ3W,KAAMytC,WAAYztC,KAAKytC,WACxCJ,iBAAkBrtC,KAAKqtC,iBAAkB71B,IAAMwG,GAAOhe,KAAK+tC,eAAiB/vB,EAC5EuvB,OAAQvtC,KAAKutC,OACbC,QAASxtC,KAAKwtC,QACdthC,MAAO,CAAEmQ,aAAc,WAE/B,2BACI,gBAAC,KAAD,CAAO9R,QAASvK,KAAKuJ,MAAMmnC,aACvB,gBAACf,GAAD,CAAMhkC,IAAK,EAAGT,MAAM,QAAQO,YAAY,kDACxC,gBAACkkC,GAAD,CAAMhkC,IAAK,EAAGT,MAAM,kBAAkBO,YAAY,6CAClD,gBAACkkC,GAAD,CAAMhkC,IAAK,EAAGT,MAAM,SAASO,YAAY,kDAGjD,uBAAK6C,UAAU,iBAAf,IAAgC,gBAACuhC,GAAD,KAC3B7vC,KAAKuJ,MAAMqnC,MAAM5wC,KAAKuJ,MAAMmnC,iBAM7BZ,UC9GhB,MAAM9gC,GAAgBC,EAAQ,KAEf,MAAM4hC,WAAsBjnC,YACvChK,YAAYmK,GACRoF,MAAMpF,GADS,KAQnBqF,UAAY,CAACC,EAAWvL,KAEpB,MAAMuK,EAAQvK,EAAK,GAAGuL,EAAU1D,KAEhC,GAAI3L,KAAKsP,QAAUtP,KAAKsP,OAAL,OACfpM,OAAO0M,KAAK5P,KAAKsP,QAAQsD,IAAIoe,IACzB,MAAM1D,EAAIttB,KAAKsP,OAAO0hB,GAAG3hB,EAAU1D,KAChC2hB,IACCje,EAAU2hB,GAAK1D,SAJ3B,CAUA,IACI,GAAI1jB,YAAgB4F,cAAcnB,EAAM7E,MAEpC,YADA6F,EAAS,OAAahB,GAAS,4BAAOA,IAI9C,MAAOhG,IAGc,QAAjBgH,EAAU1D,IAKS,kBAAX0C,EAIW,iBAAXA,EAIW,mBAAXA,EAIS,cAAjBgB,EAAU1D,KAAwC,WAAjB0D,EAAU1D,KAAqC,QAAjB0D,EAAU1D,MACzE0D,EAAS,OAAahB,GAAS,2BAAMA,EAAMoB,aAJ3CJ,EAAS,OAAahB,GAAS,4BAAOA,EAAMoB,YAJ5CJ,EAAS,OAAahB,GAAS,4BAAOA,EAAM/M,KAAK,KAAKoO,UAAU,EAAG,MAJnEL,EAAS,OAAahB,GAAS,4BAAOvG,KAAKC,UAAUsG,GAAOqB,UAAU,EAAG,MALzEL,EAAS,OAAahB,GAAS,2BAAMA,EAAMqB,UAAU,EAAE,QAhC5C,KAwDnBC,OAAS,CAAC7L,EAAMwL,KAEZtP,KAAKsP,OAAOA,EACZ,IAAIM,EAAO,GACPC,EAAS,GACTC,EAAO,GACX,MAAMC,EAAO/P,KAEb8D,EAAKkM,SAAQ,SAAUC,GACnB,IAAK,IAAItE,KAAOsE,EACZ,IAAKJ,EAAOlE,GAAM,CACd,MAAM0D,EAAY,CACdnE,MAAOS,EACPuE,UAAWvE,EACXA,IAAKA,GAEToE,EAAKX,UAAUC,EAAWvL,GAC1B8L,EAAKzO,KAAKkO,GACVQ,EAAOlE,IAAO,MAM1B7H,EAAKkM,SAAQ,SAAUC,EAAME,GACzB,IAAIC,EAAW,GACfR,EAAKI,SAAQ,SAAUrE,GACnByE,EAASzE,EAAIA,KAAOsE,EAAKtE,EAAIA,QAEjCyE,EAAQ,IAAUD,EAClBL,EAAK3O,KAAKiP,MAGdpQ,KAAKqJ,SAAS,CAACgH,QAAST,EAAM9L,KAAMgM,KAzFrB,KA4FnBQ,eAAiB,CAACC,EAAKJ,EAAOK,KACT,gBAAbD,EAAInJ,MAAuC,QAAbmJ,EAAInJ,MAClCpH,KAAKqJ,SAAS,CACVoH,KAAM,CACFC,SAAS,EACT5Q,QAASyQ,EAAIlC,UAjGV,KAuGnBsC,eAAiB,KACb3Q,KAAKqJ,SAAS,CACVoH,KAAM,CACFC,SAAS,MAxGjB1Q,KAAK4Q,WAAa7G,EAAMmC,OAAS,GACjClM,KAAKuJ,MAAQ,CAAC8G,QAAS,GAAIP,KAAM,GAAIW,KAAM,CAACC,SAAS,IACrD1Q,KAAKsP,OAAS,GACdtP,KAAK+jC,SAAWh6B,EAAM4M,OA0G1BpH,SAEI,OAAQ,uBAAKrD,MAAOlM,KAAK4Q,YACjB,gBAAC,KAAD,CACIkgC,WAAY,CAACC,SAAS,GACtBj+B,KAAM,UACNzC,QAASrQ,KAAKuJ,MAAM8G,QACpBU,WAAY/Q,KAAKuJ,MAAMzF,KACvBk8B,OAAU,CAAC9rB,GAAE,KAEjB,gBAAC,KAAD,CACIhJ,MAAO,OACPC,QAASnL,KAAKuJ,MAAMkH,KAAKC,QACzBtF,SAAUpL,KAAK2Q,eACftF,KAAMrL,KAAK2Q,eACXpF,WAAW,SACXyF,OAAO,MAEP,gBAAC,GAAD,CAAeC,OAAQjR,KAAKuJ,MAAMkH,KAAK3Q,SAAW,QCtI/D,MAAMkxC,GAAgB9N,GAAe,cAAcA,EAAY,eAAD,iCACjE+N,mBAAqB,CAACha,EAASnc,KAC3B,MAAMo2B,EAAYp2B,EAAOM,MACrB6b,EACAj3B,KAAKmxC,cAAchwC,KAAK+vC,GAExBlxC,KAAKmxC,cAAgBnxC,KAAKmxC,cAAc12B,OAAQxK,GACrCA,EAAK7I,OAAS8pC,IAPgC,KAWjEE,qBAAuB,CAAChqC,EAAKiqC,KAC1BrxC,KAAKsxC,UAAUnwC,KAAK,CAACiG,OAAKiqC,aAZoC,KAcjE7D,QAdiE,sBAcvD,oCAAA3pC,EAAA,6DACL,EAAKkqC,eAAexxB,QACdnD,EAAYyX,GAAMK,mBAEpBqgB,EAAY,EAAKD,UAAU1+B,IAAI3C,GAC1B,GAAN,OAAUA,EAAK7I,KAAf,gBAA4B6I,EAAKohC,QAAjC,MAGCF,EAAgB,GAEY,IAA7B,EAAKA,cAAc9vC,SACnB8vC,EAAa,mBAAe,EAAKA,cAAcv+B,IAAI3C,GAAM,IAAF,OAAOA,EAAP,MAAiB3O,KAAK,MAC7EiwC,EAAY,EAAKJ,cAAcv+B,IAAI3C,GAAM,IAAF,OAAOA,EAAP,MAAiBmxB,OAAOmQ,IAG5D9uC,EAfD,iBAeiB8uC,EAAUjwC,KAAK,KAfhC,iBAe6C,EAAKyiC,SAASkI,oBAAoB7yB,UAf/E,YAe4F+3B,EAf5F,eAegH/3B,EAfhH,cAgBgB,EAAK2qB,SAASoI,MAAM,CAAC/yB,YAAU3W,QAhB/C,OAgBC5C,EAhBD,OAiBL,EAAKkuC,eAAevxB,OACN,MAAX3c,GACA,EAAKkkC,SAAS8J,wBAnBZ,8C,eCdK9nB,KAAXD,OAEO,MAAM0rB,WAAiB5nC,YAClChK,YAAYmK,GACRoF,MAAMpF,GADS,KAInB0wB,KAAQ3J,IACJ9wB,KAAKqJ,SAAS,CAAEynB,UALD,KAQnB2gB,UAAY,IACD,gBAAC,KAAKxlC,KAAN,CAAWN,IAAI,QAClB,gBAAC,KAAKM,KAAKylC,KAAX,CAAgBxmC,MAAM,OAAOO,YAAazL,KAAKuJ,MAAMunB,KAAK2gB,UAAUrpB,MAAMupB,SAV/D,KAenBC,YAAc,IACH,gBAAC,KAAK3lC,KAAN,CAAWN,IAAI,gBAClB,gBAAC,KAAKM,KAAKylC,KAAX,CAAgBxmC,MAAM,eAAeO,YAAazL,KAAKuJ,MAAMunB,KAAK8gB,YAAYxpB,MAAMupB,SAjBzE,KAsBnBE,WAAa,IACF7xC,KAAKuJ,MAAMunB,KAAKtwB,OAAOoS,IAAI3C,GACvB,gBAAC,KAAKhE,KAAN,CAAWN,IAAKsE,EAAK7I,MACxB,gBAAC,KAAK6E,KAAKylC,KAAX,CAAgBxmC,MAAO+E,EAAK7I,KAAMqE,YAAawE,EAAKmY,MAAMupB,UAvBlE3xC,KAAKuJ,MAAL,eAAiBQ,GA6BrBwF,SACI,OAAIvP,KAAKuJ,MAAMunB,KACJ,gBAAC,KAAD,CACHhe,KAAK,QACL6K,OAAQ,+CAAmB3d,KAAKuJ,MAAMunB,KAAKziB,MAAnC,WACRyjC,OAAQ,4BACRC,UAAQ,GAEP/xC,KAAKyxC,YACLzxC,KAAK4xC,cACL5xC,KAAK6xC,cAGH,6B,MC3CX/rB,GAAWC,KAAXD,OAEO,MAAMksB,WAAyBpoC,YAC1ChK,YAAYmK,GAAQ,IAAD,EACfoF,MAAMpF,GADS,YAcnBkoC,aAdmB,uCAcJ,WAAM5jC,GAAN,iBAAAxK,EAAA,0DACPwK,EADO,gCAEW4K,GAAci5B,gBAFzB,OAED3vC,EAFC,OAGDuB,EAAOvB,EAAIzC,QAAQ8S,IAAK3C,IACnB,CACH5B,MAAO4B,EAAKtE,IAAI6uB,MAChBx4B,KAAMiO,EAAKtE,IAAI6uB,MACfiX,UAAWxhC,EAAKI,QAAQ,GACxBuhC,YAAa3hC,EAAKI,QAAQ,GAC1B7P,OAAQyP,EAAKI,QAAQohB,MAAM,EAAGxhB,EAAKI,QAAQhP,WAGnD,EAAKgI,SAAS,CAAEvF,SAZT,sBAcP,EAAKuF,SAAS,CAAEvF,KAAM,KAdf,2CAdI,2DA+BnB8qC,aAAevgC,IACX,MAAM8jC,EAAcnyC,KAAKuJ,MAAMzF,KAAK2W,OAAOxK,GAAQA,EAAK5B,QAAUA,GAAO,GACzErO,KAAKqJ,SAAS,CAAE8oC,gBAChBnyC,KAAKoyC,YAAY3X,KAAK0X,IAlCP,KAqCnBE,mBAAqBr/B,IACjBhT,KAAKsyC,kBAAoBt/B,EAAIgI,OAAO3M,OAtCrB,KAyCnBkkC,aAAetb,IACXj3B,KAAKwyC,cAAgBvb,GA1CN,KA6CnBwb,cAAgBz/B,IACZhT,KAAK0yC,YAAc1/B,EAAIgI,OAAO3M,OA9Cf,KAiDnBskC,YAAe3/B,IACX,MAAM5L,EAAO4L,EAAIgI,OAAOyY,aAAa,QACrCzzB,KAAK4yC,WAAWxrC,GAAQ4L,EAAIgI,OAAO3M,OAnDpB,KAsDnBwkC,WAAc5iC,IACVjQ,KAAK4yC,WAAW3iC,EAAK7I,MAAQpH,KAAK8yC,aACR,QAAtB7iC,EAAKmY,MAAMhQ,OACJpY,KAAK8yC,aACF,IA1DC,KA6DnBC,aAAe,KACX,GAAG/yC,KAAKsyC,kBACJ,MAAO,CACHl3B,MAAMpb,KAAK8yC,aACXE,MAAMhzC,KAAKwyC,cACXS,cAAejzC,KAAKsyC,kBACpB1H,WAAY5qC,KAAK0yC,aAGzB,MAAMlyC,EAAS,GACfR,KAAKuJ,MAAM4oC,YAAY3xC,OAAOwP,QAAQC,IAClC,MAAMqd,EAAIttB,KAAK4yC,WAAW3iC,EAAK7I,MAC3BkmB,IAC0B,QAAtBrd,EAAKmY,MAAMhQ,OACX5X,EAAOW,KAAK0vB,GAAMuB,SAAS9E,IACL,UAAjBrd,EAAKoE,UAAwC,WAAjBpE,EAAKoE,SACtC7T,EAAOW,KAAKmsB,GAGZ9sB,EAAOW,KAAP,WAAgBmsB,EAAhB,SAMZ,MAAO,CAAClS,MAFMpb,KAAK8yC,aAELE,MAD+C,QAA/ChzC,KAAKuJ,MAAM4oC,YAAYV,UAAUrpB,MAAM8qB,IAChCD,cAAc,GAAD,OAAKjzC,KAAKuJ,MAAM4oC,YAAY9jC,MAA5B,YAAqC7N,EAAOc,KAAK,KAAjD,KAA0DspC,WAAY5qC,KAAK0yC,cAtF9F,KAwFnB72B,OAAS,KACL7b,KAAKqJ,SAAS,CACVsC,IAAKsiB,KAAKklB,SACVrvC,KAAM,GACNuK,WAAO9M,EACP6xC,WAAW,EACXjB,iBAAa5wC,IAEjBvB,KAAKqzC,QAAU,IA9FfrzC,KAAK2W,OAAS5M,EAAM4M,OACpB3W,KAAK8yC,aAAe/oC,EAAM+oC,aAC1B9yC,KAAK4yC,WAAa,GAClB5yC,KAAKuJ,MAAQ,CACTzF,KAAM,GACNuK,WAAO9M,EACP6xC,WAAW,EACXtiB,KAAM,GACNnlB,IAAKsiB,KAAKklB,UAyFlB5jC,SACI,MAAM40B,EAAUnkC,KAAKuJ,MAAMzF,KAAK8O,IAAI0gC,GAAK,gBAAC,GAAD,CAAQ3nC,IAAK2nC,EAAEjlC,OAAQilC,EAAEtxC,OAClE,OAAO,gBAAC,IAAD,CAAMsM,UAAU,aAAa3C,IAAK3L,KAAKuJ,MAAMoC,KAChD,gBAAC,IAAKM,KAAN,KACI,gBAAC,KAAD,CACIsoB,YAAU,EACVlmB,MAAOrO,KAAKuJ,MAAM8E,MAClBylB,YAAa,kBACbyf,0BAA0B,EAC1BC,WAAW,EACXtnC,MAAO,CAAEmF,MAAO,SAChBojB,cAAc,EACdgf,SAAUzzC,KAAKiyC,aACfv0B,SAAU1d,KAAK4uC,aACf8E,gBAAiB,sBAEhBvP,IAIT,gBAAC,IAAKl4B,KAAN,KAAW,gBAAC,GAAD,CAAUuL,IAAMwG,GAAOhe,KAAKoyC,YAAcp0B,KAEjDhe,KAAKuJ,MAAM4oC,YAAcnyC,KAAKuJ,MAAM4oC,YAAY3xC,OAAOoS,IAAI3C,GAChD,gBAAC,IAAKhE,KAAN,CAAWN,IAAKsE,EAAK7I,MAAM,gBAAC,IAAD,CAAOA,KAAM6I,EAAK7I,KAAMsW,SAAU1d,KAAK2yC,YAAa9e,YAAa5jB,EAAK7I,KAAMusC,aAAc3zC,KAAK6yC,WAAW5iC,OAE3I,4BAET,gBAAC,IAAKhE,KAAN,KAAW,gBAAC,IAAD,CAAO4nB,YAAY,oBAAoBnW,SAAU1d,KAAKqyC,mBAAoBve,YAAY,MACjG,gBAAC,IAAK7nB,KAAN,CAAWwC,MAAM,mBAAkB,gBAAC,KAAD,CAASiP,SAAU1d,KAAKuyC,gBAC3D,gBAAC,IAAKtmC,KAAN,KAAW,gBAAC,IAAD,CAAO4nB,YAAY,gBAAgBnW,SAAU1d,KAAKyyC,cAAe3e,YAAY,QChIhFpqB,IAAZD,QAGO,MAAMmqC,WAAmBrQ,GAAI35B,aAAiBu5B,KAAKuK,GAAgBsD,KAC9EpxC,YAAYmK,GACRoF,MAAMpF,GADS,KASnB8pC,qBAAwB/4B,IACpB9a,KAAK8yC,aAAeh4B,EAAOM,MAC3Bpb,KAAKqJ,SAAS,CAAE+pC,WAAW,KAXZ,KAcnBv3B,OAAS,KACL,MACMi4B,EADS9zC,KAAK+jC,SAASJ,aAAakI,OAAOyC,OAC3B17B,IAAI3C,IACf,CAAEmL,MAAOnL,EAAK7I,KAAM2sC,QAAS,GAAIb,IAAK,MAE3C5jC,EAAS,CACXC,OAAQ,CACJwkC,QAAS,CAAC1lC,EAAOyM,IACN,gBAAC,KAAD,CAAQnP,IAAKmP,EAAOM,MAAO44B,eAAgBl5B,EAAOm5B,SAAUv2B,SAAWuZ,IAC1Ej3B,KAAKixC,mBAAmBha,EAAQnc,GAChCA,EAAOm5B,SAAWhd,GACnBid,QAASp5B,IAEhBo4B,IAAK,CAAC7kC,EAAOyM,IACF,gCACP,gBAAC,IAAD,CAAQnP,IAAKmP,EAAOM,MAAOlP,MAAO,CAACioC,YAAY,QAASD,QAASp5B,EAAQpP,QAAS,KAC9E1L,KAAK6zC,qBAAqB/4B,KAD9B,mBAE2B,4BAAOA,EAAOs5B,MAAP,WAAmBt5B,EAAOs5B,KAA1B,MAAmC,OAIjFp0C,KAAKq0C,WAAW1kC,OAAOmkC,EAAQxkC,IAnChB,KA0CnBglC,WAAa,KACXt0C,KAAKu0C,oBAAoBzB,aAAe9yC,KAAK8yC,aAD9B,QAE8B9yC,KAAKu0C,oBAAoBxB,eAA9D33B,EAFO,EAEPA,MAAO63B,EAFA,EAEAA,cAAerI,EAFf,EAEeA,WACf5qC,KAAKq0C,WAAW9qC,MAAMzF,KAAK2W,OAAOxK,GAAMA,EAAKmL,QAAUA,GAAO,GACtEg5B,KAAP,UAAiBnB,EAAjB,eAAqCrI,GACrC5qC,KAAKoxC,qBAAqB6B,EAAcrI,GACxC5qC,KAAKqJ,SAAS,CAAE+pC,WAAW,IAC3BpzC,KAAKu0C,oBAAoB14B,UA/CvB7b,KAAK+jC,SAAWh6B,EAAM4M,OAAOotB,SAC7B/jC,KAAKuJ,MAAQ,CAAE6pC,WAAW,GAC1BpzC,KAAKmxC,cAAgB,GAErBnxC,KAAKsxC,UAAY,GAgCrBz6B,oBACI7W,KAAK6b,SAaTtM,SACI,OAAO,2BACH,2BACI,gBAAC,KAAD,CACIrE,MAAK,6BAAwBlL,KAAK8yC,aAA7B,KACL3nC,QAASnL,KAAKuJ,MAAM6pC,UACpBhoC,SAAU,KACNpL,KAAKqJ,SAAS,CAAE+pC,WAAW,IAC3BpzC,KAAKu0C,oBAAoBlrC,SAAS,CAACsC,IAAIsiB,KAAKklB,YAEhD9nC,KACIrL,KAAKs0C,WAET/oC,WAAW,SACX8F,MAAM,MACNL,OAAO,MACP,gBAAC,GAAD,CAAkB2F,OAAQ3W,KAAMwX,IAAMwG,GAAKhe,KAAKu0C,oBAAoBv2B,EAAI80B,aAAc9yC,KAAK8yC,gBAG/F,uBAAKxkC,UAAU,gBACZ,gBAAC,GAAD,CAAaqI,OAAQ3W,KAAMytC,WAAYztC,KAAKytC,WAAYH,aAActtC,KAAKstC,aAAcD,iBAAkBrtC,KAAKqtC,iBAAkB71B,IAAMwG,GAAKhe,KAAK+tC,eAAe/vB,EAAIuvB,OAAQvtC,KAAKutC,OAAQC,QAASxtC,KAAKwtC,QAASthC,MAAO,CAACmQ,aAAa,YAG7O,2BACI,gBAAC,GAAD,CAAe1F,OAAQ3W,KAAMwX,IAAKwG,GAAMhe,KAAKq0C,WAAar2B,O,OCvF3D,MAAMw2B,WAAqB5qC,YACxChK,YAAYmK,GACVoF,MAAMpF,GADW,KAKnB+kC,gBAAkB,IACT9uC,KAAKy0C,QAAQlY,gBAJpBv8B,KAAK+jC,SAAWh6B,EAAM4M,OAAOotB,SAC7B/jC,KAAKuJ,MAAQvJ,KAAKkgB,IAAInW,GAKxBmW,IAAInW,GASF,MAAO,CAAEjG,KARYiG,EAAMglC,aAAan8B,IAAI3C,IACnC,CACL/E,MAAO+E,EAAK7I,KACZuE,IAAKsE,EAAK7I,QAKCynC,WAFI,IAKrBG,mBAAmBC,GAEbjvC,KAAK+J,MAAMglC,eAAiBE,EAAUF,cACxC/uC,KAAKqJ,SAAL,eAAmBrJ,KAAKkgB,IAAIlgB,KAAK+J,SAIrCwF,SACE,OAAO,gBAAC,IAAD,CAAMhH,SAAU,CAAEE,KAAM,GAAK+O,IAAMwG,IAAShe,KAAKy0C,QAAUz2B,IAC/Dhe,KAAKuJ,MAAMzF,KAAK8O,IAAI3C,GACZ,gBAAC,IAAKhE,KAAN,CAAWN,IAAKsE,EAAKtE,IAAKvE,KAAM6I,EAAKtE,IAAK8C,MAAOwB,EAAKtE,IAAK0C,MAAO4B,EAAKtE,KAC5E,gBAAC,IAAD,CAAOmoB,YAAa,gCC7Bf,MAAM4gB,WAAsB9qC,YACvChK,YAAYmK,GACRoF,MAAMpF,GADS,KAejBmW,IAAOnW,IAsBE,CAAEqpC,WAAW,EAAOtvC,KArBZiG,EAAMglC,aAEDn8B,IAAI3C,IACb,CAAEmL,MAAOnL,EAAK7I,KAAM0pB,KAAM,GAAImiB,cAAe,GAAI,WAAc,MAkBzC3jC,OAflB,CACXC,OAAQ,CACJuhB,KAAM,CAACziB,EAAOyM,IACH,gBAAC,IAAD,CAAQnP,IAAKmP,EAAOM,MAAO84B,QAASp5B,EAAQpP,QAAS,KACxD1L,KAAK6zC,qBAAqB/4B,KADvB,mBAIXm4B,cAAe,CAAC5kC,EAAOyM,IACZzM,EAEXu8B,WAAY,CAACv8B,EAAOyM,IACTzM,MAjCJ,KAwCnBwlC,qBAAwB/4B,IACpB9a,KAAK8yC,aAAeh4B,EAAOM,MAC3Bpb,KAAKqJ,SAAS,CAAE+pC,WAAW,KA1CZ,KA6CnBv3B,OAAS,KACL7b,KAAKq0C,WAAW1kC,OAAO3P,KAAKuJ,MAAMzF,KAAM9D,KAAKuJ,MAAM+F,SA9CpC,KAqDnBglC,WAAa,KACTt0C,KAAKu0C,oBAAoBzB,aAAe9yC,KAAK8yC,aAD9B,QAEoC9yC,KAAKu0C,oBAAoBxB,eAApE33B,EAFO,EAEPA,MAAO63B,EAFA,EAEAA,cAAerI,EAFf,EAEeA,WAAWoI,EAF1B,EAE0BA,MACzC,IAAIpI,EAED,YADA5qC,KAAKqJ,SAAS,CAAC,MAAQ,+BAG1B,MAAMvF,EAAO9D,KAAKuJ,MAAMzF,KAAK8O,IAAI3C,GACzBA,EAAKmL,QAAUA,EACR,CAAEA,QAAO0V,KAAM,GAAImiB,gBAAerI,aAAWoI,SAEjD/iC,GAEXjQ,KAAKqJ,SAAS,CAAE+pC,WAAW,EAAOtvC,OAAK7B,WAAMV,GAAa,KAAQvB,KAAK6b,WACvE7b,KAAKu0C,oBAAoB14B,UAnEV,KAsEnBizB,gBAAkB,IACP9uC,KAAKuJ,MAAMzF,KAvEH,KA0EnByL,OAAS,IACE,2BAEH,gBAAC,KAAD,CACIrE,MAAK,6BAAwBlL,KAAK8yC,aAA7B,KACL3nC,QAASnL,KAAKuJ,MAAM6pC,UACpBhoC,SAAU,KACNpL,KAAKu0C,oBAAoB14B,SACzB7b,KAAKqJ,SAAS,CAAE+pC,WAAW,EAAMnxC,WAAMV,KAE3C8J,KACIrL,KAAKs0C,WAET/oC,WAAW,SACX8F,MAAM,MACNL,OAAO,MACNhR,KAAKuJ,MAAMtH,OAAS,gBAAC,GAAD,CAAU6L,QAAS9N,KAAKuJ,MAAMtH,QACnD,gBAAC,GAAD,CAAkB0U,OAAQ3W,KAAMwX,IAAMwG,GAAOhe,KAAKu0C,oBAAsBv2B,EAAI80B,aAAc9yC,KAAK8yC,gBAEnG,gBAAC,GAAD,CAAet7B,IAAKwG,GAAMhe,KAAKq0C,WAAar2B,KA3FhDhe,KAAK+jC,SAAWh6B,EAAM4M,OAAOotB,SAC7B/jC,KAAKuJ,MAAQvJ,KAAKkgB,IAAInW,GAG1BilC,mBAAmBC,GAEXjvC,KAAK+J,MAAMglC,eAAiBE,EAAUF,cACxC/uC,KAAKqJ,SAAL,eAAmBrJ,KAAKkgB,IAAIlgB,KAAK+J,QAAS,KACxC/J,KAAK6b,WAuCbhF,oBACI7W,KAAK6b,UCvDN,MAAM84B,GAAsBzR,GAAc,cAAcA,EAAa,eAAD,iCACvE0R,cADuE,sBACvD,gCAAA/wC,EAAA,yDACZ,EAAKkqC,eAAexxB,QAIC,KAHf+xB,EAAS,EAAKuG,gBAAgB/F,kBAAkBl8B,IAAI3C,GAChD,IAAN,OAAYA,EAAZ,OAEM5O,OALE,uBAMR,EAAK0iC,SAAS+Q,SAAS,2BACvB,EAAK/G,eAAevxB,OAPZ,iCAUNpD,EAAYyX,GAAMK,mBAElBzuB,EAZM,iBAYU6rC,EAAOhtC,KAAK,KAZtB,iBAYmC,EAAKyiC,SAASkI,oBAAoB7yB,UAZrE,eAYqFA,EAZrF,eAaN,EAAK2qB,SAASoI,MAAM,CAAC/yB,YAAU3W,QAbzB,QAcZ,EAAKsrC,eAAevxB,OACpB,EAAKunB,SAAS8J,wBAfF,4CADuD,KAmBtEkH,YAnBsE,sBAmBxD,oCAAAlxC,EAAA,yDACV,EAAKkqC,eAAexxB,QAEC,KADf+xB,EAAS,EAAK0G,iBAAiBlG,mBAC3BztC,OAHA,uBAIN,EAAK0iC,SAAS6H,cAAc,0BAC5B,EAAKmC,eAAevxB,OALd,iCASNy4B,EAAc3G,EAAO7zB,OAAOxK,GAAMA,EAAK+iC,OAAO3xC,OAAS,EACvDkwC,EAAY,GAUbA,EARC0D,EAQW3G,EAAO7zB,OAAOxK,GAAMA,EAAK+iC,OAAOpgC,IAAI3C,GAAM,GAAF,OAAKA,EAAI,cAAT,gBAAmCA,EAAI,WAAvC,MAPxCq+B,EAAO17B,IAAI3C,GAChBA,EAAI,cACG,GAAN,OAAUA,EAAI,cAAd,gBAAwCA,EAAI,WAA5C,KACG,WAAYA,EAAI,MAAhB,iBAAoCA,EAAI,MAAxC,MASRmJ,EAAYyX,GAAMK,mBAClBzuB,EA1BI,iBA0BY8uC,EAAUjwC,KAAK,KA1B3B,iBA0BwC,EAAKyiC,SAASkI,oBAAoB7yB,UA1B1E,eA0B0FA,EA1B1F,eA2BJ,EAAK2qB,SAASoI,MAAM,CAAC/yB,YAAU3W,QA3B3B,QA4BV,EAAKsrC,eAAevxB,OACpB,EAAKunB,SAAS8J,wBA7BJ,4CAnBwD,KAmDrEqH,cAnDqE,sBAmDrD,oCAAArxC,EAAA,yDACb,EAAKkqC,eAAexxB,QACd+xB,EAAS,EAAK6G,gBAAgBrG,kBAC9BsG,EAAgB,EAAKrR,SAASJ,aAAakI,OAAOyC,OAAO17B,IAAI3C,GAAM,IAAF,OAAOA,EAAK7I,KAAZ,MAElD,IAAlBknC,EAAOjtC,OALG,uBAMT,EAAK0iC,SAAS6H,cAAc,0BAC5B,EAAKmC,eAAevxB,OAPX,iCAUP+0B,EAAYruC,OAAO0M,KAAK0+B,GAAQ7zB,OAAOW,GAClCA,IAAUkzB,EAAOlzB,IACzBxI,IAAI3C,GACG,IAAN,OAAYA,EAAZ,iBAA2Bq+B,EAAOr+B,GAAlC,MAKEmJ,EAAYyX,GAAMK,mBAClBzuB,EAnBO,iBAmBS2yC,EAAchU,OAAOmQ,GAAWjwC,KAAK,KAnB9C,iBAmB2D,EAAKyiC,SAASkI,oBAAoB7yB,UAnB7F,eAmB6GA,EAnB7G,eAoBP,EAAK2qB,SAASoI,MAAM,CAAC/yB,YAAU3W,QApBxB,QAqBb,EAAKsrC,eAAevxB,OACpB,EAAKunB,SAAS8J,wBAtBD,8C,GClD0DlqC,IAAYC,aAAZ,uCAAyB,WAAOrD,GAAP,iBAAAsD,EAAA,6DAC/FyqC,EAAS/tC,EAAOuD,KAAKwqC,OACrB+G,EAAgB90C,EAAOuI,QAAQusC,cAAc56B,OAAOxK,GAAQq+B,IAAWr+B,EAAKmL,OAFmB,kBAG9F,CACHtX,KAAM,CACFuxC,mBAL6F,2CAAzB,uDAAxDC,G,GAATtxC,QAA2CuxC,G,GAARh1C,O,GCCwBoD,IAAYC,aAAZ,uCAAyB,WAAOrD,GAAP,eAAAsD,EAAA,6DACzFwxC,EAAgB90C,EAAOuD,KAAKwqC,OAAO17B,IAAIwI,IAClC,CAACA,WAFmF,kBAKxF,CACHtX,KAAM,CACFuxC,mBAPuF,2CAAzB,uDAAlDG,G,GAATxxC,QAAwCyxC,G,GAARl1C,OC4ChCm1C,OA7Cf,MACK,aAAmBn1C,EAAQo1C,EAAeC,GAAS,OAAD,6HAClBr1C,EAAOuD,KAA5BigC,EADuC,EACvCA,SAAUv1B,EAD6B,EAC7BA,OACVqnC,EAA+Bt1C,EAAOuI,QAAtC+sC,6BACF7oC,EAAM2oC,EAAcnnC,IAHqB,uBAK3CqnC,EAA2B,CACvBrsC,KAAM,WACN1F,KAAM,CACF6X,SAAS,KAR0B,kBAWpC,CACH7X,KAAK,2BACEvD,EAAOuD,MADV,IAEA7B,MAAO+K,EACP2O,SAAS,MAf0B,gBAoBpBi6B,EAAO7R,EAAUv1B,GAApC4K,EApBuC,EAoBvCA,UAAW3W,EApB4B,EAoB5BA,IApB4B,SAsB1BshC,EAASoI,MAAM,CAChC/yB,YACA3W,QAxB2C,cA0BhC,MA1BgC,QA2B3CshC,EAAS8J,wBAEbgI,EAA2B,CACvBrsC,KAAM,WACN1F,KAAM,CACF6X,SAAS,KAhC8B,kBAmCxC,CACH7X,KAAK,2BACEvD,EAAOuD,MADV,IAEA6X,SAAS,MAtC8B,gD,SCCMhY,IAAYC,aAAZ,uCAAyB,WAAOrD,GAAP,SAAAsD,EAAA,+EAC3E6xC,GAAiBvJ,MAAM5rC,EACzBiO,IACG,GAAmC,IAA/BtL,OAAO0M,KAAKpB,GAAQnN,OACpB,MAAO,iDAKf,CAAC0iC,EAAUv1B,KACP,MAAM4K,EAAYyX,GAAMK,mBAClB4kB,EAAgB5yC,OAAO0M,KAAKpB,GAAQoE,IAAIjH,GACpC,QAAN,OAAeklB,GAAMuB,SAASzmB,GAA9B,eAAyC6C,EAAO7C,GAAhD,gBAA4DklB,GAAMuB,SAASzmB,KAGzE4lC,EAAYruC,OAAO0M,KAAKpB,GAExBunC,EADShS,EAASJ,aAAakI,OAAOyC,OACf7zB,OAAOxK,IACxBshC,EAAU52B,SAAS1K,EAAK7I,OACjCwL,IAAI3C,GACI4gB,GAAMuB,SAASniB,EAAK7I,OAGzB4uC,EAAaF,EAAc1U,OAAO2U,GAAgBz0C,KAAK,KAI7D,MAAO,CAAE8X,YAAW3W,IAFX,iBAAauzC,EAAb,iBAA+BjS,EAASkI,oBAAoB7yB,UAA5D,wCACJA,EADI,SAzBiE,2CAAzB,uDAAvC68B,G,GAARjyC,QAAiCkyC,G,GAAP31C,OCCxC,MAAM41C,OACKC,UAAY,WADjBD,GAEKE,aAAe,cAE1B,MAAMC,GAAkB,2BACjB1a,IADiB,IAEpB,CAACua,GAAsBC,WAAYZ,GACnC,CAACW,GAAsBE,cAAef,GACtCnJ,MAAO8J,KAELM,GAAiB,2BAChB1a,IADgB,IAEnB,CAACsa,GAAsBC,WAAYX,GACnC,CAACU,GAAsBE,cAAed,GACtCpJ,MAAO+J,KAGX,SAASM,GAAkBjtC,EAAOhJ,GAClC,OAAOg2C,GAAkBh2C,EAAOiJ,MAAMD,EAAOhJ,EAAOuD,M,SCrBiBH,IAAYC,aAAZ,uCAAyB,WAAOrD,GAAP,eAAAsD,EAAA,6DACnFkgC,EAAYxjC,EAAOuD,KAAnBigC,SADmF,SAEpFA,EAASmI,WAF2E,gCAGnF,CACHpoC,KAAMvD,EAAOuD,OAJyE,2CAAzB,uDAA/C2yC,G,GAARzyC,QAAqC0yC,G,GAAPn2C,O,GCAiBoD,IAAYC,aAAZ,uCAAyB,WAAOrD,GAAP,qBAAAsD,EAAA,yDAC3EkgC,EAAYxjC,EAAOuD,KAAnBigC,SAD2E,EAEvCxjC,EAAOuI,QAA3C6tC,EAF2E,EAE3EA,mBAAmBC,EAFwD,EAExDA,cAFwD,yCAGxD,CACtB9yC,KAAK,CAAC7B,MAAM,4BAJkE,uBAM5E8hC,EAAS0I,KAAKmK,EAAcD,GANgD,cAOlF5S,EAAS+J,uBAPyE,kBAQ3E,CACHhqC,KAAK,2BAAKvD,EAAOuD,MAAb,IAAkB6X,SAAQ,MATgD,2CAAzB,uDAAvCk7B,G,GAAR7yC,QAAiC8yC,G,GAAPv2C,OCGxC,MAAMw2C,GAA4B,CAC9B1tC,SAAUtF,wBACVmoC,SAAUuK,GACVhK,KAAMoK,IAGV,SAASG,GAAyBztC,EAAOhJ,GACrC,OAAQA,EAAOiJ,MACX,IAAK,WACD,OAAOvF,yBAAesF,EAAOhJ,EAAOuD,MACxC,IAAK,WACD,OAAO4yC,GAAentC,EAAOhJ,EAAOuD,MACxC,IAAK,OACD,OAAOgzC,GAAWvtC,EAAOhJ,EAAOuD,MACpC,QACI,OAAOyF,GCXnB,MAAMyE,GAAY,CACdo/B,aAAa,EACbuJ,oBAAoB,EACpBh7B,SAAS,EACTi7B,mBAAer1C,EACfU,WAAOV,GAGL01C,GAA2BrtC,IAAMC,gBAEvC,SAASqtC,GAAkBntC,GAEvB,MAAMg6B,EAAWh6B,EAAMg6B,UAAY0E,GAAiB1E,SACjCoT,EAAoB/sC,qBAAWL,EAAMqtC,SAAhDjtC,UAHsB,EAIHiE,0BAAgB4oC,GAA0BhpC,GAAW+oC,IAJlD,mBAIvBxtC,EAJuB,KAIhBY,EAJgB,KAKtBijC,EAAmD7jC,EAAnD6jC,YAAiCzxB,GAAkBpS,EAAtCotC,mBAAsCptC,EAAlBoS,SAAQ1Z,EAAUsH,EAAVtH,MACjD,OACI,kBAACg1C,GAAyBhsC,SAA1B,CAAmCoD,MAAO,CAAElE,cAEpClI,GAAS,kBAAC,GAAD,CAAU6L,QAAS7L,IAEhC,kBAAC,KAAD,CAAOiJ,MAAO,OACVC,QAASiiC,EACThiC,SACI,KACIjB,EAAU,CACNX,KAAM,WACN1F,KAAM,CAAEspC,aAAa,MAIjC/hC,KAAM,KACFlB,EAAU,CACNX,KAAM,OACN1F,KAAM,CACFspC,aAAa,EACbrJ,eAIZx4B,WAAW,SACX8F,MAAM,MACNL,OAAO,MACP,kBAAC,IAAD,CAAM1C,UAAU,cACZ,kBAAC,IAAKrC,KAAN,KAAW,kBAAC,IAAD,CAAO4nB,YAAY,YAAYnW,SAAWrP,IACjDlE,EAAU,CACNX,KAAM,WACN1F,KAAM,CAAE8yC,cAAevoC,EAAM2M,OAAO3M,UAEzCylB,YAAY,MACf,kBAAC,IAAK7nB,KAAN,CAAWwC,MAAM,mCAAkC,kBAAC,KAAD,CAAQiP,SACtDuZ,IACG9sB,EAAU,CACNX,KAAM,WACN1F,KAAM,CAAE6yC,mBAAoB1f,WAMhD,kBAAC,IAAD,CAAQtb,QAASA,EAASnS,KAAK,UAAUkC,QACrC,KACIvB,EAAU,CACNX,KAAM,WACN1F,KAAM,CACF6X,SAAS,KAGjBw7B,EAAgB,CACZ3tC,KAAM,WACN1F,KAAM,CAAE+xC,2BAA4B1rC,EAAUktC,WAAWxmB,GAAMO,kBAV3E,SAcA,kBAAC,KAAD,CAAS5nB,KAAK,aACd,kBAAC,IAAD,CAAQoiB,SAAUjQ,EAASjQ,QAAS,KAChCvB,EAAU,CACNX,KAAM,WACN1F,KAAM,CACFspC,aAAa,OAJzB,WAQA,kBAAC,KAAD,CAAS5jC,KAAK,aACd,kBAAC,IAAD,CAAQoiB,SAAUjQ,EAASjQ,QAAS,KAChCvB,EAAU,CACNX,KAAM,WACN1F,KAAM,CAAE6X,SAAS,KAErBxR,EAAU,CACNX,KAAM,WACN1F,KAAM,CAAEigC,WAAUpoB,SAAS,OAPnC,a,MCvFJmK,GAAWC,KAAXD,OAGF9X,GAAY,CACd/L,WAAOV,EAEPs0C,gCAA4Bt0C,EAC5B8zC,cAAc,IAGZiC,GAAoB1tC,IAAMC,gBAEhC,SAAS0tC,GAAWxtC,GAAQ,MACjBg6B,EAAYh6B,EAAZg6B,SADgB,EAERlD,IAAKC,UAAbzE,EAFgB,oBAGjBiS,EAASvK,EAASJ,aAAakI,OAAOyC,OAHrB,EAIIlgC,0BAAgBooC,GAAmBxoC,GAAWsoC,IAJlD,mBAIhB/sC,EAJgB,KAITY,EAJS,KAKfkrC,EAAmD9rC,EAAnD8rC,cAAepzC,EAAoCsH,EAApCtH,MAAM4zC,EAA8BtsC,EAA9BssC,2BACvBhkB,EAAWyc,EAAO17B,IAAI3C,GACjB,kBAAC,GAAD,CAAQtE,IAAKsE,EAAK7I,MAAO6I,EAAK7I,OASzC,OANA4D,oBAAU,KACH6qC,GACCxZ,EAAKmb,UAEX,CAAC3B,IAGC,kBAACyB,GAAkBrsC,SAAnB,CAA4BoD,MAAO,CAAElE,cACjC,yBAAK+B,MAAO,CAAEurC,UAAW,OAAQ,MAAS,UAElCx1C,GAAS,kBAAC,GAAD,CAAU6L,QAAS7L,IAEhC,kBAAC,IAAD,CAAMo6B,KAAMA,EAAM9tB,SAAWC,IACzBrE,EAAU,CACNX,KAAM,QACN1F,KAAM,CACFigC,WACAv1B,aAGTF,UAAU,cACT,kBAAC,IAAKrC,KAAN,KACI,kBAACirC,GAAD,CAAmBE,QAASE,GAAmBvT,SAAUA,KAE7D,kBAAC,IAAK93B,KAAN,CAAWwC,MAAM,iBACb,kBAAC,KAAD,CACIzC,KAAK,WACL0rC,WAAYrpC,IACRlE,EAAU,CACNX,KAAM2sC,GAAsBE,aAC5BvyC,KAAM,CAAEwqC,OAAQjgC,MAGxBqP,SAAWrP,IACPlE,EAAU,CACNX,KAAM2sC,GAAsBC,UAC5BtyC,KAAM,CAAEwqC,OAAQjgC,OAIvBwjB,IAIRwjB,EAAcziC,IAAI3C,GACR,kBAAC,IAAKhE,KAAN,CAAWN,IAAKsE,EAAKmL,MAAO3M,MAAK,eAAUwB,EAAKmL,MAAf,OAA2BhU,KAAM6I,EAAKmL,OAC1E,kBAAC,KAAD,KACI,kBAAC,KAAO0K,OAAR,CAAezX,MAAM,OAArB,OACA,kBAAC,KAAOyX,OAAR,CAAezX,MAAM,QAArB,QACA,kBAAC,KAAOyX,OAAR,CAAezX,MAAM,UAArB,UACA,kBAAC,KAAOyX,OAAR,CAAezX,MAAM,UAArB,gBC9EhC,MAAMspC,OACKvB,UAAY,WADjBuB,GAEKtB,aAAe,cAFpBsB,GAGKC,MAAQ,QAHbD,GAIKtuC,SAAW,W,qBCCdyc,GAAWC,KAAXD,OAGR,SAAS+xB,GAAa9tC,GAAQ,MAAD,EACV82B,IAAKC,UAAbzE,EADkB,oBAElB+a,EAAoBrtC,EAApBqtC,QAAQU,EAAY/tC,EAAZ+tC,SACR3tC,EAAaC,qBAAWgtC,GAAxBjtC,UAIP,OAHAa,oBAAU,KACNjB,EAAMguC,MAAM52C,KAAKk7B,IACnB,IAEE,kBAAC,IAAD,CAAM2b,OAAO,SAAS3b,KAAMA,EAAMnwB,MAAO,CAACmQ,aAAa,SACvD,kBAAC,IAAKpQ,KAAN,KACI,kBAAC,IAAD,CAAQwjC,QAAM,EAACrjC,KAAM,kBAAC6rC,GAAA,EAAD,MAAmBvsC,QAAS,KAC7CvB,EAAU,CACNX,KAAMmuC,GAAkBtB,aACxBvyC,KAAM,CAACu4B,cAInB,kBAAC,IAAKpwB,KAAN,CAAWwC,MAAO,kBAAC,IAAD,CAAkBnC,GAAG,QAASlF,KAAM,OAAQ8E,MAAO,CAAEmF,MAAO,UAC1E,kBAAC,KAAD,KACKymC,EAASllC,IAAI3C,GAAQ,kBAAC,GAAD,CAAQtE,IAAKsE,GAAOA,MAGlD,kBAAC,IAAKhE,KAAN,CAAWwC,MAAO,kBAAC,IAAD,CAAkBnC,GAAG,OAAQlF,KAAM,SAAU8E,MAAO,CAAEmF,MAAO,UAC3E,kBAAC,IAAD,Q,SCzByD1N,IAAYC,aAAZ,uCAAyB,WAAOrD,GAAP,qBAAAsD,EAAA,+DACvDtD,EAAOuI,QAAnCovC,EADmF,EACnFA,UAAUJ,EADyE,EACzEA,SAASC,EADgE,EAChEA,MAC1BG,EAAU/2C,KAAK,kBAAC02C,GAAD,CAAclsC,IAAKklB,GAAMO,aAAcgmB,QAASe,GAAmBL,SAAUA,EAAUC,MAAOA,KAFnB,kBAGnF,CACHj0C,KAAM,CACFo0C,eALkF,2CAAzB,uDAA/C1C,G,GAARxxC,QAAqCyxC,G,GAAPl1C,O,GCJoCoD,IAAYC,aAAZ,uCAAyB,WAAOrD,GAAP,uBAAAsD,EAAA,6DAC7Fw4B,EAAS97B,EAAOuD,KAAhBu4B,KAD6F,EAExE97B,EAAOuI,QAA5BivC,EAF6F,EAE7FA,MAAOG,EAFsF,EAEtFA,UACTE,EAAaL,EAAM3kB,QAAQiJ,GACjC0b,EAAM5pB,OAAOiqB,EAAY,GACzBF,EAAU/pB,OAAOiqB,EAAY,GALwE,kBAM9F,CACHt0C,KAAM,CACFi0C,QACAG,eAT6F,2CAAzB,uDAAxD5C,G,GAATtxC,QAA2CuxC,G,GAARh1C,O,GCGiCoD,IAAYC,aAAZ,uCAAyB,WAAOrD,GAAP,SAAAsD,EAAA,+EACjG6xC,GAAiBvJ,MAAM5rC,EACzBiO,IAAY,MACF6pC,EAA2B7pC,EAA3B6pC,WACP,IADkC7pC,EAAhB8pC,cACyB,IAAtBD,EAAWh3C,OAC5B,MAAO,4CAIf,CAAC0iC,EAAUv1B,KACP,MAAM4K,EAAYyX,GAAMK,mBAEjBmnB,EAA2B7pC,EAA3B6pC,WAAWC,EAAgB9pC,EAAhB8pC,aACZC,EAAUF,EAAWzlC,IAAI3C,GACrB,mBAAN,OAA0B4gB,GAAMuB,SAASkmB,GAAzC,aAA2DroC,EAAK/H,KAAhE,iBAA6E2oB,GAAMuB,SAASniB,EAAKmI,UAClG9W,KAAK,KAIR,MAAO,CAAE8X,YAAW3W,IAFX,mBAAe81C,EAAf,iBAA+BxU,EAASkI,oBAAoB7yB,UAA5D,wCACJA,EADI,SAjBuF,2CAAzB,uDAA7Do/B,G,GAARx0C,QAA4Cy0C,G,GAAPl4C,OCKnD,MAAMm4C,GAAkB,2BACjB9c,IADiB,IAEpB,CAAC+b,GAAkBvB,WAAYZ,GAC/B,CAACmC,GAAkBtB,cAAef,GAClC,CAACqC,GAAkBC,OAAQY,KAEzBG,GAAiB,2BAChB9c,IADgB,IAEnB,CAAC8b,GAAkBvB,WAAYX,GAC/B,CAACkC,GAAkBtB,cAAed,GAClC,CAACoC,GAAkBC,OAAQa,KAG/B,SAASG,GAAkBrvC,EAAOhJ,GAClC,OAAOo4C,GAAkBp4C,EAAOiJ,MAAMD,EAAOhJ,EAAOuD,M,qBCZ5CgiB,GAAWC,KAAXD,OAGF9X,GAAY,CACd/L,WAAOV,EAEPs0C,gCAA4Bt0C,EAC5B+2C,kBAAc/2C,EACdu2C,SAAU,GACVC,MAAO,GACPG,UAAW,IAGTC,GAAoBvuC,IAAMC,gBAEhC,SAASgvC,GAAW9uC,GAChB,MAAMg6B,EAAW0E,GAAiB1E,SADX,EAERlD,IAAKC,UAAbzE,EAFgB,oBAGjBiS,EAASvK,EAASJ,aAAakI,OAAOyC,OACtCxqC,EAAOigC,EAASJ,aAAa7/B,KAAK2tB,MAAM,EAAG,IAJ1B,EAMIrjB,0BAAgBwqC,GAAmB5qC,GAAW0qC,IANlD,mBAMhBnvC,EANgB,KAMTY,EANS,KAOfmuC,EAMJ/uC,EANI+uC,aAEJr2C,GAIAsH,EALAuuC,SAKAvuC,EAJAtH,OACA4zC,EAGAtsC,EAHAssC,2BACAkC,EAEAxuC,EAFAwuC,MACAG,EACA3uC,EADA2uC,UAEErmB,EAAWyc,EAAO17B,IAAI3C,GACjB,kBAAC,GAAD,CAAQtE,IAAKsE,EAAK7I,MAAO6I,EAAK7I,OAGzC4D,oBAAU,KACN,GAAIstC,EAAc,CACdnuC,EAAU,CACNX,KAAMmuC,GAAkBtuC,SACxBvF,KAAK,CACDo0C,UAAU,GACVH,MAAO,MAIf,MAAMz0C,EAAO,IAAIivB,IACXumB,EAAWh1C,EAAK8O,IAAI3C,IACtB,IACI,OAAOnI,KAAKM,MAAM6H,EAAKqoC,IAC1B,MAAMjwC,GACH,UAELoS,OAAOxK,QAAiB1O,IAAT0O,IACI,kBAAVA,GAAuC,iBAAVA,IAEzCyC,QAAQC,IAAImmC,GAEZA,EAAS9oC,QAAQ+oC,IACbloB,GAAMI,QAAQ,IAAK8nB,EAAMptC,IACrBrI,EAAK0sB,IAAIrkB,OAIjBxB,EAAU,CACNX,KAAMmuC,GAAkBtuC,SACxBvF,KAAM,CAAEg0C,SAAU,IAAIx0C,QAG/B,CAACg1C,IAEJttC,oBAAU,KACF6qC,GACAxZ,EAAKmb,UAEV,CAAC3B,IAEUpW,sBAAY,EAAEsE,WAASv1B,SAAOupC,YACvCrlC,QAAQC,IAAInE,GACZkE,QAAQC,IAAIolC,EAAMnlC,IAAI3C,GACXA,EAAKs2B,mBAEhBsP,EAA2B1rC,UAAU,CACjCX,KAAK,WACL1F,KAAK,CAAC6X,SAAQ,MAErB,CAACk6B,IAEH,OACI,kBAACsC,GAAkBltC,SAAnB,CAA4BoD,MAAO,CAAElE,cACjC,yBAAK+B,MAAO,CAAEurC,UAAW,OAAQ,MAAS,UAElCx1C,GAAS,kBAAC,GAAD,CAAU6L,QAAS7L,IAEhC,kBAAC,IAAD,CAAMo6B,KAAMA,EAAM9tB,SAAWC,IACzB,MAAM6pC,EAAaN,EAAMnlC,IAAI3C,GAAMA,EAAKs2B,kBACxCp8B,EAAU,CACNX,KAAM,QACN1F,KAAM,CACFigC,WACAv1B,OAAQ,CAAC6pC,aAAWC,oBAG7BhqC,UAAU,cACT,kBAAC,IAAKrC,KAAN,KACI,kBAACirC,GAAD,CAAmBE,QAASe,GAAmBpU,SAAUA,KAE7D,kBAAC,IAAK93B,KAAN,CAAWwC,MAAO,kBAAC,IAAD,CAAkBnC,GAAG,sBAAuBJ,MAAO,CAAEmF,MAAO,UAC1E,kBAAC,KAAD,CACIqM,SAAWrP,IACPlE,EAAU,CACNX,KAAMmuC,GAAkBtuC,SACxBvF,KAAM,CAAEw0C,aAAcjqC,OAI7BwjB,KAKTymB,GAAgB,kBAAC,IAAD,CAAMptC,MAAO,kBAAC,IAAD,CAAQkB,KAAM,kBAAC4sC,GAAA,EAAD,MAAkBttC,QAAS,KAClEvB,EAAU,CACNX,KAAMmuC,GAAkBvB,UACxBtyC,KAAM,SAINo0C,K,MC3HpBj7B,GAAYC,KAAZD,QAEO,MAAMg8B,WAAuB1V,GAAI35B,aAAiBu5B,KAAKuK,GAAgBiH,KAClF/0C,YAAYmK,GACRoF,MAAMpF,GACN/J,KAAK+jC,SAAWh6B,EAAM4M,OAAOotB,SAIjCx0B,SACI,OAAQ,uBAAKjB,UAAW,gBAChB,gBAAC,KAAD,CAAMsP,iBAAiB,IAAItP,UAAW,gBAClC,gBAAC,GAAD,CAASyP,IAAK,gBAAC,IAAD,CAAkBzR,GAAG,mBAAoBX,IAAI,KAC3D,gBAAC,GAAD,CAAagL,OAAQ3W,KAAMytC,WAAYztC,KAAKytC,WAAYH,aAActtC,KAAKstC,aAAcD,iBAAkBrtC,KAAKqtC,iBAAkB71B,IAAMwG,GAAKhe,KAAK+tC,eAAe/vB,EAAIuvB,OAAQvtC,KAAKutC,OAAQC,QAASxtC,KAAK40C,cAAe1oC,MAAO,CAACmQ,aAAa,UACxO,gBAAC,GAAD,CAAc0yB,aAAc/uC,KAAK+jC,SAASJ,aAAakI,OAAOyC,OAAQ92B,IAAMwG,GAAKhe,KAAK60C,gBAAgB72B,EAAIrH,OAAQ3W,QAEtH,gBAAC,GAAD,CAAS+d,IAAK,gBAAC,IAAD,CAAkBzR,GAAG,mBAAoBX,IAAI,KAC3D,gBAAC,GAAD,CAAagL,OAAQ3W,KAAMytC,WAAYztC,KAAKytC,WAAaH,aAActtC,KAAKstC,aAAcD,iBAAkBrtC,KAAKqtC,iBAAkB71B,IAAMwG,GAAKhe,KAAK+tC,eAAe/vB,EAAIuvB,OAAQvtC,KAAKutC,OAAQC,QAASxtC,KAAKk1C,cAAehpC,MAAO,CAACmQ,aAAa,UACzO,gBAAC,GAAD,CAAc0yB,aAAc/uC,KAAK+jC,SAASJ,aAAakI,OAAOyC,OAAQ92B,IAAMwG,GAAKhe,KAAKm1C,gBAAgBn3B,EAAIrH,OAAQ3W,QAEtH,gBAAC,GAAD,CAAS+d,IAAK,gBAAC,IAAD,CAAkBzR,GAAG,sBAAuBX,IAAI,KAC3D,gBAAC,GAAD,CAAagL,OAAQ3W,KAAMytC,WAAYztC,KAAKytC,WAAaH,aAActtC,KAAKstC,aAAcD,iBAAkBrtC,KAAKqtC,iBAAkB71B,IAAMwG,GAAKhe,KAAK+tC,eAAe/vB,EAAIuvB,OAAQvtC,KAAKutC,OAAQC,QAASxtC,KAAK+0C,YAAa7oC,MAAO,CAACmQ,aAAa,UAC3O,gBAAC,GAAD,CAAgB0yB,aAAc/uC,KAAK+jC,SAASJ,aAAakI,OAAOyC,OAAQ92B,IAAMwG,GAAKhe,KAAKg1C,iBAAiBh3B,EAAIrH,OAAQ3W,QAExH,gBAAC,GAAD,CAAS+d,IAAK,gBAAC,IAAD,CAAkBzR,GAAG,sBAAuBX,IAAI,KAC3D,gBAAC4rC,GAAD,CAAYxT,SAAU/jC,KAAK+jC,YAE9B,gBAAC,GAAD,CAAShmB,IAAK,gBAAC,IAAD,CAAkBzR,GAAG,gBAAiBX,IAAI,KACrD,gBAACktC,GAAD,UCrCvB,MAAMK,GAAkB,CACpBC,MAAO,IACPC,UAAW,KACXC,GAAI,KACJC,SAAU,WACVC,YAAa,aACbC,UAAW,WACXC,KAAM,OACNC,QAAS,UACTC,YAAa,cACbC,SAAU,WACVC,aAAc,gBA0DlB,SAASC,GAAgB/vC,GAAQ,MACrB+Q,EAAqB/Q,EAArB+Q,OAAQipB,EAAah6B,EAAbg6B,SADY,EAEEz5B,wBAAS/I,GAFX,mBAErBw4C,EAFqB,KAEZC,EAFY,KAGV5+B,GAAUN,EAApBzG,SAAoByG,EAAVM,OAHU,EAIU9Q,mBAAS,IAJnB,mBAIrB2vC,EAJqB,KAIRC,EAJQ,OAKwB5vC,oBAAS,GALjC,mBAKrB6vC,EALqB,KAKDC,EALC,OAMbvZ,IAAKC,UAAbzE,EANqB,oBAO5BtyB,EAAMguC,MAAM38B,GAASihB,EAErB,MAAMv6B,EAAK,uCAAG,4BAAA+B,EAAA,yDACiB,IAAvBo2C,EAAY54C,QAA4B,OAAZ04C,EADtB,uBAENK,GAAsB,GAFhB,SAIarW,EAASuI,qBAAT,0BAAiDzb,GAAMuB,SAAShX,GAAhE,wCACZ2oB,EAASkI,oBAAoB7yB,UADjB,6BAEdyX,GAAMK,mBAFQ,KAEc,CAACgB,WAAY,IAAMzwB,QAAS,MANvD,OAQa,OAJbc,EAJA,QAQE1C,QACJq6C,EAAe33C,EAAIzC,QAAQgE,MAE/Bs2C,GAAsB,GAXhB,2CAAH,qDAeXpvC,oBAAU,KACNlJ,KACD,CAACi4C,IA0DJ,OAlCW,kBAAC,IAAD,CAAM1d,KAAMA,EAAM2b,OAAQ,UAC7B,kBAAC,IAAK/rC,KAAN,CAAW7E,KAAK,UAAUkjC,aAAcxvB,EAAOi/B,SAC3C,kBAAC,KAAD,CAAQzP,aAAc,IAClB5sB,SAAWrP,IACP2rC,EAAW3rC,GACXyM,EAAOi/B,QAAU1rC,GAErBylB,YAAY,UAAU5nB,MAAO,CAACmF,MAAM,UACpC,kBAAC,KAAOyU,OAAR,CAAezX,MAAM,KAArB,KACA,kBAAC,KAAOyX,OAAR,CAAezX,MAAM,KAAK,KAC1B,kBAAC,KAAOyX,OAAR,CAAezX,MAAM,KAAK,KAC1B,kBAAC,KAAOyX,OAAR,CAAezX,MAAM,MAAM,MAC3B,kBAAC,KAAOyX,OAAR,CAAezX,MAAM,MAAM,MAC3B,kBAAC,KAAOyX,OAAR,CAAezX,MAAM,MAAM,MAC3B,kBAAC,KAAOyX,OAAR,CAAezX,MAAO6qC,GAAgBO,MAAO,QAC7C,kBAAC,KAAO3zB,OAAR,CAAezX,MAAO6qC,GAAgBK,aAAc,cACpD,kBAAC,KAAOzzB,OAAR,CAAezX,MAAO6qC,GAAgBM,WAAY,YAClD,kBAAC,KAAO1zB,OAAR,CAAezX,MAAO6qC,GAAgBG,IAAK,MAC3C,kBAAC,KAAOvzB,OAAR,CAAezX,MAAO6qC,GAAgBQ,SAAU,WAChD,kBAAC,KAAO5zB,OAAR,CAAezX,MAAO6qC,GAAgBS,aAAc,eACpD,kBAAC,KAAO7zB,OAAR,CAAezX,MAAO6qC,GAAgBU,UAAW,YACjD,kBAAC,KAAO9zB,OAAR,CAAezX,MAAO6qC,GAAgBW,cAAe,kBAG7D,kBAAC,IAAK5tC,KAAN,CAAW7E,KAAK,YAAYkjC,aAAcxvB,EAAOiP,UAAWrM,SAAWrP,IAE/DyM,EAAOiP,UADS,kBAAV1b,EACaA,EAAM2M,OAAO3M,MACXA,IAjDnB,MACd,OAAQ0rC,GACJ,KAAKb,GAAgBQ,QAErB,KAAKR,GAAgBS,YACjB,OAAO,qCACX,KAAKT,GAAgBG,GACjB,OAAO,kBAAC,KAAD,CAAQ19B,QAASw+B,EAAoBnuC,KAAK,OAAOE,MAAO,CAAEmF,MAAO,UACnE4oC,EAAYrnC,IAAI3C,GACN,kBAAC,KAAO6V,OAAR,CAAena,IAAKsE,EAAK7I,KAAMiH,MAAO4B,EAAK7I,MAAO6I,EAAK7I,QAI1E,KAAK8xC,GAAgBO,KACjB,OAAO,oCAAE,kBAAC,IAAD,CAAOvtC,MAAO,CAAEmF,MAAO,WAAa,2GAEjD,QACI,OAAO,kBAAC,IAAD,CAAOnF,MAAO,CAAEmF,MAAO,aAmC7B0Y,KCtJF,MAAMswB,WAAgBzwC,YACjChK,YAAYmK,GACRoF,MAAMpF,GADS,KAQnB8R,OAAU/X,IACN9D,KAAKqJ,SAAL,eAAmBrJ,KAAKkgB,IAAIpc,MATb,KAYnBoc,IAAO6uB,IAiCI,CAAEqE,WAAW,EAAOtvC,KAhCZirC,EACKn8B,IAAI3C,IACb,CAAEtE,IAAKsE,EAAK7I,KAAMgU,MAAOnL,EAAK7I,KAAMiN,SAAUpE,EAAKzG,KAAMuwC,QAAS,IAAKhwB,UAAW,GAAIuwB,QAAS,MA8BzEjqC,QA3BjB,CACZ,CACInF,MAAO,QACPgF,UAAW,SAEf,CACIhF,MAAO,WACPgF,UAAW,WACXX,OAAQ,CAAClB,EAAOyM,KAEZ,cAAgBzM,GACZ,IAAK,SACD,OAAO,4BAAOA,EAAM7E,MACxB,QACI,OAAO,4BAAO6E,MAI9B,CACInD,MAAO,GACPgF,UAAW,UACXX,OAAQ,CAAClB,EAAOyM,IACL,gBAACg/B,GAAD,CAAiB/B,MAAO/3C,KAAK+3C,MAAOj9B,OAAQA,EAAQipB,SAAW/jC,KAAK+jC,eAxCxE,KAgDnBwW,kBAAoB,KAChB,MAAMC,EAAkB,GACxBx6C,KAAKuJ,MAAMzF,KAAKkM,QAAQC,IACpBuqC,EAAgBvqC,EAAKmL,OAASnL,EAAKoE,WAGvC,MAAM7T,EAAS0C,OAAOw3B,QAAQ16B,KAAK+3C,OAAOnlC,IAAI,EAAEjH,EAAI0C,MAAU,MAAD,EAC7BA,EAAMk4B,iBAA3BwT,EADkD,EAClDA,QAAQhwB,EAD0C,EAC1CA,UACf,OAAGgwB,EACQ,CAAC3+B,MAAMzP,EAAIouC,UAAQhwB,YAAU1V,SAASmmC,EAAgB7uC,IAE1D,KAEX,OAAI3L,KAAKy6C,gBAGFj6C,EAAOia,OAAOxK,GAAQjQ,KAAKy6C,gBAAgB9/B,SAAS1K,EAAKmL,QAFrD,IA9DI,KAmEnBs/B,SAAYlsC,IAAY,MACZmsC,EAAyBnsC,EAAzBmsC,UAAWC,EAAcpsC,EAAdosC,UACnB,IAAKD,IAAcC,EAEf,YADA56C,KAAK+jC,SAAS+Q,SAAS,+CAG3B,IAAI90C,KAAKy6C,gBAEL,YADAz6C,KAAK+jC,SAAS+Q,SAAS,wBAI3B,MAAM+F,EAAe76C,KAAKu6C,oBAE1Bv6C,KAAK86C,cAAcC,UAAUJ,GAAa,CAAEA,YAAWC,YAAW1W,GAAI,QAASpgC,KAAM+2C,GACjF76C,KAAK86C,cAAcE,YACnBh7C,KAAK86C,cAAcE,WAAWn/B,OAAO,CAAE/X,KAAM9D,KAAK86C,cAAcC,YAEhE/6C,KAAK86C,cAAcG,YACnBj7C,KAAK86C,cAAcG,WAAWp/B,OAAO,CAAE/X,KAAM9D,KAAK86C,cAAcC,YAEpE/6C,KAAK+jC,SAAS+Q,SAAS,qBAvFR,KA2FnBvlC,OAAS,KACL,MAAM2rC,EAAe,CACjBx9B,SAAU,CAAC+8B,EAAiBI,KACxB76C,KAAKy6C,gBAAkBA,GAE3BU,iBAAkBrgC,IAAM,CACpB1T,KAAM0T,EAAOM,SAGrB,OAAO,uBAAK9M,UAAU,yDAClB,uBAAKpC,MAAO,CAACioC,YAAY,OAAO9iC,MAAM,QACtC,gBAAC,GAAD,CAAasF,OAAQ3W,KAAMytC,WAAYztC,KAAK86C,cAAcrN,WAAYH,aAActtC,KAAK86C,cAAcxN,aAAcD,iBAAkBrtC,KAAK86C,cAAczN,iBAAkB71B,IAAMwG,GAAOhe,KAAK86C,cAAc/M,eAAiB/vB,EAAIuvB,OAAQvtC,KAAK86C,cAAcvN,OAAQC,QAAS,KACzQ,MAAMqN,EAAe76C,KAAKu6C,oBAC1Bv6C,KAAK86C,cAAcM,sBAAsBP,IAC1C3uC,MAAO,CAAEmQ,aAAc,UAC1B,gBAAC,KAAD,CAAOy0B,WAAY,CAACC,SAAS,EAAEsK,kBAAiB,GAChDH,aAAY,aACR1xC,KAAM,YACH0xC,GACJ7qC,QAASrQ,KAAKuJ,MAAM8G,QACnBU,WAAY/Q,KAAKuJ,MAAMzF,QAI3B,gBAAC,IAAD,CAAMyK,SAAUvO,KAAK06C,UACjB,gBAAC,IAAKzuC,KAAN,CAAW7E,KAAM,YAAaqH,MAAM,cAAa,gBAAC,IAAD,OACjD,gBAAC,IAAKxC,KAAN,CAAW7E,KAAM,YAAaqH,MAAM,aAAaklC,aAAc,OAAO,gBAAC,KAAD,KAClE,gBAAC,KAAO7tB,OAAR,CAAezX,MAAM,OAArB,OACA,gBAAC,KAAOyX,OAAR,CAAezX,MAAM,MAArB,QAEJ,gBAAC,IAAKpC,KAAN,KACI,gBAAC,IAAD,CAAQzC,KAAK,UAAUqF,SAAS,UAAhC,wCAxHZ7O,KAAK86C,cAAgB/wC,EAAM4M,OAC3B3W,KAAK+jC,SAAWh6B,EAAM4M,OAAOotB,SAC7B/jC,KAAKuJ,MAAQvJ,KAAKkgB,IAAInW,EAAMglC,cAC5B/uC,KAAK+3C,MAAQ,ICPN,MAAMuD,WAAmB1xC,YACpChK,YAAYmK,GACRoF,MAAMpF,GADS,KAOnB8R,OAAU/X,IACN9D,KAAKqJ,SAAL,eAAmBrJ,KAAKkgB,IAAIpc,MARb,KAWnBoc,IAAOnW,IAaI,CAAEqpC,WAAW,EAAOtvC,KAZZZ,OAAO0M,KAAK7F,EAAMjG,MAAM8O,IAAI3C,IAAiB,CAAE0qC,UAAW1qC,KAErD2C,IAAI3C,IACb,CAAEtE,IAAKsE,EAAK0qC,UAAWA,UAAW1qC,EAAK0qC,aASjBtqC,QANjB,CACZ,CACInF,MAAO,YACPgF,UAAW,gBArBJ,KA2BnBwqC,SAAYlsC,IAAY,MACZmsC,EAAyBnsC,EAAzBmsC,UAAWC,EAAcpsC,EAAdosC,UACnB,IAAKD,IAAcC,EAEf,YADA56C,KAAK+jC,SAAS+Q,SAAS,+CAG3B,MAAM+F,EAAe76C,KAAKy6C,gBAAgB7nC,IAAI+nC,GACnC36C,KAAK86C,cAAcC,UAAUJ,IAExC36C,KAAK86C,cAAcC,UAAUJ,GAAa,CAAEA,YAAWC,YAAW1W,GAAI,QAASpgC,KAAM+2C,GACjF76C,KAAK86C,cAAcE,YACnBh7C,KAAK86C,cAAcE,WAAWn/B,OAAO,CAAE/X,KAAM9D,KAAK86C,cAAcC,YAEhE/6C,KAAK86C,cAAcG,YACnBj7C,KAAK86C,cAAcG,WAAWp/B,OAAO,CAAE/X,KAAM9D,KAAK86C,cAAcC,YAEpE/6C,KAAK+jC,SAAS+Q,SAAS,qBA3CR,KA+CnBvlC,OAAS,KACL,MAAM2rC,EAAe,CACjBx9B,SAAU,CAAC+8B,EAAiBI,KACxB76C,KAAKy6C,gBAAkBA,GAE3BU,iBAAkBrgC,IAAM,CACpB1T,KAAM0T,EAAO5P,SAGrB,OAAO,2BACH,gBAAC,IAAD,CAAMqD,SAAUvO,KAAK06C,UACjB,gBAAC,IAAKzuC,KAAN,CAAW7E,KAAM,YAAaqH,MAAM,cAAa,gBAAC,IAAD,OACjD,gBAAC,IAAKxC,KAAN,CAAW7E,KAAM,YAAaqH,MAAM,aAAaklC,aAAc,OAAO,gBAAC,KAAD,KAClE,gBAAC,KAAO7tB,OAAR,CAAezX,MAAM,OAArB,OACA,gBAAC,KAAOyX,OAAR,CAAezX,MAAM,MAArB,QAEJ,gBAAC,IAAKpC,KAAN,KACI,gBAAC,IAAD,CAAQzC,KAAK,UAAUqF,SAAS,UAAhC,kBAGR,gBAAC,KAAD,CAAOqsC,aAAY,aACf1xC,KAAM,YACH0xC,GACJ7qC,QAASrQ,KAAKuJ,MAAM8G,QACnBU,WAAY/Q,KAAKuJ,MAAMzF,SArE/B9D,KAAK86C,cAAgB/wC,EAAM4M,OAC3B3W,KAAK+jC,SAAWh6B,EAAM4M,OAAOotB,SAC7B/jC,KAAKuJ,MAAQvJ,KAAKkgB,IAAInW,ICLf,MAAMwxC,WAAmB3xC,YACpChK,YAAYmK,GACRoF,MAAMpF,GADS,KAOnB8R,OAAU/X,IACP9D,KAAKqJ,SAAL,eAAkBrJ,KAAKkgB,IAAIpc,MARX,KAWnBoc,IAAOnW,IAMI,CAAEjG,KALMZ,OAAO0M,KAAK7F,EAAMjG,MAAM8O,IAAI3C,IAAiB,CAAE0qC,UAAW1qC,KAErD2C,IAAI3C,IACb,CAAEtE,IAAKsE,EAAK0qC,UAAWA,UAAW1qC,EAAK0qC,aAEpCzjC,QAAQ+W,KAAKklB,WAjBZ,KAoBnBz1B,SAAYrP,IACRrO,KAAK26C,UAAYtsC,GArBF,KAwBnBkB,OAAS,IAEE,2BACH,gBAAC,IAAD,CAAM5D,IAAK3L,KAAKuJ,MAAM2N,SAClB,gBAAC,IAAKjL,KAAN,CAAWwC,MAAM,+BACb,gBAAC,KAAD,CAAQiP,SAAU1d,KAAK0d,UAClB1d,KAAKuJ,MAAMzF,KAAK8O,IAAI3C,GACV,gBAAC,KAAO6V,OAAR,CAAena,IAAKsE,EAAKtE,IAAK0C,MAAO4B,EAAK0qC,WAC5C1qC,EAAK0qC,gBA9B9B36C,KAAK86C,cAAgB/wC,EAAM4M,OAC3B3W,KAAK+jC,SAAWh6B,EAAM4M,OAAOotB,SAC7B/jC,KAAKuJ,MAAQvJ,KAAKkgB,IAAInW,I,MCItBkT,GAAYC,KAAZD,QAGO,MAAMu+B,WAAsBjY,GAAI35B,aAAiBu5B,KAAKuK,KACjE9tC,YAAYmK,GAAQ,IAAD,EACfoF,MAAMpF,GADS,YAanBqxC,sBAbmB,uCAaK,WAAOP,GAAP,mBAAAh3C,EAAA,yDACQ,IAAxBg3C,EAAax5C,OADG,uBAEhB,EAAK0iC,SAAS+Q,SAAS,wBAFP,iCAKd2G,EAAYZ,EAAapU,QAAQx2B,GAC5BurC,GAAcE,eAAe,CAACzrC,KACtC3O,KAAK,SAER,EAAKysC,eAAexxB,QACdnD,EAAYyX,GAAMK,mBAClBzuB,EAXc,wBAWS,EAAKshC,SAASkI,oBAAoB7yB,UAX3C,4BAYZqiC,EAZY,wBAafriC,EAbe,cAed,EAAK2qB,SAASoI,MAAM,CAAE/yB,YAAW3W,QAfnB,OAgBpB,EAAKsrC,eAAevxB,OAhBA,4CAbL,2DAgCnBm/B,cAhCmB,sBAgCH,qBAQHC,EARG,eAAA/3C,EAAA,yDAQH+3C,EARG,SAQSC,GACjB,GAAiB,UAAbA,EAAM3X,GACN,MAAwB,QAApB2X,EAAMjB,UACA,IAAN,OAAWY,GAAcE,eAAeG,EAAM/3C,MAAMxC,KAAK,SAAzD,KACG,WAAWk6C,GAAcE,eAAeG,EAAM/3C,MAAMxC,KAAK,QAAzD,KAEP,GAAwB,QAApBu6C,EAAMjB,UAAqB,CAC3B,MAAMt3C,EAAOu4C,EAAM/3C,KAAK2iC,QAAQx2B,GACrB2rC,EAAY3rC,IACpB3O,KAAK,SACR,MAAM,IAAN,OAAWgC,EAAX,KACG,CACH,MAAMA,EAAOu4C,EAAM/3C,KAAK2iC,QAAQx2B,GACrB2rC,EAAY3rC,IAEvB,MAAM,IAAN,OAAW3M,EAAKhC,KAAK,QAArB,OAtBNq5C,EAAY,EAAKK,WAAWL,UADtB,uBAGR,EAAK5W,SAAS+Q,SAAS,mCAHf,iCAMN+G,EAAQ,EAAKd,UAAUJ,GAuBvBc,EAAYG,EAAYC,GAE9B,EAAK9N,eAAexxB,QACdnD,EAAYyX,GAAMK,mBAClBzuB,EAjCM,wBAiCiB,EAAKshC,SAASkI,oBAAoB7yB,UAjCnD,4BAkCJqiC,EAlCI,wBAmCPriC,EAnCO,eAqCN,EAAK2qB,SAASoI,MAAM,CAAE/yB,YAAW3W,QArC3B,QAsCZ,EAAKsrC,eAAevxB,OAtCR,4CA9BZxc,KAAK+jC,SAAWh6B,EAAM4M,OAAOotB,SAC7B/jC,KAAK+6C,UAAY,GACjB/6C,KAAK87C,kBAAoB,GAsE7BvsC,SACI,OAAO,2BACH,uBAAKjB,UAAW,gBACZ,gBAAC,KAAD,CAAMsP,iBAAiB,IAAItP,UAAW,gBAElC,gBAAC,GAAD,CAASyP,IAAI,0BAA0BpS,IAAI,KACvC,gBAAC,GAAD,CAAS6L,IAAMwG,GAAOhe,KAAK+5C,QAAU/7B,EAAIrH,OAAQ3W,KAAM+uC,aAAc/uC,KAAK+jC,SAASJ,aAAakI,OAAOyC,UAE3G,gBAAC,GAAD,CAASvwB,IAAI,cAAcpS,IAAI,KAC3B,gBAAC,GAAD,CAAagL,OAAQ3W,KAAMytC,WAAYztC,KAAKytC,WAAYH,aAActtC,KAAKstC,aAAcD,iBAAkBrtC,KAAKqtC,iBAAkB71B,IAAMwG,GAAOhe,KAAK+tC,eAAiB/vB,EAAIuvB,OAAQvtC,KAAKutC,OAAQC,QAASxtC,KAAK27C,cAAezvC,MAAO,CAAEmQ,aAAc,UAClP,gBAAC,KAAD,MACA,gBAAC,GAAD,CAAY7E,IAAMwG,GAAOhe,KAAKg7C,WAAah9B,EAAIrH,OAAQ3W,KAAM8D,KAAM9D,KAAK+6C,aAE5E,gBAAC,GAAD,CAASh9B,IAAI,sBAAsBpS,IAAI,KACnC,gBAAC,GAAD,CAAY6L,IAAMwG,GAAOhe,KAAKi7C,WAAaj9B,EAAIrH,OAAQ3W,KAAM8D,KAAM9D,KAAK+6C,eAKpF,8BA9FSS,GAQVE,eAAkBK,GACdA,EAAMnpC,IAAI3C,GJJAA,KAAU,MACvBmL,EAAwCnL,EAAxCmL,MAAO/G,EAAiCpE,EAAjCoE,SAAU0lC,EAAuB9pC,EAAvB8pC,QAAShwB,EAAc9Z,EAAd8Z,UAClC,GAAIgwB,IAAYb,GAAgBG,GAAI,CAEhC,IAAI2C,EAAU,GAEd,OAAQ3nC,GACJ,IAAK,UAAW,IAAK,OAAQ,IAAK,QAAS,IAAK,SAC5C2nC,EAAUjyB,EAAUnX,IAAIqpC,GACbA,GACR36C,KAAK,KACR,MACJ,QACI06C,EAAUjyB,EAAUnX,IAAIqpC,GACd,IAAN,OAAWprB,GAAMQ,YAAY4qB,GAA7B,MACD36C,KAAK,KAEhB,MAAMimC,EAAG,WAAOyU,EAAP,KACT,MAAM,GAAN,OAAUnrB,GAAMuB,SAAShX,GAAzB,YAAmC2+B,EAAnC,YAA8CxS,GAGlD,GAAIwS,IAAYb,GAAgBS,aAAeI,IAAYb,GAAgBQ,QACvE,MAAM,GAAN,OAAU7oB,GAAMuB,SAAShX,GAAzB,YAAmC2+B,GAGvC,GAAIA,IAAYb,GAAgBU,SAC5B,MAAM,GAAN,OAAU/oB,GAAMuB,SAAShX,GAAzB,SAGJ,GAAI2+B,IAAYb,GAAgBgD,YAC5B,MAAM,GAAN,OAAUrrB,GAAMuB,SAAShX,GAAzB,UAGJ,GAAI2+B,IAAYb,GAAgBO,KAC5B,MAAM,GAAN,OAAU5oB,GAAMuB,SAAShX,GAAzB,kBAAyCyV,GAAMQ,YAAYtH,GAA3D,KAGJ,GAAIgwB,IAAYb,GAAgBK,YAC5B,MAAM,GAAN,OAAU1oB,GAAMuB,SAAShX,GAAzB,kBAAyCyV,GAAMQ,YAAYtH,GAA3D,MAGJ,GAAIgwB,IAAYb,GAAgBM,UAC5B,MAAM,GAAN,OAAU3oB,GAAMuB,SAAShX,GAAzB,mBAA0CyV,GAAMQ,YAAYtH,GAA5D,KAGJ,IAAIwd,EAAM,GACV,OAAQlzB,GACJ,IAAK,SACDkzB,EAAG,WAAO1W,GAAMQ,YAAYtH,GAAzB,KACH,MACJ,QAASwd,EAAMxd,EAEnB,MAAM,GAAN,OAAU8G,GAAMuB,SAAShX,GAAzB,YAAmC2+B,EAAnC,YAA8CxS,II/C/B4U,CAAgBlsC,I,SCrB2CtM,IAAYC,aAAZ,uCAAyB,WAAOrD,GAAP,SAAAsD,EAAA,+EAC5F6xC,GAAiBvJ,MAAM5rC,EACzBiO,IACG,GAAmC,IAA/BtL,OAAO0M,KAAKpB,GAAQnN,OACpB,MAAO,kDAIf,CAAC0iC,EAAUv1B,KACP,MAAM4K,EAAYyX,GAAMK,mBAClBkrB,EAAWl5C,OAAO0M,KAAKpB,GAAQoE,IAAIjH,GAC/B,IAAN,OAAWklB,GAAMuB,SAASzmB,GAA1B,YAAkC6C,EAAO7C,GAAzC,MACDrK,KAAK,KAKR,MAAO,CAAE8X,YAAW3W,IAHX,wBAAoBshC,EAASkI,oBAAoB7yB,UAAjD,mCACGgjC,EADH,4BAEJhjC,EAFI,SAdkF,2CAAzB,uDAAtDijC,G,GAATr4C,QAA0Cs4C,G,GAAR/7C,OCCjD,MAAMg8C,OACKnG,UAAY,WADjBmG,GAEKlG,aAAe,cAG1B,MAAMmG,GAAuB,CACzB,CAACD,GAAwBnG,WAAYZ,GACrC,CAAC+G,GAAwBlG,cAAef,GACxCjsC,SAAUtF,wBACVooC,MAAOkQ,IAGLI,GAAsB,CACxB,CAACF,GAAwBnG,WAAYX,GACrC,CAAC8G,GAAwBlG,cAAed,GACxClsC,SAAUpF,iBACVkoC,MAAOmQ,IAGX,SAASI,GAAoBnzC,EAAOhJ,GAChC,OAAOk8C,GAAoBl8C,EAAOiJ,MAAMD,EAAOhJ,EAAOuD,MChB1D,MAAMkK,GAAY,CACdqnC,cAAe,GACfpzC,WAAOV,EAEPs0C,gCAA2Bt0C,GAGzBo7C,GAAsB/yC,IAAMC,gBAC1Bic,GAAWC,KAAXD,OACR,SAAS82B,GAAa7yC,GAClB,MAAMg6B,EAAWh6B,EAAM4M,OAAOotB,SACxBuK,EAASvK,EAASJ,aAAakI,OAAOyC,OAFnB,EAGElgC,0BAAgBsuC,GAAqB1uC,GAAWwuC,IAHlD,mBAGlBjzC,EAHkB,KAGXY,EAHW,KAIjBkrC,EAAmD9rC,EAAnD8rC,cAAepzC,EAAoCsH,EAApCtH,MAAM4zC,EAA8BtsC,EAA9BssC,2BAJJ,EAKVhV,IAAKC,UAAbzE,EALkB,oBAOnBxK,EAAWyc,EAAO17B,IAAI3C,GACjB,kBAAC,GAAD,CAAQtE,IAAKsE,EAAK7I,MAAO6I,EAAK7I,OASzC,OANA4D,oBAAU,KACH6qC,GACCxZ,EAAKmb,UAEX,CAAC3B,IAGC,kBAAC8G,GAAoB1xC,SAArB,CAA8BoD,MAAO,CAAElE,cACnC,yBAAK+B,MAAO,CAAEurC,UAAW,OAAQ,MAAS,UAElCx1C,GAAS,kBAAC,GAAD,CAAU6L,QAAS7L,IAEhC,kBAAC,IAAD,CAAMo6B,KAAMA,EAAM9tB,SAAWC,IACzBrE,EAAU,CACNX,KAAM,QACN1F,KAAM,CACFigC,WACAv1B,aAGTF,UAAU,cACT,kBAAC,IAAKrC,KAAN,KACI,kBAACirC,GAAD,CAAmBE,QAASuF,GAAqB5Y,SAAUA,KAE/D,kBAAC,IAAK93B,KAAN,CAAWwC,MAAM,iBACb,kBAAC,KAAD,CACIzC,KAAK,WACL0rC,WAAYrpC,IACRlE,EAAU,CACNX,KAAM+yC,GAAwBlG,aAC9BvyC,KAAM,CAAEwqC,OAAQjgC,MAGxBqP,SAAWlP,IACPrE,EAAU,CACNX,KAAM+yC,GAAwBnG,UAC9BtyC,KAAM,CAAEwqC,OAAQ9/B,OAIvBqjB,IAIRwjB,EAAcziC,IAAI3C,GACR,kBAAC,IAAKhE,KAAN,CAAWq+B,aAAc,OAAQ3+B,IAAKsE,EAAKmL,MAAO3M,MAAOwB,EAAKmL,MAAOhU,KAAM6I,EAAKmL,OACnF,kBAAC,KAAD,KACI,kBAAC,KAAO0K,OAAR,CAAezX,MAAM,QAArB,QACA,kBAAC,KAAOyX,OAAR,CAAezX,MAAM,OAArB,a,SCzEyC1K,IAAYC,aAAZ,uCAAyB,WAAOrD,GAAP,SAAAsD,EAAA,+EACvF6xC,GAAiBvJ,MAAM5rC,EACzBiO,GACoC,GAA9BtL,OAAO0M,KAAKpB,GAAQnN,OACZ,gDAEPmN,EAAOquC,eAAX,EACW,gDAIf,CAAC9Y,EAASv1B,KACN,MAAM4K,EAAYyX,GAAMK,mBAClB4rB,EAAWtuC,EAAOquC,UAKxB,MAAO,CAACzjC,YAAU3W,IAHT,wBAAoBshC,EAASkI,oBAAoB7yB,UAAjD,gCACA0jC,EADA,4BAEJ1jC,EAFI,SAf6E,2CAAzB,uDAAnD2jC,G,GAAR/4C,QAAuCg5C,G,GAAPz8C,OCA9C,MAAM08C,GAAoB,2BACnBrhB,IADmB,IACJuQ,MAAM4Q,KAEtBG,GAAmB,2BAClBrhB,IADkB,IACJsQ,MAAM6Q,KAG3B,SAASG,GAAoB5zC,EAAOhJ,GAChC,OAAO28C,GAAoB38C,EAAOiJ,MAAMD,EAAOhJ,EAAOuD,MCJ1D,MAAMkK,GAAY,CACd6uC,eAAWt7C,EACXU,WAAOV,EAEPs0C,gCAA4Bt0C,GAG1B67C,GAAsBxzC,IAAMC,gBAElC,SAASwzC,GAAatzC,GAClB,MAAMg6B,EAAWh6B,EAAM4M,OAAOotB,SADL,EAEE31B,0BAAgB+uC,GAAqBnvC,GAAWivC,IAFlD,mBAElB1zC,EAFkB,KAEXY,EAFW,KAGNlI,GAAsCsH,EAAjDszC,UAAiDtzC,EAAtCtH,OAAO4zC,EAA+BtsC,EAA/BssC,2BAHD,EAIVhV,IAAKC,UAAbzE,EAJkB,oBAYzB,OANArxB,oBAAU,KACH6qC,GACCxZ,EAAKmb,UAEX,CAAC3B,IAGC,kBAACuH,GAAoBnyC,SAArB,CAA8BoD,MAAO,CAAElE,cACnC,yBAAK+B,MAAO,CAAEurC,UAAW,OAAQ,MAAS,UAElCx1C,GAAS,kBAAC,GAAD,CAAU6L,QAAS7L,IAEhC,kBAAC,IAAD,CAAMo6B,KAAMA,EAAM9tB,SAAWC,IACzBrE,EAAU,CACNX,KAAM,QACN1F,KAAM,CACFigC,WACAv1B,aAGTF,UAAU,cACT,kBAAC,IAAKrC,KAAN,KACI,kBAACirC,GAAD,CAAmBE,QAASgG,GAAqBrZ,SAAUA,KAE/D,kBAAC,IAAK93B,KAAN,CAAW7E,KAAK,aACZ,kBAAC,IAAD,U,SC9CiDzD,IAAYC,aAAZ,uCAAyB,WAAOrD,GAAP,eAAAsD,EAAA,6DACxFiwC,EAASvzC,EAAOuI,QAAQgrC,QACvBwJ,YAAc/8C,EAAOuD,KAAKw5C,YAF6D,kBAGvF,CACHx5C,KAAM,CACFyG,QAAShK,EAAOuI,QAAQyB,QAAU,EAClCupC,YANsF,2CAAzB,uDAAnDyJ,G,GAARv5C,QAAuCw5C,G,GAAPj9C,O,GCA2BoD,IAAYC,aAAZ,uCAAyB,WAAOrD,GAAP,eAAAsD,EAAA,6DACxFiwC,EAASvzC,EAAOuI,QAAQgrC,QACvB2J,YAAcl9C,EAAOuD,KAAK25C,YAF6D,kBAGvF,CACH35C,KAAM,CACFyG,QAAShK,EAAOuI,QAAQyB,QAAU,EAClCupC,YANsF,2CAAzB,uDAAnD4J,G,GAAR15C,QAAuC25C,G,GAAPp9C,O,GCAqCoD,IAAYC,aAAZ,uCAAyB,WAAOrD,GAAP,eAAAsD,EAAA,6DAClGiwC,EAASvzC,EAAOuI,QAAQgrC,QACvB8J,WAAar9C,EAAOuD,KAAK85C,WAFwE,kBAGjG,CACH95C,KAAM,CACFyG,QAAShK,EAAOuI,QAAQyB,QAAU,EAClCupC,YANgG,2CAAzB,uDAA7D+J,G,GAAR75C,QAA4C85C,G,GAAPv9C,O,GCC6BoD,IAAYC,aAAZ,uCAAyB,WAAOrD,GAAP,qDAAAsD,EAAA,2DAI5FtD,EAAOuI,QAAQgrC,OAHhBwJ,EAD6F,EAC7FA,YACJG,EAFiG,EAEjGA,YACAG,EAHiG,EAGjGA,WAHiG,EAKxEr9C,EAAOuD,KAA7BigC,EAL8F,EAK9FA,SAASga,EALqF,EAKrFA,UAEVtoB,EAAiB6nB,EAAY1qC,IAAI3C,GAC5B4gB,GAAMuB,SAASniB,EAAKmL,QAC5B9Z,KAAK,KAEF08C,EAAUP,EAAY7qC,IAAI3C,GACtB,GAAN,OAAU4gB,GAAMuB,SAASniB,EAAKmL,OAA9B,YAAwCnL,EAAK5B,QAG7C4vC,EAAa,GACbD,EAAQ38C,OAAS,IACjB48C,EAAU,mBAAeD,EAAQ18C,KAAK,OAGlC48C,EAAqCN,EAArCM,WAAYC,EAAyBP,EAAzBO,UAAWC,EAAcR,EAAdQ,UAC3BC,EAAY,GAGZC,EAAgBH,GAAS,UAAQA,EAAR,eAAkC,sBAC3DI,EAAgBH,GAAS,UAAOA,EAAP,eAAiC,sBAE1C,wBAAjBE,GAAyD,wBAAfC,IACzCA,EAAe,gBAGfL,EA/BiG,sBAgCzFA,EAhCyF,OAiCxF,eAjCwF,QAoCxF,iBApCwF,gCAkCzFG,EAAS,uBAAmBC,EAAnB,iBAAwCC,EAAxC,KAlCgF,oCAqCzFF,EAAS,wBAAoBC,EAApB,iBAAyCC,EAAzC,KArCgF,oCA0C/FvI,EAAY+H,EAAUnrC,IAAI3C,IACwBA,EAA5CmL,MAA4CnL,EAArC+iC,MADoB,MACbC,EAA8BhjC,EAA9BgjC,cAAerI,EAAe36B,EAAf26B,WACrC,MAAM,GAAN,OAAUqI,EAAV,sBAAqCrI,KACtCtpC,KAAK,KAEFk9C,EAAYza,EAASJ,aAAakI,OAAOyC,OAAO17B,IAAI3C,GAAM4gB,GAAMuB,SAASniB,EAAK7I,OAAO9F,KAAK,KAC1F8X,EAAYyX,GAAMK,mBAClBzuB,EAjD+F,wBAkD3F+7C,EAlD2F,YAkD9ExI,EAlD8E,uBAmD7FjS,EAASkI,oBAAoB7yB,UAnDgE,wDAqDjFqc,EArDiF,YAqD/DwoB,EArD+D,YAqDjDI,EArDiD,uBAsD7FjlC,EAtD6F,qBA0D/F2qB,EAASoI,MAAM,CAAC/yB,YAAU3W,QA1DqE,eA4DrGshC,EAAS8J,wBA5D4F,kBA6D9F,CACH/pC,KAAM,KA9D2F,4CAAzB,uDAAxD26C,G,GAATz6C,QAA2C06C,G,GAARn+C,OCElD,MAAMo+C,OACKC,WAAa,aADlBD,GAEKE,WAAa,aAFlBF,GAGKG,gBAAkB,kBAHvBH,GAIKxS,MAAQ,QAEnB,MAAM4S,GAAqB,2BACpBnjB,IADoB,IAEvB,CAAC+iB,GAAyBC,YAAarB,GACvC,CAACoB,GAAyBE,YAAanB,GACvC,CAACiB,GAAyBG,iBAAkBjB,GAC5C1R,MAAOsS,KAELO,GAAoB,2BACnBnjB,IADmB,IAEtB,CAAC8iB,GAAyBC,YAAapB,GACvC,CAACmB,GAAyBE,YAAalB,GACvC,CAACgB,GAAyBG,iBAAkBhB,GAC5C3R,MAAOuS,KAGX,SAASO,GAAqB11C,EAAOhJ,GACjC,OAAOy+C,GAAqBz+C,EAAOiJ,MAAMD,EAAOhJ,EAAOuD,M,MCvBnDgiB,GAAWC,KAAXD,OA+DOo5B,OA9Df,SAAyBn1C,GAAQ,MACrBg6B,EAOJh6B,EAPIg6B,SAEJqT,GAKArtC,EANAI,UAMAJ,EALAqtC,SAHwB,EAQxBrtC,EAJAo1C,mBAJwB,SAKxBC,EAGAr1C,EAHAq1C,aAAa5H,EAGbztC,EAHaytC,OAAO6H,EAGpBt1C,EAHoBs1C,aALI,EAQxBt1C,EAFAu1C,yBANwB,MAMN,gBANM,IAQxBv1C,EADAw1C,wBAPwB,MAOP,WAPO,EAStBjR,EAAS+Q,GAAgBtb,EAASJ,aAAakI,OAAOyC,OAThC,EAUchkC,mBAAS,IAVvB,mBAUrBk1C,EAVqB,KAUNC,EAVM,OAWFn1C,wBAAS/I,GAXP,mBAWrBU,EAXqB,KAWd0mC,EAXc,OAYb9H,IAAKC,UAAbzE,EAZqB,oBActBxK,EAAWyc,EAAO17B,IAAI3C,GACjB,kBAAC,GAAD,CAAQtE,IAAKsE,EAAK7I,MAAO6I,EAAK7I,OA2CzC,MAAO,CAAEg5B,GAxCGsf,GACD,kBAAC,IAAD,CAAMrjB,KAAMA,EAAM/tB,UAAU,aAAaC,SAAUipC,GAEhDv1C,GAAS,kBAAC,GAAD,CAAU09C,QAAS,KAAKhX,OAASpnC,IAAauM,QAAS7L,IAEjEk9C,GAAe,kBAAC,IAAKlzC,KAAN,KACZ,kBAACirC,GAAD,CAAmBE,QAASA,EAASrT,SAAUA,KAGnD,kBAAC,IAAK93B,KAAN,CAAWwC,MAAO6wC,EAAmBl4C,KAAK,oBACtC,kBAAC,KAAD,CACI8E,MAAO,CAAC,SAAW,SACnBF,KAAMuzC,EACN7H,WAAYrpC,IACRoxC,EAAiBD,EAAc/kC,OAAOxK,GAAQ5B,IAAU4B,EAAKmL,SAEjEsC,SAAWlP,IAEHixC,EADkB,aAAnBF,EACkB/wC,EAAOoE,IAAIwI,IACjB,CAAEA,WAGI,CAAC,CAAEA,MAAM5M,OAKjCqjB,IAIR2tB,EAAc5sC,IAAI3C,GACRmvC,EAAanvC,IAGvByvC,GAKAF,gBAAenjB,OAAMsM,aCxDtC,SAASiX,GAAW71C,GAAQ,MACjBI,EAAaC,qBAAWy1C,IAAxB11C,UADgB,EAEa+0C,GAAgB,CAChDnb,SAASh6B,EAAMg6B,SACfqb,aAAcnvC,GAAe,uCAF1BmwB,EAFgB,EAEhBA,GAAGof,EAFa,EAEbA,cAAc7W,EAFD,EAECA,SAIxB,OACIvI,EAAG,CAAC,kBAAC,IAAKn0B,KAAN,CAAWN,IAAK,UAChB,kBAAC,IAAD,CAAQnC,KAAK,UAAUkC,QACnB,KAC8B,IAAvB8zC,EAAcn+C,OAIjB8I,EAAU,CACNX,KAAMm1C,GAAyBC,WAC/B96C,KAAM,CAACw5C,YAAYkC,KALnB7W,EAAS,0BAHrB,WCTZ,SAASmX,GAAmB/1C,GAAQ,MACzBI,EAAaC,qBAAWy1C,IAAxB11C,UADwB,EAEU+0C,GAAgB,CACrDnb,SAASh6B,EAAMg6B,SACfqb,aAAcnvC,GAAe,kBAAC,IAAKhE,KAAN,CAAWq+B,aAAc,OAAQ3+B,IAAKsE,EAAKmL,MAAO3M,MAAOwB,EAAKmL,MAAOhU,KAAM6I,EAAKmL,OAC7G,kBAAC,KAAD,KACI,kBAAC,KAAO0K,OAAR,CAAezX,MAAM,QAArB,QACA,kBAAC,KAAOyX,OAAR,CAAezX,MAAM,OAArB,WALD+xB,EAFwB,EAExBA,GAAGof,EAFqB,EAErBA,cAAuBnjB,GAFF,EAEPsM,SAFO,EAEEtM,MASjC,OACI+D,EAAG,CAAC,kBAAC,IAAKn0B,KAAN,KACA,kBAAC,IAAD,CAAQzC,KAAK,UAAUkC,QACnB,KACI,MAAMq0C,EAAiB1jB,EAAKE,gBACtBkhB,EAAc+B,EAAc5sC,IAAI3C,IAC3B,CAACmL,MAAMnL,EAAKmL,MAAO/M,MAAM0xC,EAAe9vC,EAAKmL,UAExDjR,EAAU,CACNX,KAAMm1C,GAAyBE,WAC/B/6C,KAAM,CAAC25C,YAAYA,OAR/B,QAcA,kBAAC,KAAD,CAASj0C,KAAK,aACd,kBAAC,IAAD,CAASkC,QACL,KAEIvB,EAAU,CACNX,KAAM,WACN1F,KAAM,CAACyG,QAAQ,OAL3B,eC3BZ,SAASy1C,GAAmBj2C,GAAQ,MACxBI,EAAcC,qBAAWy1C,IAAzB11C,UADuB,EAEe+0C,GAAgB,CAC1Dnb,SAAUh6B,EAAMg6B,SAChBqb,aAAenvC,IACX,OAAQA,EAAKmL,OACT,IAAK,aASL,IAAK,eACD,OAAO,oCACH,kBAAC,IAAKnP,KAAN,CAAWwC,MAAM,YAAYrH,KAAK,aAC9B,kBAAC,IAAD,CAAO0sB,YAAa,YAExB,kBAAC,IAAK7nB,KAAN,CAAWwC,MAAM,YAAYrH,KAAK,aAC9B,kBAAC,IAAD,CAAO0sB,YAAa,eAKxCurB,aAAc,CAAC,CAAEj4C,KAAM,cAAgB,CAAEA,KAAM,iBAC/Ck4C,kBAAmB,cAAeC,iBAAkB,WAzBhDnf,EAFuB,EAEvBA,GAA6B/D,GAFN,EAEnBmjB,cAFmB,EAEJ7W,SAFI,EAEMtM,MA2BrC,OACI+D,EAAG,CAAC,kBAAC,IAAKn0B,KAAN,KACA,kBAAC,IAAD,CAAQzC,KAAK,UAAUkC,QACnB,KAAO,MACKu0C,EAAqB5jB,EAAKE,gBAA1B0jB,iBACFrC,EAAU,2BAAQvhB,EAAKE,iBAAb,IAA8B2hB,WAAY+B,IAC1D91C,EAAU,CACNX,KAAMm1C,GAAyBG,gBAC/Bh7C,KAAM,CAAE85C,kBANpB,QAWS,kBAAC,KAAD,CAASp0C,KAAK,aACvB,kBAAC,IAAD,CAASkC,QACL,KAEIvB,EAAU,CACNX,KAAM,WACN1F,KAAM,CAACyG,QAAQ,OAL3B,e,MC3CJwS,GAAUC,KAAVD,M,eCFUC,KAAVD,MAGR,SAASmjC,GAAcn2C,GAAQ,MACnBg6B,EAAah6B,EAAbg6B,SACA55B,EAAcC,qBAAWy1C,IAAzB11C,UAFkB,EDC9B,SAA2BJ,GAAQ,MACvB+oC,EAAiB/oC,EAAjB+oC,aADsB,EAEJxoC,mBAAS,IAFL,mBAEvB61C,EAFuB,KAEhBC,EAFgB,OAGQ91C,wBAAS/I,GAHjB,mBAGvB4wC,EAHuB,KAGVkO,EAHU,OAIfxf,IAAKC,UAAbzE,EAJuB,sBAKJ/xB,wBAAS/I,GALL,mBAKvBU,EALuB,KAKhB0mC,EALgB,KAOxB2X,EAAU,uCAAG,8BAAAz8C,EAAA,sEACGoV,GAAci5B,gBADjB,OACT3vC,EADS,OAETuB,EAAOvB,EAAIzC,QAAQ8S,IAAK3C,IACnB,CACH5B,MAAO4B,EAAKtE,IAAI6uB,MAChBx4B,KAAMiO,EAAKtE,IAAI6uB,MACfiX,UAAWxhC,EAAKI,QAAQ,GACxBuhC,YAAa3hC,EAAKI,QAAQ,GAC1B7P,OAAQyP,EAAKI,QAAQohB,MAAM,EAAGxhB,EAAKI,QAAQhP,WAGnD++C,EAASt8C,GAXM,2CAAH,qDAahBkH,oBAAU,KACNs1C,KACD,IAEH,MAAM1R,EAAenP,sBAAW,uCAAC,WAAOpxB,GAAP,eAAAxK,EAAA,sDACvBsuC,EAAcgO,EAAM1lC,OAAOxK,GAAQA,EAAK5B,QAAUA,GAAO,GAC/DgyC,EAAelO,GAFc,2CAAD,sDAG7B,CAACgO,IAEEtN,EAAc5iC,GACU,QAAtBA,EAAKmY,MAAMhQ,OACJ06B,EACG,GAmFlB,MAAO,CACH1S,GA5CO,CAACsf,EAASt3B,IACV,kBAAC,IAAD,CAAMiU,KAAMA,EAAM/tB,UAAU,cAE3BrM,GAAS,kBAAC,GAAD,CAAU09C,QAAS,KAAQhX,OAASpnC,IAAcuM,QAAS7L,IAExE,kBAAC,IAAKgK,KAAN,CAAWwC,MAAO,mBACd,kBAAC,KAAD,CACI8lB,YAAU,EACVgf,0BAA0B,EAC1BC,WAAW,EACXtnC,MAAO,CAAEmF,MAAO,SAChBojB,cAAc,EACd/W,SAAUkxB,EACV8E,gBAAiB,sBAEhByM,EAAMvtC,IAAI0gC,GAAK,kBAAC,KAAOxtB,OAAR,CAAena,IAAK2nC,EAAEjlC,OAAQilC,EAAEtxC,SAKpDmwC,GAAe,kBAAC,IAAKlmC,KAAN,CAAWN,IAAKwmC,EAAY9jC,OAAO,kBAAC,GAAD,CAAUyiB,KAAMqhB,KAGlEA,GAAeA,EAAY3xC,OAAOoS,IAAI3C,GAC3B,kBAAC,IAAKhE,KAAN,CAAWq+B,aAAcuI,EAAW5iC,GAAOtE,IAAKsE,EAAK7I,KAAMA,KAAM6I,EAAK7I,KAAMqH,MAAOwB,EAAK7I,MAAM,kBAAC,IAAD,QAI7G,kBAAC,IAAK6E,KAAN,KACI,kBAAC,KAAD,KACI,kBAAC,GAAD,CAAO0R,OAAO,4BACd,kBAAC,KAAD,CAASnU,KAAK,eACd,kBAAC,IAAKyC,KAAN,CAAW7E,KAAK,mBAAmBqH,MAAM,qBAAoB,kBAAC,IAAD,OAC7D,kBAAC,IAAKxC,KAAN,CAAW7E,KAAK,eAAeqH,MAAM,mBAAkB,kBAAC,KAAD,UAI9D2Z,EACD,kBAAC,IAAKnc,KAAN,CAAW7E,KAAK,eAAeqH,MAAM,iBAAiBE,UAAQ,GAAC,kBAAC,IAAD,OAC9D+wC,GAKDrjB,OAAM0W,aAjFO,KAAO,MAAD,EACkC1W,EAAKE,gBAAtDgkB,EADe,EACfA,iBAAkBC,EADH,EACGA,aAAcC,EADjB,EACiBA,aACxC,GAAIF,EACA,MAAO,CACHnlC,MAAO03B,EACPE,MAAOwN,IAAgB,EACvBvN,cAAesN,EACf3V,WAAY6V,GAGpB,IAAItO,EAEA,OADAxJ,EAAS,wBACF,GAEX,MAAMnoC,EAAS,GACf2xC,EAAY3xC,OAAOwP,QAAQC,IACvB,IAAIqd,EAAI+O,EAAKE,gBAAgBtsB,EAAK7I,MAC7BkmB,GAA2B,QAAtBrd,EAAKmY,MAAMhQ,SACjBkV,EAAIwlB,GAEJxlB,IAC0B,QAAtBrd,EAAKmY,MAAMhQ,OACX5X,EAAOW,KAAK0vB,GAAMuB,SAAS9E,IACH,UAAjBrd,EAAKoE,UAAyC,WAAjBpE,EAAKoE,SACzC7T,EAAOW,KAAKmsB,GAGZ9sB,EAAOW,KAAP,WAAgBmsB,EAAhB,SAMZ,MAAO,CAAElS,MAFK03B,EAEEE,MADkC,QAApCb,EAAYV,UAAUrpB,MAAM8qB,IACnBD,cAAc,GAAD,OAAKd,EAAY9jC,MAAjB,YAA0B7N,EAAOc,KAAK,KAAtC,KAA+CspC,WAAY6V,IAgDvE9X,YClHiB+X,CAAkB,CAC3D5N,aAAc,KADV1S,EAHkB,EAGlBA,GAAI/D,EAHc,EAGdA,KAAM0W,EAHQ,EAGRA,aAAcpK,EAHN,EAGMA,SAHN,EAMIr+B,oBAAS,GANb,mBAMnBqR,EANmB,KAMV8J,EANU,OAOAnb,mBAAS,IAPT,mBAOnB61C,EAPmB,KAOZC,EAPY,KAS1B,OAAO,oCAEChgB,EAAG,CACC,kBAAC,IAAKn0B,KAAN,KACI,kBAAC,IAAD,CAAQzC,KAAK,UAAUmS,QAASA,EAASjQ,QACrC,KACI,IAAIqyC,EAAY,GAChB,GAAoB,IAAjBoC,EAAM9+C,OAAa,CAAC,MAAD,EACkC0xC,IAA5C33B,EADU,EACVA,MAAO43B,EADG,EACHA,MAAOC,EADJ,EACIA,cAAerI,EADnB,EACmBA,WAErC,GADAmT,EAAU58C,KAAK,CAAEia,QAAO43B,QAAOC,gBAAerI,gBACzCA,EAED,YADAjC,EAAS,oCAIboV,EAAYoC,EAEhB16B,GAAW,GACXtb,EAAU,CACNX,KAAMm1C,GAAyBxS,MAC/BroC,KAAM,CACF2hB,aACAse,WACAga,iBAnBhB,SAyBK,kBAAC,KAAD,CAASv0C,KAAK,aACvB,kBAAC,IAAD,CAAQmS,QAASA,EAASjQ,QAClB,KAAO,MAAD,EACkDqnC,IAA5C33B,EADN,EACMA,MAAO43B,EADb,EACaA,MAAOC,EADpB,EACoBA,cAAerI,EADnC,EACmCA,WAChCA,GAILwV,EAASD,EAAM/e,OAAO,CAAC,CAAEhmB,QAAO43B,QAAOC,gBAAerI,iBACtDvO,EAAKmK,eAJDmC,EAAS,iCAJzB,OAYS,kBAAC,KAAD,CAASn/B,KAAK,aAC3B,kBAAC,IAAD,CAASkC,QACL,KAEIvB,EAAU,CACNX,KAAM,WACN1F,KAAM,CAACyG,QAAQ,OAL3B,eAeA41C,EAAM9+C,OAAQ,GAAM,kBAAC,KAAD,CAAM6K,MAAO,CAACmF,MAAM,SACxCsM,OAAQ,gDACRo0B,UAAQ,EACRhhC,WAAYovC,EAAMvtC,IAAI3C,GAAM,GAAF,OAAKA,EAAKgjC,cAAV,eAA8BhjC,EAAK26B,aAC7D+V,WAAY1wC,GACV,kBAAC,KAAKhE,KAAN,KACE,kBAAC,KAAW20C,KAAZ,CAAiBj3B,MAAI,GAArB,QADF,IACgD1Z,M,6SCvEtD0/B,GAASC,KAATD,KAEFE,GAAcniC,KAAOC,IAAV,MAcXkyC,GAAuBj2C,IAAMC,gBAEnC,SAASg3C,GAAc92C,GACnB,MAAMg6B,EAAWh6B,EAAM4M,OAAOotB,SACxB/1B,EAAY,CACd4iC,MAAO,CAAC,kBAACgP,GAAD,CAAY7b,SAAUA,IAC9B,kBAAC+b,GAAD,CAAoB/b,SAAUA,IAC9B,kBAACic,GAAD,CAAoBjc,SAAUA,IAC9B,kBAACmc,GAAD,CAAenc,SAAUA,KAEzBx5B,QAAS,EACTupC,OAAO,CACHwJ,YAAa,GACbG,YAAa,GACbG,WAAY,KAZM,EAeCxvC,0BAAgB6wC,GAAsBjxC,EAAW+wC,IAflD,mBAenBx1C,EAfmB,KAeZY,EAfY,KAgBlBymC,EAAmBrnC,EAAnBqnC,MAAOrmC,EAAYhB,EAAZgB,QACf,OACI,kBAACs1C,GAAqB50C,SAAtB,CAA+BoD,MAAO,CAAElE,cACpC,yBAAKmE,UAAU,YACX,yBAAKpC,MAAO,CAACurC,UAAU,SACnB,kBAAC,KAAD,CAAOltC,QAASA,GACZ,kBAAC,GAAD,CAAMoB,IAAK,EAAGT,MAAM,cAAcO,YAAY,gCAC9C,kBAAC,GAAD,CAAME,IAAK,EAAGT,MAAM,wBAAwBO,YAAY,6CACxD,kBAAC,GAAD,CAAME,IAAK,EAAGT,MAAM,eAAeO,YAAY,6CAC/C,kBAAC,GAAD,CAAME,IAAK,EAAGT,MAAM,iBAAiBO,YAAY,qDAGzD,yBAAK6C,UAAU,iBACX,kBAAC,GAAD,KAAcsiC,EAAMrmC,GAApB,QCvDpB,MAAMu2C,GAAmB,eAClBllB,IAEDmlB,GAAkB,eACjBllB,IAGP,SAASmlB,GAAmBz3C,EAAOhJ,GACnC,OAAOwgD,GAAmBxgD,EAAOiJ,MAAMD,EAAOhJ,EAAOuD,M,yCCGrD,MAAMkK,GAAY,CACd6nC,gCAA4Bt0C,EAC5B+6B,mBAAc/6B,EACd81C,WAAYxmB,GAAMO,cAGhB6vB,GAAqBr3C,IAAMC,gBAEjC,SAASq3C,GAAYn3C,GACjB,MAAMg6B,EAAWh6B,EAAM4M,OAAOotB,SADN,EAEG31B,0BAAgB4yC,GAAoBhzC,GAAW8yC,IAFlD,mBAEjBv3C,EAFiB,KAEVY,EAFU,OClB5B,SAAuBJ,GACnB,MACMukC,EADWvkC,EAAM4M,OAAOotB,SACNJ,aAAakI,OAAOyC,OAAO17B,IAAI3C,GAAQA,EAAK7I,MAF1C,EAGXy5B,IAAKC,UAAbzE,EAHmB,sBAIA/xB,qBAJA,mBAInB62C,EAJmB,KAIZC,EAJY,OAKI92C,mBAAS,IALb,mBAKnB+2C,EALmB,KAKVC,EALU,KAOpBjxC,EAAUi+B,EAAO17B,IAAI3C,GAChB,kBAAC,KAAO6V,OAAR,CAAezX,MAAO4B,GAAOA,IAIlCsxC,EAAiB9hB,sBAAa+hB,IAChCA,EAAaxxC,QAAQC,IACI,UAAjBA,EAAK7I,KAAK,IACVg6C,EAASnxC,EAAK5B,UAGvB,IA6BH,MAAO,CAAE+xB,GA3BE,IACA,kBAAC,IAAD,CAAMl1B,MAAM,WACf,kBAAC,IAAD,CAAMmxB,KAAMA,EAAMklB,eAAgBA,GAC9B,kBAAC,IAAKt1C,KAAN,CAAWwC,MAAM,sBAAsBrH,KAAK,SACxC,kBAAC,KAAD,KAEQi6C,EAAQzuC,IAAI3C,GACD,kBAAC,KAAO6V,OAAR,CAAezX,MAAO4B,GAAOA,MAMpD,kBAAC,IAAKhE,KAAN,CAAWwC,MAAM,WAAWrH,KAAK,WAC7B,kBAAC,KAAD,KACKiJ,IAIT,kBAAC,IAAKpE,KAAN,CAAWwC,MAAM,WAAWrH,KAAK,WAC7B,kBAAC,KAAD,KACKiJ,MAMRgsB,OAAM8kB,QAAOG,cD1BgCG,CAAc13C,GAA5D23C,EAHY,EAGhBthB,GAAkBuhB,EAHF,EAGJtlB,KAAgB8kB,EAHZ,EAGYA,MAAOG,EAHnB,EAGmBA,WAHnB,EEd5B,SAAuBv3C,GAAQ,MAAD,EACX82B,IAAKC,UAAbzE,EADmB,sBAEgB/xB,mBAAS,IAFzB,mBAEnBs3C,EAFmB,KAEJC,EAFI,OAGcv3C,qBAHd,mBAGnBw3C,EAHmB,KAGLC,EAHK,KAmB1B,MAAO,CAAE3hB,GAdE,IACA,kBAAC,IAAD,CAAMl1B,MAAM,qBACd42C,GAAgB,yBAAKxzC,UAAU,gBAAgBpC,MAAO,CAACmF,MAAM,UACzD,kBAAC,KAAD,CAAc2wC,IAAKF,KAExB,kBAAC,IAAD,CAAMzlB,KAAMA,GACPulB,EAAchvC,IAAI3C,GACR,kBAAC,IAAKhE,KAAN,CAAWN,IAAKsE,EAAKtE,IAAKvE,KAAM6I,EAAKtE,IAAK8C,MAAOwB,EAAK0kB,OAAOlmB,OAASwB,EAAKtE,IAAK2+B,aAAczZ,GAAMU,QAAQthB,EAAKqqC,UACpH,kBAAC,IAAD,UAMPje,OAAMwlB,mBAAkBD,gBAAcG,mBFDsBE,GAA7DC,EAJY,EAIhB9hB,GAAkB+hB,EAJF,EAIJ9lB,KAAgBwlB,EAJZ,EAIYA,iBAAiBE,EAJ7B,EAI6BA,gBAC/Cn8B,EAAQ,IAAIzjB,cACV0zC,EAAwDtsC,EAAxDssC,2BAA2BvZ,EAA6B/yB,EAA7B+yB,cAAe+a,EAAc9tC,EAAd8tC,WAG5C+K,EAAgB,uCAAG,8BAAAv+C,EAAA,sEAEH+hB,EAAMvjB,IAAIC,UAAagD,YAAa,IAFjC,UAGF,OADb/C,EAFe,QAGb1C,OAHa,iDAMfwiD,EAAc9/C,EAAIzC,QAAQ8S,IAAI3C,GAAQA,EAAK7I,MACjDk6C,EAAWe,GAPU,2CAAH,qDAUhBC,EAAW,uCAAG,kCAAAz+C,EAAA,0DACZs9C,EADY,iCAEMv7B,EAAMvjB,IAAIC,UAAaiD,WAAY,CAAEg9C,WAAYpB,IAFvD,cAEN5+C,EAFM,OAGN+5B,EAAgB/5B,EAAIzC,QAAQA,QAHtB,SAKwB8lB,EAAMpjB,UAAU85B,EAAezL,GAAMO,aAAc,CAAEjY,YAAa,YAL1F,UAMyB,OAD/BqpC,EALM,QAMc3iD,OANd,mDASN+hD,EAAgBY,EAAsB1iD,QAAQ2a,OAAOhY,GAChDA,EAAIuJ,MAAsB,iBAAbvJ,EAAIuJ,MAE5B7B,EAAU,CACNX,KAAK,WACL1F,KAAK,CAACw4B,mBAGVylB,EAAgBx/C,EAAIzC,QAAQ2iD,OAC5BZ,EAAiBD,GAlBL,4CAAH,qDAqBjB52C,oBAAU,KACNs3C,KACD,CAACnB,IAEJn2C,oBAAU,KACNo3C,KACD,IAEH,MAAMjW,EAAK,uCAAG,kCAAAtoC,EAAA,0DACNgyC,EADM,uBAEA6M,EAAaf,EAASplB,gBACtBomB,EAAaR,EAAS5lB,gBAEtBnjB,EAAYupC,EAAWvpC,WAAayX,GAAMK,mBAC1CzuB,EANA,gCAOIouB,GAAMuB,SAASswB,EAAWE,SAP9B,iBAO+C/xB,GAAMuB,SAASswB,EAAWG,SAPzE,qCAQE9e,EAASkI,oBAAoB7yB,UAR/B,eAQ+CA,EAR/C,2BASHkjB,EATG,2BAWAyH,EAASoI,MAAM,CAAC/yB,YAAU3W,QAX1B,OAaNozC,EAA2B,CACvBrsC,KAAM,WACN1F,KAAM,CAAE6X,SAAS,KAff,2CAAH,qDAuBX,OAJA3Q,oBAAU,KACNmhC,KACD,CAACkL,IAGA,kBAAC4J,GAAmBh2C,SAApB,CAA6BoD,MAAO,CAAElE,cAClC,kBAAC+sC,GAAD,CAAmBnT,SAAUA,EAAUqT,QAAS6J,KAChD,yBAAK3yC,UAAU,gBACX,yBAAKA,UAAU,0BACVozC,KAEL,kBAAC,KAAD,CAASl4C,KAAK,WAAW0C,MAAO,CAAEoF,OAAQ,WAC1C,yBAAKhD,UAAU,0BACV4zC,O,SGlG0Cv+C,IAAYC,aAAZ,uCAAyB,WAAOrD,GAAP,eAAAsD,EAAA,6DAC7EsoC,EAAS5rC,EAAOuD,KAAhBqoC,QAEHA,EAAM5rC,EAAOuD,MAHmE,kBAK7E,CACHA,KAAK,eACEvD,EAAOuD,QAPkE,2CAAzB,uDAAzCg/C,G,GAAR9+C,QAAkC++C,G,GAAPxiD,O,GCO+BoD,IAAYC,aAAZ,uCAAyB,WAAOrD,GAAP,SAAAsD,EAAA,+EACtF6xC,GAAiBvJ,MAAM5rC,EACzBiO,IACG,IAAKA,EAAOw0C,WACR,MAAO,2BAIf,CAACjf,EAA2Bv1B,KACxB,MAAM4K,EAAYyX,GAAMK,mBAExB,IAAI+xB,EAAW,QACZz0C,EAAO00C,YACPD,EAAW,aASd,MAAO,CAAE7pC,YAAW3W,IANX,sCACOshC,EAASkI,oBAAoB7yB,UADpC,yBAEP6pC,EAFO,uCAGOpyB,GAAMuB,SAAS5jB,EAAOw0C,YAH7B,4BAIJ5pC,EAJI,gDAhB4E,2CAAzB,uDAAhD+pC,G,GAATn/C,QAAoCo/C,G,GAAR7iD,OCJ3C,MAAM8iD,OACCC,WAAa,aAGpB,MAAMC,GAAoB,2BACnB3nB,IADmB,IAE1B,CAAC+b,GAAkBC,OAAQkL,GAC3B,CAACO,GAAwBC,YAAaH,KAGhCK,GAAmB,2BAClB3nB,IADkB,IAEzB,CAAC8b,GAAkBC,OAAQmL,GAC3B,CAACM,GAAwBC,YAAaF,KAItC,SAASK,GAAoBl6C,EAAOhJ,GACpC,OAAOijD,GAAoBjjD,EAAOiJ,MAAMD,EAAOhJ,EAAOuD,M,MCZ9CgiB,GAAWC,KAAXD,OACF49B,GAAsB,KAAM,QAEH95C,WAAe+5C,SAFZ,mBAEvB9c,EAFuB,KAEhB+c,EAFgB,OAGf/iB,IAAKC,UAAbzE,EAHuB,oBAI9BzyB,YAAgB,MACD,uCAAG,8BAAA/F,EAAA,sEACQoV,GAAcsrB,mBADtB,OAEQ,OADZhiC,EADI,QAEH1C,SACGgnC,EAAStkC,EAAIzC,QACnB8jD,EAAU/c,IAJJ,2CAAH,qDAOX/kC,IACF,IAEF,MAAMi6C,EAAQlV,EAAOj0B,IAAI4nB,GACd,gBAAC,GAAD,CAAQnsB,MAAOmsB,EAAMphB,WAAYohB,EAAMphB,YA2BlD,MAAO,CAACgnB,GAzBG,IAGH,gBAAC,IAAD,CAAM/D,KAAMA,EAAM/tB,UAAU,cACxB,gBAAC,IAAKrC,KAAN,CAAWwC,MAAO,gBAAC,IAAD,CAAkBnC,GAAG,gBAAkBlF,KAAK,aAAasH,MAAO,CAAC,CAAEC,UAAU,EAAMb,QAAS,gCAC1G,gBAAC,KAAD,CACIymB,YAAU,EACVroB,MAAO,CAAEmF,MAAO,KAChByiB,YAAY,oBACZU,iBAAiB,YAEpBunB,IAGL,gBAAC,IAAK9vC,KAAN,CAAWwC,MAAO,gBAAC,IAAD,CAAkBnC,GAAG,oBAAsBlF,KAAK,YAAYsH,MAAO,CAAC,CAAEC,UAAU,EAAMb,QAAS,oBAC7G,gBAAC,KAAD,CACI5B,MAAO,CAAEmF,MAAO,MAElB,gBAAC,GAAD,CAAQhD,MAAM,QAAd,QACA,gBAAC,GAAD,CAAQA,MAAM,SAAd,YAMPguB,SC5CTruB,GAAY,CAChB6nC,gCAA4Bt0C,EAC5BU,WAAMV,GAGFsiD,GAAsBj6C,IAAMC,cAA8D,MAE1Fi6C,GAA+C/5C,IAAW,MAAD,EAChCqE,0BAAgBq1C,GAAqBz1C,GAAWu1C,IADhB,mBACpDh6C,EADoD,KAC7CY,EAD6C,KAEpD0rC,EAAoCtsC,EAApCssC,2BAFoD,GAEhBtsC,EAATtH,MAEiByhD,MAAzCK,EAJiD,EAIpD3jB,GAA0B4jB,EAJ0B,EAI/B3nB,KAwB5B,OAtBArxB,oBAAU,KACR,GAAI6qC,EAA4B,CAAC,MAAD,EAECmO,EAAezd,iBAAvCyc,EAFuB,EAEvBA,WAAWE,EAFY,EAEZA,UAElB/4C,EAAU,CACRX,KAAKmuC,GAAkBtuC,SACvBvF,KAAM,CAAC7B,WAAMV,KAGf,MAAMiN,EAA0B,CAACw0C,aAAWE,UAAWA,GAEvD/4C,EAAU,CACRX,KAAM65C,GAAwBC,WAC9Bx/C,KAAM,CACJigC,SAAS0E,GAAiB1E,SAC1Bv1B,cAIL,CAACqnC,IAGA,kBAACgO,GAAoB54C,SAArB,CAA8BoD,MAAQ,CAAE9E,QAAMY,cAC5C,yBAAK+B,MAAO,CAACmQ,aAAa,SAAS,kBAAC66B,GAAD,CAAmBE,QAASyM,GAAqB9f,SAAU0E,GAAiB1E,YAC/G,kBAACggB,EAAD,Q,GCvC8DpgD,IAAYC,aAAZ,uCAAyB,WAAOrD,GAAP,SAAAsD,EAAA,+EACtF6xC,GAAiBvJ,MAAM5rC,EACzBiO,IAA6B,IAAD,EACzB,OAAKA,EAAOy1C,cAAiBz1C,EAAO01C,YAAe11C,EAAO21C,WAIrD,UAAA31C,EAAO41C,eAAP,eAAgB/iD,QAAO,OAA5B,EACW,0BAJA,+BAQf,CAAC0iC,EAA2Bv1B,KACxB,MAAM4K,EAAYyX,GAAMK,mBAaxB,MAAO,CAAE9X,YAAW3W,IAVX,4BACHshC,EAASkI,oBAAoB7yB,UAD1B,wDAEK5K,EAAO01C,WAFZ,4CAGW11C,EAAOy1C,aAHlB,yCAIQz1C,EAAO21C,UAJf,uCAKM31C,EAAO41C,QAAQxxC,IAAI3C,GACxB,GAAN,OAAUA,EAAV,YAAkB4gB,GAAMuB,SAAS5jB,EAAO21C,WAAxC,MACD7iD,KAAK,KAPC,6BAQJ8X,EARI,gDAhB4E,2CAAzB,uDAAhDirC,G,GAATrgD,QAAoCsgD,G,GAAR/jD,OCL3C,MAAMgkD,OACCC,WAAa,aAGpB,MAAMC,GAAoB,2BACnB7oB,IADmB,IAE1B,CAAC+b,GAAkBC,OAAQkL,GAC3B,CAACyB,GAAwBC,YAAaH,KAGhCK,GAAmB,2BAClB7oB,IADkB,IAEzB,CAAC8b,GAAkBC,OAAQmL,GAC3B,CAACwB,GAAwBC,YAAaF,KAItC,SAASK,GAAoBp7C,EAAOhJ,GACpC,OAAOmkD,GAAoBnkD,EAAOiJ,MAAMD,EAAOhJ,EAAOuD,M,gCCjBtD,MAAM8gD,GAAU,CAAC,MAAD,2BACVC,GAAgBC,KAASr0B,MCUzBziB,GAAY,CAChBk2C,WAAY,KACZD,aAAc,KACdE,UAAW,KACXtO,gCAA4Bt0C,EAC5BU,WAAOV,GAGHwjD,GAAsBn7C,IAAMC,cAAqE,MAEjGm7C,GAAgDj7C,IACpD,MAAMg6B,EAAW0E,GAAiB1E,SAE5BkhB,EADSlhB,EAASJ,aAAakI,OACRyC,OAAO17B,IAAIwI,GAAUA,EAAMhU,MAHM,EAInCgH,0BAAgBu2C,GAAqB32C,GAAWy2C,IAJb,mBAIvDl7C,EAJuD,KAIhDY,EAJgD,KAMtD+5C,EAA2E36C,EAA3E26C,WAAYD,EAA+D16C,EAA/D06C,aAAcE,EAAiD56C,EAAjD46C,UAAWtO,EAAsCtsC,EAAtCssC,2BAA4B5zC,EAAUsH,EAAVtH,MANX,EAU9BqI,mBAAwB,MAVM,mBAU7C46C,GAV6C,WAYxDC,EAAeC,aAAQ,CAC3BjsB,YAAcr1B,IACZohD,EAAYphD,IAEduhD,UAAW,KACTH,EAAY,SAjB8C,EAqBHI,aAAQ,CACjEC,MAAO,CAACzlD,EAAiBuI,KACvB8B,EAAU,CACRX,KAAMmuC,GAAkBtuC,SACxBvF,KAAM,CACJmgD,aAAcnkD,QA1BwC,mBAqBvD0lD,EArBuD,KAqBzBC,EArByB,KAqBrCC,WArBqC,EAgCMJ,aAAQ,CAC1EC,MAAO,CAACzlD,EAAiBuI,KACvB8B,EAAU,CACRX,KAAMmuC,GAAkBtuC,SACxBvF,KAAM,CACJogD,WAAYpkD,QArC0C,mBAgCvD6lD,EAhCuD,KAgCpBC,EAhCoB,KAgChCF,WAhCgC,EA2CRJ,aAAQ,CAC5DC,MAAO,CAACzlD,EAAiBuI,KACvB8B,EAAU,CACRX,KAAMmuC,GAAkBtuC,SACxBvF,KAAM,CACJqgD,UAAWrkD,QAhD2C,mBA2CvD+lD,EA3CuD,KA2C3BC,EA3C2B,KA2CvCJ,WAWjBK,EAAO,CAACC,EAAkBpb,IACvBob,EAAU,kBAAC,IAAD,CAAkB15C,GAAG,gBAAoBs+B,GAA0B,kBAAC,IAAD,CAAkBt+B,GAAG,gBAG3GtB,oBAAU,KACR,GAAI6qC,EAA4B,CAE9B1rC,EAAU,CACRX,KAAKmuC,GAAkBtuC,SACvBvF,KAAM,CAAC7B,WAAMV,KAJe,MAOvB0kD,EAAQC,EAAQ3f,iBAAhB0f,KACDz3C,EAA2B,CAAEy1C,eAAcE,YAAWD,aAAYE,QAAQ6B,GAChF97C,EAAU,CACRX,KAAM+6C,GAAwBC,WAC9B1gD,KAAM,CACJigC,WACAv1B,cAIL,CAACqnC,IA5E0D,QDlBrC,MAAO,MAAD,EAEdhV,IAAKC,UAAbzE,EAFsB,oBAe7B,MAAO,CAAC+D,GAXG,IACA,oCACH,kBAAC,IAAD,CAAM/D,KAAMA,GACR,kBAAC,IAAKpwB,KAAN,CAAW7E,KAAK,QAChB,kBAACy9C,GAAD,CACY1gB,QAASygB,QAMtBvoB,SCiFmB8pB,GAAtBC,EA9EoD,EA8EvDhmB,GAAc8lB,EA9EyC,EA8E9C7pB,KAEhB,OACE,kBAAC0oB,GAAoB95C,SAArB,CAA8BoD,MAAO,CAAE9E,QAAOY,cAE1ClI,GAAS,kBAAC,GAAD,CAAU6L,QAAS7L,IAE9B,yBAAKqM,UAAU,0BAAyB,kBAAC4oC,GAAD,CAAmBE,QAAS2N,GAAqBhhB,SAAUA,KACnG,yBAAKz1B,UAAU,qBACb,yBAAKA,UAAU,wBACb,kBAAC,KAAD,CACEA,UAAU,4BACVqP,OAAQ,oCAAE,kBAAC,IAAD,CAAOmW,YAAY,YAC7Bie,UAAQ,EACRhhC,WAAYk0C,EACZtE,WAAY1wC,GACV,kBAAC,KAAKhE,KAAN,KACE,wBAASk5C,EAAal1C,GAAQA,OAKtC,yBAAK3B,UAAU,wBACb,uCAAKA,UAAU,sBAAyBq3C,GACtC,0BAAMr3C,UAAU,qBAAoB,kBAAC,IAAD,CAAkBhC,GAAG,gBAAzD,KAAiF,6BADnF,IAC2Fy5C,EAAKH,EAAsB1B,IACtH,yBAAK51C,UAAU,sBACb,uCAAKA,UAAU,wBAA2Bk3C,GACxC,0BAAMl3C,UAAU,qBAAoB,kBAAC,IAAD,CAAkBhC,GAAG,mBAD3D,IACqF,6BAAOy5C,EAAKN,EAAkBxB,IAEnH,uCAAK31C,UAAU,yBAA4Bu3C,GACzC,0BAAMv3C,UAAU,qBAAoB,kBAAC,IAAD,CAAkBhC,GAAG,gBAD3D,IACkF,6BADlF,IAC0Fy5C,EAAKD,EAAe3B,GAC5G,kBAAC,KAAD,MACCiC,UClIf,MAAMC,GAA6B,2BAC5BzqB,IAD4B,IAEnC,CAAC+b,GAAkBC,OAAQkL,KAGrBwD,GAA4B,2BAC3BzqB,IAD2B,IAElC,CAAC8b,GAAkBC,OAAQmL,KAI3B,SAASwD,GAA6Bh9C,EAAOhJ,GAC7C,OAAO+lD,GAA6B/lD,EAAOiJ,MAAMD,EAAOhJ,EAAOuD,MCjBxD,MAAM0iD,GACF,QADEA,GAED,SAqDL,MAAMC,GAGT7mD,YAAY6C,GAAa,IAAD,YAFhBikD,UAEgB,OADhBhb,KAAwB,GACR,KAGvBjN,MAHuB,sBAGf,8BAAA56B,EAAA,6DACC+hB,EAAQ,IAAIzjB,cADb,SAE+ByjB,EAAMpjB,UAAU,EAAKkkD,KAAM71B,GAAMO,aAAc,CAAEjY,YAAa,YAF7F,UAGgC,OAD/BqpC,EAFD,QAGqB3iD,OAHrB,yCAIM,GAJN,cAML,EAAK6rC,KAAO8W,EAAsB1iD,QAN7B,kBAOE,GAPF,2CAHe,KAaxB6mD,WAAW,IACY3mD,KAAK0rC,KAAKjxB,OAAOhY,GACE,iBAA1BA,EAAiBuJ,MAC1B4G,IAAI3C,GAAQA,GAhBK,KAmBxB22C,MAAOp4C,IACH,MAAMq4C,EAAS3jD,OAAO0M,KAAKpB,GAAQoE,IAAIoe,IACnC,MAAMrlB,EAAMqlB,EACN3iB,EAAQG,EAAOwiB,GACrB,IAAI81B,EAAI,aAASz4C,EAAT,OAIR,OAHKA,IACDy4C,EAAI,MAEF,OAAN,OAAcn7C,EAAd,YAAqBm7C,EAArB,OAEJ,MAAM,eAAN,OACID,EAAOvlD,KAAK,MADhB,uBAEItB,KAAK0mD,KAFT,eA5BA1mD,KAAK0mD,KAAOjkD,GC3Cb,MAAMskD,GAAqB3/C,IAAkB,MAAD,EAChCy5B,IAAKC,UAAbzE,EADwC,sBAEX/xB,mBAA0B,IAFf,mBAExCq8C,EAFwC,KAE5BK,EAF4B,OAGP18C,mBAA+B,IAHxB,mBAGxC28C,EAHwC,aAIb38C,mBAA+B,KAJlB,mBAIxC48C,EAJwC,KAI7BC,EAJ6B,KAKzCC,EAAgBr8C,iBAA8B,MAE9C6a,EAAQ,IAAIzjB,cAClB6I,oBAAU,MACK,uCAAG,gCAAAnH,EAAA,sEACQ+hB,EAAMvjB,IAAIC,UAAamD,oBAAoB,CAAC2B,SADpD,UAEM,OADV7E,EADI,QAEH1C,OAFG,uBAGAwnD,EAAS9kD,EAAIzC,QAHb,SAIwB,IAAI2mD,GAAiBY,EAAOvnD,SAAS2+B,QAJ7D,OAIN2oB,EAAc78C,QAJR,OAKNy8C,EAAa,UAACI,EAAc78C,eAAf,aAAC,EAAuBo8C,cAL/B,2CAAH,qDAQX7kD,IACD,IAEH,MAAMwlD,EAAc7nB,sBAAa/Q,KACjB,uCAAG,kCAAA7qB,EAAA,2DACRqjD,EAAUx4B,EAAOtnB,OAASlE,OAAO0M,KAAKs3C,EAAUx4B,EAAOtnB,OAAO/F,OAAS,GAD/D,qDAIPqtB,EAAO64B,UAJA,uBAKPJ,EAAa,CACT,CAACz4B,EAAOtnB,MAAR,UAAesnB,EAAO84B,iBAAtB,aAAe,EAAkBhtC,MAAM,KAAK5H,IAAK3C,IACtC,CAAE7I,KAAM6I,EAAM5B,MAAO4B,OAP7B,6BAYLmJ,EAAYyX,GAAMK,oBACpBxC,EAAO+4B,YAbA,oBAemB,6BAAvB/4B,EAAO+4B,YAfH,wBAgBG3jD,EAAO2kC,GAAiB1E,SAASJ,aAAakI,OAAOyC,OAAO17B,IAAK3C,IAC5D,CAAC7I,KAAK6I,EAAK7I,KAAKiH,MAAM4B,EAAK7I,QAEtC+/C,EAAa,CAAE,CAACz4B,EAAOtnB,MAAOtD,IAnB3B,4CAuBW8hB,EAAMpjB,UAAN,wBAAiCksB,EAAO+4B,YAAxC,eAA0DruC,GAAayX,GAAMO,aAAcP,GAAMkB,mBAvB5G,eAuBDxvB,EAvBC,OAwBHuB,EAAO,GACQ,MAAfvB,EAAI1C,SACJiE,EAAOvB,EAAIzC,QAAQgE,MAEvBqjD,EAAa,CAAE,CAACz4B,EAAOtnB,MAAOtD,IA5BvB,+BA+BP4qB,EAAO84B,UA/BA,kCAgCW5hC,EAAMpjB,UAAN,UAAmBksB,EAAO84B,WAAa32B,GAAMO,aAAcP,GAAMkB,mBAhC5E,eAgCDxvB,EAhCC,OAiCHuB,EAAO,GACQ,MAAfvB,EAAI1C,SACJiE,EAAOvB,EAAIzC,QAAQgE,MAEvBqjD,EAAa,CAAE,CAACz4B,EAAOtnB,MAAOtD,IArCvB,+DAAH,qDAyCZ4jD,IACD,IAEGC,EAAaloB,sBAAamoB,IAC5B,IAAIC,EAAQ,2BAAOD,EAASjzB,QAAhB,IAAuBvtB,KAAKwgD,EAASj8C,MA8BjD,MA7BiB,CACb,CAAC66C,IAAqB,IACX,kBAAC,IAAKv6C,KAAN,CACH0C,SAAUk5C,EAASl5C,SACnBvH,KAAMygD,EAASzgD,KACfuE,IAAKk8C,EAASzgD,KACdkjC,aAAczZ,GAAMU,QAAQq2B,EAASE,SACrCr5C,MAAOo5C,EAASp5C,OAASo5C,EAASzgD,MAClC,kBAAC,IAAD,OAGR,CAACo/C,IAAsB,KAAO,IAAD,EACzB,OAAO,kBAAC,IAAKv6C,KAAN,CACH0C,SAAUk5C,EAASl5C,SACnBvH,KAAMygD,EAASzgD,KACfuE,IAAKk8C,EAASzgD,KACdkjC,aAAczZ,GAAMU,QAAQq2B,EAASE,SACrCr5C,MAAOo5C,EAASp5C,OAASo5C,EAASzgD,MAClC,kBAAC,KAAD,CAAQmtB,YAAU,EAACwzB,QAAS,KACxBT,EAAYO,IACblsC,QAASsrC,EAAaY,EAASzgD,QAAS,EAAO4E,KAAO67C,EAAwBG,YAC5Et1C,QAAQC,IAAIu0C,GAHjB,UAIKA,EAAUW,EAASzgD,aAJxB,aAIK,EAA0BwL,IAAK3C,GACrB,kBAAC,KAAO6V,OAAR,CAAena,IAAKsE,EAAK5B,MAAOA,MAAO4B,EAAK5B,OAAQ4B,EAAK7I,WAMpEygD,EAASI,aAC1B,CAACf,IAaJ,MAAO,CAAE9mB,GAZE,IACA,oCACH,kBAAC,IAAD,CAAM/D,KAAMA,GAEJsqB,EAAW/zC,IAAIg1C,GACJD,EAAWC,MAOzBvrB,OAAM+qB,kBCtHjBc,GAAqDn+C,IAAiB,MAAD,EACvCg9C,GAAkBh9C,EAAMw4C,YAAjDniB,EADgE,EAChEA,GAAG/D,EAD6D,EAC7DA,KAAK+qB,EADwD,EACxDA,cAQf,OAPAr9C,EAAMsyB,KAAK9xB,QAAU8xB,EACrBtyB,EAAMq9C,cAAc78C,QAAU68C,EAAc78C,QAC5CS,oBAAU,OAIL,IACE,oCACHo1B,M,QCDR,MAAMpyB,GAAY,CAChBqzC,QAAS,GACTkB,WAAY,GACZ1M,gCAA4Bt0C,EAC5B81C,WAAYxmB,GAAMO,cAGd+2B,GAA+Bv+C,IAAMC,cAAqE,MAE1Gu+C,GAAyDr+C,IAAW,MAAD,EAC5CqE,0BAAgBm4C,GAA8Bv4C,GAAWq4C,IADb,mBAChE98C,EADgE,KACzDY,EADyD,KAEjEyb,EAAQ,IAAIzjB,cACZsyC,EAAU1pC,iBAA4B,MACtCs9C,EAAmBt9C,iBAAgC,MAEjD8qC,EAAgEtsC,EAAhEssC,2BAA4B0M,EAAoCh5C,EAApCg5C,WAAYlB,EAAwB93C,EAAxB83C,QAAShK,EAAe9tC,EAAf8tC,WAGzDrsC,oBAAU,MACG,uCAAG,4BAAAnH,EAAA,sEACM+hB,EAAMvjB,IAAIC,UAAakD,qBAAsB,IADnD,OAEO,OADbjD,EADM,QAEJ1C,QACNsK,EAAU,CACRX,KAAMmuC,GAAkBtuC,SACxBvF,KAAM,CACJu9C,QAAS9+C,EAAIzC,WANP,2CAAH,qDAWXgC,IACC,IAGH,MAAMqqC,EAAK,uCAAG,0CAAAtoC,EAAA,0DACRgyC,EADQ,wBAEJ6M,EAFI,UAESjO,EAAQlqC,eAFjB,aAES,EAAiBg8B,iBAC9B6gB,EAAgBiB,EAAiB99C,QAcjCmhC,EAjBI,OAiBG0b,QAjBH,IAiBGA,OAjBH,EAiBGA,EAAeR,MAAMlE,GAC5B3e,EAAW0E,GAAiB1E,SAC5BJ,EAAeI,EAASkI,oBAAoB7yB,UAC5CA,EAAYyX,GAAMK,mBAClBzuB,EArBI,yCAsBekhC,EAtBf,wCAuBWvqB,EAvBX,qBAwBRsyB,EAxBQ,sBA0BW3H,EAASoI,MAAM,CAClC/yB,YACA3W,QA5BQ,QA8BK,MA9BL,QA+BRshC,EAAS8J,wBAEXgI,EAA2B,CACzBrsC,KAAM,WACN1F,KAAM,CAAE6X,SAAS,KAnCT,4CAAH,qDA4CX,OAJA3Q,oBAAU,KACRmhC,KACC,CAACkL,IAGF,kBAAC8Q,GAA6Bl9C,SAA9B,CAAuCoD,MAAO,CAAE9E,QAAOY,cACrD,kBAAC+sC,GAAD,CAAmBE,QAAS+Q,KAC5B,yBAAK75C,UAAU,0BACb,kBAAC,KAAD,CAAQimB,YAAU,EAAC7W,SAAWrP,IAC5BlE,EAAU,CACRX,KAAMmuC,GAAkBtuC,SACxBvF,KAAM,CACJy+C,WAAYl0C,MAGfomB,cAAY,EAACvoB,MAAO,CAAEmF,MAAO,UAE5BgwC,EAAQzuC,IAAK3C,GACJ,kBAAC,KAAO6V,OAAR,CAAena,IAAKsE,EAAK7I,KAAMiH,MAAO4B,EAAK7I,MAAO6I,EAAK7I,SAKtE,yBAAKkH,UAAU,wBACZi0C,GAAc,kBAAC2F,GAAD,CAAoBd,cAAeiB,EAAkB9F,WAAYA,EAAYlmB,KAAMoY,OCnGlGx3B,GAAYC,KAAZD,QAEO,MAAMqrC,WAAuB1+C,YACxChK,YAAYmK,GACRoF,MAAMpF,GADS,KAMnB8R,OAAS,KACL7b,KAAKqJ,SAAS,CAAEsC,IAAKklB,GAAMO,gBAL3BpxB,KAAK+jC,SAAW0E,GAAiB1E,SACjC/jC,KAAKuJ,MAAQ,CAAEoC,IAAKklB,GAAMO,cAO9B7hB,SACI,OAAO,uBAAKjB,UAAU,UAAUpC,MAAO,CAAE0F,gBAAiB,UACtD,uBAAKtD,UAAU,WACX,gBAAC,aAAD,CAAWpC,MAAO,CAAEq8C,aAAc,QAASl3C,MAAO,OAAQ8K,SAAU,WAChE,gBAAC,KAAD,CAAMyB,iBAAiB,IAAI4qC,YAAY,OAAO78C,IAAK3L,KAAKuJ,MAAMoC,KAC1D,gBAAC,GAAD,CAASoS,IAAK,gBAAC,IAAD,CAAkBzR,GAAG,YAAcX,IAAK,GAClD,gBAAC,GAAD,CAAgBgL,OAAQ3W,QAE5B,gBAAC,GAAD,CAAS+d,IAAK,gBAAC,IAAD,CAAkBzR,GAAG,WAAaX,IAAK,GACjD,gBAAC,GAAD,CAAegL,OAAQ3W,QAE3B,gBAAC,GAAD,CAAS+d,IAAK,gBAAC,IAAD,CAAkBzR,GAAG,QAAUX,IAAK,GAC9C,gBAAC,GAAD,CAAYgL,OAAQ3W,QAExB,gBAAC,GAAD,CAAS+d,IAAK,gBAAC,IAAD,CAAkBzR,GAAG,UAAYX,IAAK,GAChD,gBAACixC,GAAD,CAAcjmC,OAAQ3W,QAE1B,gBAAC,GAAD,CAAS+d,IAAK,gBAAC,IAAD,CAAkBzR,GAAG,UAAYX,IAAK,IAChD,gBAAC,GAAD,OAEJ,gBAAC,GAAD,CAASoS,IAAK,gBAAC,IAAD,CAAkBzR,GAAG,SAAWX,IAAK,KAC/C,gBAAC,KAAD,CAAM68C,YAAY,QACd,gBAAC,GAAD,CAASzqC,IAAK,gBAAC,IAAD,CAAkBzR,GAAG,SAAWX,IAAK,GAC/C,gBAAC,GAAD,CAAagL,OAAQ3W,QAEzB,gBAAC,GAAD,CAAS+d,IAAK,gBAAC,IAAD,CAAkBzR,GAAG,UAAYX,IAAK,GAChD,gBAAC0xC,GAAD,CAAc1mC,OAAQ3W,QAE1B,gBAAC,GAAD,CAAS+d,IAAK,gBAAC,IAAD,CAAkBzR,GAAG,WAAaX,IAAK,GACjD,gBAACk1C,GAAD,CAAelqC,OAAQ3W,QAE3B,gBAAC,GAAD,CAAS+d,IAAK,gBAAC,IAAD,CAAkBzR,GAAG,UAAYX,IAAK,GAChD,gBAACm4C,GAAD,OAEJ,gBAAC,GAAD,CAAS/lC,IAAK,gBAAC,IAAD,CAAkBzR,GAAG,SAAWX,IAAK,GAC/C,gBAAC,GAAD,CAAagL,OAAQ3W,QAEzB,gBAAC,GAAD,CAAS+d,IAAK,gBAAC,IAAD,CAAkBzR,GAAG,WAAaX,IAAK,IACjD,gBAACy8C,GAAD,cCrE7B,MAAMK,GAAqBvlB,GAAe,cAAcA,EAAY,eAAD,oBACtE0I,cAAkB5+B,IACMhN,KAAKuJ,MAAMm/C,YAE3B1oD,KAAKqJ,SAAS,CAACq/C,aAAa1oD,KAAKuJ,MAAMm/C,cAEvC1oD,KAAKqJ,SAAS,CAACq/C,aAAa1oD,KAAKuJ,MAAMm/C,YAAYC,eAAe37C,KANJ,KAWtE8nC,SAAY9nC,IACRhN,KAAKqJ,SAAS,CAACu/C,iBAAgB,EAAKC,YAAY77C,OCZ3C87C,GAAgB5lB,GAAe,cAAcA,EAAY,eAAD,iCACjE6I,cADiE,uCACjD,WAAOjoC,EAAK+nC,GAAZ,SAAAhoC,EAAA,sDACZ,EAAKwF,SAAS,CAAC4jC,cAAa,IAC5B,EAAKprB,WAAWlS,OAAO7L,EAAK+nC,EAAOyC,QACnC,EAAKjlC,SAAS,CAAC4jC,cAAa,IAHhB,2CADiD,6DAOjEY,sBAAwB,KACpB7tC,KAAK+oD,WAAW1/C,SAAS,CAAEsC,IAAKsiB,KAAKklB,YARwB,KAWjErF,qBAAuB,KACnB9tC,KAAKgjC,gBAAgB35B,SAAS,CAACgiC,cAAcxa,GAAMO,kB,oCCLpD,MAAM43B,GAAY9lB,GAAe,cAAcA,EAAY,eAAD,iCAC7D+lB,qBAAuB/4C,IAAS,CAC5Bg5C,eAAgB,EAAGC,kBAAiBp9C,eAAc+5B,UAASsjB,kBACvD,uBAAKl9C,MAAO,CAAE0gB,QAAS,IACnB,gBAAC,IAAD,CACIpV,IAAKskB,IACD97B,KAAKqpD,YAAcvtB,GAEvBhI,YAAW,iBAAY5jB,GACvB7B,MAAOtC,EAAa,GACpB2R,SAAUrV,GAAK8gD,EAAgB9gD,EAAE2S,OAAO3M,MAAQ,CAAChG,EAAE2S,OAAO3M,OAAS,IACnEi7C,aAAc,IAAMtpD,KAAKiyC,aAAalmC,EAAc+5B,EAAS51B,GAC7DhE,MAAO,CAAEmF,MAAO,IAAKgL,aAAc,EAAGtK,QAAS,WAEnD,gBAAC,KAAD,KACI,gBAAC,IAAD,CACIvI,KAAK,UACLkC,QAAS,IAAM1L,KAAKiyC,aAAalmC,EAAc+5B,EAAS51B,GACxD9D,KAAM,gBAACm9C,GAAA,EAAD,MACNz2C,KAAK,QACL5G,MAAO,CAAEmF,MAAO,KALpB,UASA,gBAAC,IAAD,CAAQ3F,QAAS,IAAM1L,KAAKwpD,YAAYJ,GAAet2C,KAAK,QAAQ5G,MAAO,CAAEmF,MAAO,KAApF,WAMZo4C,WAAYC,GAAY,gBAACH,GAAA,EAAD,CAAgBr9C,MAAO,CAAE0H,MAAO81C,EAAW,eAAYnoD,KAC/EooD,SAAU,CAACt7C,EAAOyM,KAAW,EAC7B8uC,8BAA+Bz+C,IACvBA,GACAyY,WAAW,IAAM5jB,KAAKqpD,YAAY36B,WAG1Cnf,OAAQvN,GACJhC,KAAKuJ,MAAMsgD,iBAAmB35C,EAC1B,gBAAC,KAAD,CACI45C,eAAgB,CAAEl4C,gBAAiB,UAAWgb,QAAS,GACvDm9B,YAAa,CAAC/pD,KAAKuJ,MAAMygD,YACzBC,YAAU,EACVC,gBAAiBloD,EAAOA,EAAKyN,WAAa,KAG5CzP,KAAKmqD,QAAQnoD,KA9CkC,KAkD7DiwC,aAlD6D,uCAkD9C,WAAOlmC,EAAc+5B,EAAS51B,GAA9B,qBAAArM,EAAA,6DACLuV,EAAYyX,GAAMK,mBAClB84B,EAAaj+C,EAAa,GAC1B89C,EAAiBh5B,GAAMuB,SAASliB,GAChC1P,EAAS,CACX4Y,YACA3W,IAAI,iBAAD,OAAmB,EAAKshC,SAASkI,oBAAoB7yB,UAArD,gCACKywC,EADL,mBAC8BG,EAD9B,iBACiD5wC,EADjD,MAGP0sB,IACA,EAAKz8B,SAAS,CACVsS,SAAS,IAXF,SAaL,EAAKooB,SAASoI,MAAM3rC,GAbf,OAcX,EAAK6I,SAAS,CACVsS,SAAS,EACTquC,WAAYj+C,EAAa,GACzB89C,eAAgB35C,IAjBT,2CAlD8C,+DAuE7Ds5C,YAAcJ,IACVA,IACAppD,KAAKqJ,SAAS,CAAE2gD,WAAY,Q,yBC5E7B,MAAMI,GAAkBlnB,GAAe,cAAcA,EAAY,eAAD,iCACnEmnB,aADmE,uCACpD,WAAO7gD,EAAKohC,GAAZ,eAAA/mC,EAAA,sDACX,EAAKwF,SAAS,CACVsS,SAAS,IAEPvC,EAAYyX,GAAMK,mBAJb,KAKJ1nB,EALI,OAMF,UANE,OAmBF,oBAnBE,uCAOG,EAAKu6B,SAASoI,MAAM,CACtB/yB,UAAWA,EACX3W,IAAI,gBAAD,OAAkBouB,GAAMuB,SAASwY,GAAjC,wCACI,EAAK7G,SAASkI,oBAAoB7yB,UADtC,oCAEEA,EAFF,6BATJ,cAcH,EAAK/P,SAAS,CACVsS,SAAS,IAfV,2CAoBG,EAAKooB,SAASoI,MAAM,CACtB/yB,UAAWA,EACX3W,IAAI,yBAAD,OAA2BouB,GAAMuB,SAASwY,GAA1C,wCACI,EAAK7G,SAASkI,oBAAoB7yB,UADtC,oCAEEA,EAFF,6BAtBJ,eA2BH,EAAK/P,SAAS,CACVsS,SAAS,IA5BV,2BAiCX,EAAKtS,SAAS,CACVsS,SAAS,IAlCF,4CADoD,6DAuClE2uC,SAAYr6C,IACT,MAAMs6C,EACF,gBAAC,IAAD,CAAM7+C,QAAUsH,IACZhT,KAAKqqD,aAAar3C,EAAIrH,IAAIsE,EAAK7I,QAEjC,gBAAC,IAAK6E,KAAN,CAAWN,IAAI,QAAQS,KAAM,gBAACo+C,GAAA,EAAD,OAA7B,SAGA,gBAAC,IAAKv+C,KAAN,CAAWN,IAAI,kBAAkBS,KAAM,gBAACo+C,GAAA,EAAD,OAAvC,mBAKJ,OAAO,gBAAC,KAAD,CAAUC,QAASF,GAC1B,4BAAOt6C,EAAK7I,KAAK,gBAAC,KAAD,CAASoC,KAAK,aAAY,gBAACy4B,GAAA,EAAD,WChD/BhzB,EAAQ,KAEf,MAAMy7C,WAA0BnnB,GAAI35B,aAAiBu5B,KAChE6lB,GACAoB,KAEAxqD,YAAYmK,GACRoF,MAAMpF,GADS,KAgBnBogD,QAAW78B,GACA,uBAAKxc,cAAgBkC,IACxBA,EAAInH,iBACJmH,EAAIlH,kBACJ9L,KAAKqJ,SAAS,CAACoH,KAAK,CAACC,SAAQ,EAAK5Q,QAAQwtB,OAE1CA,GAtBW,KAyBnBq9B,iBAAmB16C,IACQA,EAAf7I,KADgB,MACVoC,EAASyG,EAATzG,KAGd,GAAsB,kBAAVA,GAAwC,iBAAVA,EACtC,MAAO,CAAC6E,EAAOyM,KACX,MAAMwS,EAAIxlB,KAAKC,UAAUsG,GAC1B,OAAOrO,KAAKmqD,QAAQ78B,IAI3B,OAAQ9jB,GACJ,IAAK,SAAU,MAAO,CAAC6E,EAAOyM,IAClB9a,KAAKmqD,QAAQ97C,GAEzB,QACI,MAAO,CAACA,EAAOyM,IAAoBkY,OAAO3kB,KAzCnC,KA8CnBu8C,iBAAmB36C,IAAS,MAChB7I,EAAe6I,EAAf7I,KACR,OADuB6I,EAATzG,MAEV,IAAK,SAAU,OAAOxJ,KAAKipD,qBAAqB7hD,GAChD,IAAK,QACL,IAAK,MACL,QACI,MAAO,KArDA,KAyDnByjD,sBAAwB56C,GACbjQ,KAAKsqD,SAASr6C,GA1DN,KA6DnBN,OAAS,CAACG,EAAMO,KACZ,IAAIy6C,GAAS,EACTz6C,EAAQ,IAA0B,SAApBA,EAAQ,GAAGjJ,MAAmBiJ,EAAQ,IAA0B,SAApBA,EAAQ,GAAGjJ,OACrE0jD,GAAS,GAEb,MAAMC,EAAa16C,EAAQuC,IAAI3C,GACpB,2BACAA,GADP,IAEIC,UAAWD,EAAK7I,KAChB8D,MAAOlL,KAAK6qD,sBAAsB56C,GAClCV,OAAQvP,KAAK2qD,iBAAiB16C,GAC9BoB,MAAO,IACP25C,SAAU,aACVC,SAAU,CAACC,WAAU,IAClBlrD,KAAK4qD,iBAAiB36C,KAIjCjQ,KAAKqJ,SAAS,CAAEgH,QAAS06C,EAAYjnD,KAAMgM,EAAMg7C,YA/ElC,KAkFnBn6C,eAAiB,KACb3Q,KAAKqJ,SAAS,CACVoH,KAAM,CACFC,SAAS,MAnFjB1Q,KAAK4Q,WAAa7G,EAAMmC,OAAS,GACjClM,KAAKuJ,MAAQ,CACT8G,QAAS,GACTP,KAAM,GACNW,KAAM,CAAEC,SAAS,GACjBs5C,WAAY,GACZH,eAAgB,GAChBluC,SAAS,EACTmvC,QAAQ,GAEZ9qD,KAAKsP,OAAS,GACdtP,KAAK+jC,SAAW0E,GAAiB1E,SA6ErCx0B,SAEI,OAAIvP,KAAKuJ,MAAMuhD,OACJ9zC,GAAUzH,OAAOvP,KAAKuJ,MAAMzF,MAE/B,uBAAKoI,MAAOlM,KAAK4Q,YACrB,gBAAC,KAAD,CACI+K,QAAS3b,KAAKuJ,MAAMoS,QACpB7I,KAAK,UACLzC,QAASrQ,KAAKuJ,MAAM8G,QACpBU,WAAY/Q,KAAKuJ,MAAMzF,KACvBk8B,OAAQ,CAAE9rB,EAAG,iBAGjB,gBAAC,KAAD,CACIhJ,MAAO,OACPC,QAASnL,KAAKuJ,MAAMkH,KAAKC,QACzBtF,SAAUpL,KAAK2Q,eACftF,KAAMrL,KAAK2Q,eACXpF,WAAW,SACXyF,OAAO,MAEP,gBAAC,KAAD,CACQM,OAAQ,QACRD,MAAO,OACPrF,KAAK,OACLkQ,MAAM,SACN9U,KAAK,aACLiH,MAAOrO,KAAKuJ,MAAMkH,KAAK3Q,SAAW,Q,4JC7H1D,SAASqrD,GAAsBphD,GACP2D,KAAOC,IAAV,MAAjB,MAIMy9C,EAASC,eACf,OACI,yBAAK/8C,UAAU,oCACX,kBAAC,KAAD,CAAUpC,MAAO,CAACmQ,aAAa,SAC3B,kBAAC,KAASU,MAAV,CAAgBY,OAAQ,oCACpB,kBAAC,IAAD,CAAQvR,KAAM,kBAACk/C,GAAA,EAAD,MAAwB5/C,QAAUsH,IACpDA,EAAInH,iBACJmH,EAAIlH,kBACJs/C,EAAO7uC,MAAMvJ,MAEb,kBAAC,KAAD,CAASxJ,KAAK,aACd,kBAAC,IAAD,CAAkB8C,GAAG,oBAQjB,kBAAC,KAAD,CAAY8+C,OAAQA,GAChB,kBAAC,GAAD,CAAgB5zC,IAAMwG,GAAOyqB,GAAiB1E,SAASglB,WAAa/qC,QC1B5F,SAASutC,GAAqBxhD,GAC1B,MAAMqhD,EAASC,eACf,OACI,kBAAC,KAAD,CAAUztC,iBAAkB,IAAK1R,MAAO,CAAEmQ,aAAc,OAAOhL,MAAO,SAClE,kBAAC,KAAS0L,MAAV,CAAgBpR,IAAI,IAAIgS,OAAQ,oCAC/B8qB,GAAiB1E,SAASS,WAAa,oCACxC,kBAAC,IAAD,CAAQp4B,KAAM,kBAACk/C,GAAA,EAAD,MAAwB5/C,QAAUsH,IAC5CA,EAAInH,iBACJmH,EAAIlH,kBACJs/C,EAAO7uC,MAAMvJ,MAEjB,kBAAC,KAAD,CAASxJ,KAAK,cAEd,kBAAC,IAAD,CAAkB8C,GAAG,iBACjB,kBAAC,KAAD,CAAY8+C,OAAQA,GAChB,kBAAC,GAAD,CAAmBx6C,WAAY,CAAES,MAAO,OAASmG,IAAMwG,GAAOyqB,GAAiB1E,SAASliB,WAAa7D,OCJzH,MAAMyqB,WAAyBlF,GAAI35B,aAC/Bu5B,KAAKmI,GACDU,GACAyc,GACAK,KAEJlpD,YAAYmK,GACRoF,MAAMpF,GACN/J,KAAK0D,OAAS,IAAIvB,cAClBnC,KAAKuJ,MAAQ,CAAE0jC,cAAc,GAE7BjtC,KAAK0rC,KAAO,GACZjD,GAAiB1E,SAAW/jC,KAGhC6W,qBAKA20C,qBACI,OAAIxrD,KAAKuJ,MAAMoiC,aACJ,gBAAC,GAAD,MAEP3rC,KAAKwkC,UAEE,gBAAC2mB,GAAD,MAEA,gBAAC,KAAD,CAAQj/C,MAAO,CAAEmF,MAAO,QAC3BnG,MAAM,iCACNugD,SAAS,yFAKrBl8C,SACI,OAAO,uBAAKjB,UAAU,UAClB,uBAAKA,UAAU,gBACX,gBAAC,aAAD,CAAWpC,MAAO,CAAE42B,aAAc,OAAQC,YAAa,UACnD,gBAAC,GAAD,CAAUvrB,IAAMwG,GAAOhe,KAAKgjC,gBAAkBhlB,EAAIrH,OAAQ3W,SAGlE,uBAAKsO,UAAU,iBACX,gBAAC,KAAD,CACIpD,MAAO,UACPC,QAASnL,KAAKuJ,MAAMm/C,cAAe,EACnCt9C,SAAUpL,KAAK4rC,cACfvgC,KAAMrL,KAAK4rC,cACXrgC,WAAW,SACX8F,MAAM,MACNL,OAAO,MAGP,gBAAC,KAAD,CACIM,OAAQ,QACRD,MAAO,OACPrF,KAAK,OACLkQ,MAAM,SACN9U,KAAK,aACLiH,MAAOrO,KAAKuJ,MAAMo/C,gBAAkB,MAG5C,gBAAC,KAAD,CACIz9C,MAAO,UACPC,QAASnL,KAAKuJ,MAAMq/C,kBAAmB,EACvCx9C,SAAU,KAAQpL,KAAKqJ,SAAS,CAAEu/C,iBAAiB,KACnDv9C,KAAM,KAAQrL,KAAKqJ,SAAS,CAAEu/C,iBAAiB,KAC/Cr9C,WAAW,SACXyF,OAAO,MAENhR,KAAKuJ,MAAMs/C,aAEhB,uBAAKv6C,UAAU,mBACVtO,KAAKwrD,sBAEV,uBAAKl9C,UAAU,iBACX,gBAACi9C,GAAD,UA5Ed9iB,GAKK1E,cAAWxiC,EA6EPknC,U,SCjG+C9kC,IAAYC,aAAZ,uCAAyB,WAAOrD,GAAP,2BAAAsD,EAAA,+DAE5BtD,EAAOuD,KAAtD4nD,EAF2E,EAE3EA,eAAgBC,EAF2D,EAE3DA,YAAan/C,EAF8C,EAE9CA,cAC/BhM,EAAS,QACOe,IAAnBmqD,IACClrD,EAAOif,SAAWisC,QAEHnqD,IAAhBoqD,IACCnrD,EAAO4e,MAAQusC,QAEEpqD,IAAlBiL,IACChM,EAAOkS,QAAUlG,GAGf9I,EAAS,IAAIvB,cAdgE,SAejEuB,EAAON,KAAKd,UAAaqC,SAAUnE,GAf8B,UAiBhE,OAFb+B,EAf6E,QAiB3E1C,OAjB2E,0CAkBxE,CACHiE,KAAM,CACF8nD,cAAc,KApByD,iCAwB5E,CACH9nD,KAAM,CACF7B,MAAOM,EAAIzC,WA1BgE,4CAAzB,uDAAtC+rD,G,GAAT7nD,QAAkC8nD,G,GAARvrD,O,GCF4BoD,IAAYC,aAAZ,uCAAyB,WAAOrD,GAAP,SAAAsD,EAAA,+EACnF,CACHC,KAAK,eACEvD,EAAOuD,QAHwE,2CAAzB,uDAA/CC,G,GAARC,QAAqCC,G,GAAP1D,OCE5C,MAAMwrD,OACKC,WAAa,YADlBD,GAEKE,UAAY,WAEvB,MAAMC,GAAuB,CACzB,CAACH,GAAwBC,YAAaH,GACtC,CAACE,GAAwBE,WAAYloD,IAGzC,SAASooD,GAAoB5iD,EAAOhJ,GAChC,OAAQA,EAAOiJ,MACX,KAAKuiD,GAAwBC,WACzB,OAAOF,GAASviD,EAAOhJ,EAAOuD,MAClC,KAAKioD,GAAwBE,UACzB,OAAOhoD,GAAesF,EAAOhJ,EAAOuD,MACxC,QACI,OAAOyF,G,sBCVnB,MAAMyE,GAAY,CACd29C,aAAa,EACbD,gBAAgB,EAChBl/C,eAAe,EACfo/C,cAAc,EACd3pD,WAAOV,EACPoa,SAAS,GAGPywC,GAAoBxiD,IAAMC,gBAEhC,SAASwiD,KAAc,MAAD,EACSj+C,0BAAgB+9C,GAAqBn+C,GAAWk+C,IADzD,mBACX3iD,EADW,KACJY,EADI,OAEqB3C,EAAQ2G,cAAvC7F,EAFU,EAEVA,eAAgBM,EAFN,EAEMA,WAEhB+iD,EAE0BpiD,EAF1BoiD,YAAaD,EAEaniD,EAFbmiD,eACjBl/C,EAC8BjD,EAD9BiD,cACAo/C,EAA8BriD,EAA9BqiD,aAAa3pD,EAAiBsH,EAAjBtH,MAAM0Z,EAAWpS,EAAXoS,QANL,4CAQlB,8BAAA9X,EAAA,6DACUH,EAAS,IAAIvB,cADvB,SAE0BuB,EAAOrB,IAAIC,UAAaoC,SAAU,IAF5D,OAG2B,OADjBwF,EAFV,QAGgBrK,QACRsK,EAAU,CACNX,KAAMuiD,GAAwBE,UAC9BnoD,KAAM,CACF6nD,YAAa9kD,QAAQqD,EAAQpK,QAAQsf,OACrCssC,eAAgB7kD,QAAQqD,EAAQpK,QAAQ2f,UACxCjT,cAAe3F,QAAQqD,EAAQpK,QAAQ4S,SACvCiJ,SAAS,KAVzB,4CARkB,sBA6BlB,OALA3Q,oBAAU,MAxBQ,mCAyBdshD,IACF,CAACV,EAAa3pD,IAIZ,kBAACmqD,GAAkBnhD,SAAnB,CAA4BoD,MAAO,CAAElE,cAChCyhD,GAAgB,kBAAC,IAAD,CACb/9C,UAAQ,EACRC,QAAQ,UACRrC,YAAY,gBACZjC,KAAK,UACL+iD,UAAQ,IAEXtqD,GAAS,kBAAC,IAAD,CACN4L,UAAQ,EACRC,QAAQ,OACRrC,YAAaxJ,EACbuH,KAAK,QACL+iD,UAAQ,IAGR5wC,GAAW,kBAAC,GAAD,OAEbA,GAAW,kBAAC,IAAD,CAAMzQ,MAAM,kCACrB,kBAAC,IAAD,iBAAU5C,EAAV,CAA0BgG,UAAU,aAAaC,SAAWC,IACxDrE,EAAUxG,IAAY2H,WAAWygD,GAAwBC,WAAYx9C,OAErE,kBAAC,IAAKvC,KAAN,CACIwC,MAAM,0BACNrH,KAAK,kBAEL,kBAAC,KAAD,CAAQ4sC,eAAgB0X,EAAgBc,gBAAgB,SAASC,kBAAkB,cAGvF,kBAAC,IAAKxgD,KAAN,CACIwC,MAAM,mBACNrH,KAAK,eAEL,kBAAC,KAAD,CAAQ4sC,eAAgB2X,EAAaa,gBAAgB,SAASC,kBAAkB,cAGpF,kBAAC,IAAKxgD,KAAN,CACIwC,MAAM,sBACNrH,KAAK,iBAEL,kBAAC,KAAD,CAAQ4sC,eAAgBxnC,EAAeggD,gBAAgB,SAASC,kBAAkB,cAGtF,kBAAC,IAAKxgD,KAASrD,EACX,kBAAC,IAAD,CAAQY,KAAK,UAAUqF,SAAS,UAAhC,a,cCzFxB,SAAS69C,GAAa3iD,GAAQ,MAClBwR,EAAgFxR,EAAhFwR,aAAcoxC,EAAkE5iD,EAAlE4iD,cAAuBC,EAA2C7iD,EAAnDytC,OAAgCqV,EAAmB9iD,EAA3BqmB,OADpC,EAEVyQ,IAAKC,UAAbzE,EAFkB,sBAGG/xB,mBAAS,IAHZ,mBAGlBuhC,EAHkB,KAGVihB,EAHU,OAIDxiD,mBAAS,IAJR,mBAIlBxG,EAJkB,KAIZof,EAJY,OAKG5Y,mBAAS,IALZ,mBAKlBwpC,EALkB,KAKViZ,EALU,OAMKziD,oBAAS,GANd,mBAMlBqR,EANkB,KAMT8J,EANS,OAOWnb,oBAAS,GAPpB,mBAOlB0iD,EAPkB,KAONC,EAPM,OAQC3iD,wBAAS/I,GARV,mBAQlBU,EARkB,KAQX0mC,EARW,OAUyCukB,aAAeppD,GAAzE8pB,EAViB,EAUjBA,KAAMwC,EAVW,EAUXA,OAAQ+8B,EAVG,EAUHA,OAAQC,EAVL,EAUKA,KAAMjsD,EAVX,EAUWA,KAAgBksD,GAV3B,EAUiBC,SAVjB,EAU2BD,WAC5C9mB,EAAmBlK,EAAnBkK,eAERv7B,oBAAU,KACNqiD,EAAUvpD,IACX,CAACA,IAEJ,MAoBMuM,EApBWw7B,EAAOpxB,OAAOxK,GAAiB,OAATA,GAAe2C,IAAI3C,GAClDsL,GAAgBA,EAAatL,GAAcsL,EAAatL,GAAM,CAAEk9C,WAC7D,CACHjiD,MAAO+E,EACPC,UAAWD,EACXtE,IAAKsE,EACLV,OAAQ,CAACvN,EAAMuO,EAAKJ,IAChB,oCACI,kBAAC,IAAKlE,KAAN,CAAW7E,KAAI,iBAAY+lD,EAAOh9C,GAAnB,aAA8BF,GAAQq6B,aAActoC,GAC/D,kBAAC,IAAD,CACIkK,MAAO,CACHmF,MAAO,IACP8iC,YAAa,UAQhB/S,OAAO,CAAC,CAC7Bz1B,IAAK,UACLT,MAAO,GACPgF,UAAW,UACXX,OAAQ,CAACvN,EAAMuO,EAAKJ,IAEhB,oCACI,kBAAC,IAAKlE,KAAN,CAAW7E,KAAI,iBAAY+lD,EAAOh9C,GAAnB,cACX,kBAAC,IAAOsgB,MAAR,KACI,kBAAC,IAAD,CAAQjnB,KAAK,SAASkC,QAAS,KACvBmhD,GACAA,EAAe,CAACt8C,MAAIkV,eAExB2K,EAAOjgB,KAJX,gBA2Bdo9C,EAAY9tB,sBAAajxB,IAC3Bu+C,EAAUv+C,GACV,IAAIg/C,EAAM,0BACE,uCAAG,4BAAA3pD,EAAA,sDACLrD,EAAS,GACf0C,OAAOw3B,QAAQlsB,GAAQoE,IAAI,EAAEs+B,EAAWuc,MACpC,MAAMC,EAAUF,EAAIG,KAAKzc,GACnB/gC,EAAQ8iB,OAAOy6B,EAAQ,IACvBtyC,EAAQsyC,EAAQ,GACjBltD,EAAO2P,KACR3P,EAAO2P,GAAS,IAEhBs9C,IACAjtD,EAAO2P,GAAOiL,GAASqyC,KAG3Bb,GACAA,EAAe,CAAEpsD,SAAQilB,eAdlB,2CAAH,qDAiBZ+xB,IACD,CAAC/xB,IAgEJ,MAAO,CAAE2a,GA9DE,KACP,IAAK4sB,EAAY,CACb,MAAMjC,EAAa16C,EAAQuC,IAAI3C,IAC3BA,EAAI,OAAa,CAACjO,EAAMuO,EAAKJ,IAClB,8BAAOnO,GAEXiO,IAEX,OAAO,kBAAC,KAAD,CACHI,QAAS06C,EACTh6C,WAAYjN,EACZgtC,YAAY,IAGpB,OAAO,oCACH,kBAAC,IAAD,CAAMzU,KAAMA,GACR,kBAAC,KAAD,CACIgpB,UAAW,CAACuI,EAAUC,IAAaT,EAAKQ,EAAUC,GAClDC,eAAgB,8BAEf7rD,GAAS,kBAAC,GAAD,CAAU6L,QAAS7L,IAC7B,kBAAC,KAAD,CACIoO,QAASA,EACTU,WAAY6c,EACZmgC,OAAQ,CAACC,EAAG79C,IAAUg9C,EAAOh9C,GAAOV,WACpCqhC,YAAY,KAGpB,kBAAC,IAAD,CACI5kC,MAAO,CACHurC,UAAW,GAEfv+B,OAAK,EACL1P,KAAK,SACLkC,QAAS,IACLvK,EArEF,MACd,GAAIwrD,EACA,OAAOA,EAAct8C,GAEzB,MAAM49C,EAAU,GAIhB,OAHA59C,EAAQuC,IAAI3C,IACRg+C,EAAQh+C,GAAQ,KAEbg+C,GA6DcC,KAPb,aAYA,kBAAC,IAAD,CACI1kD,KAAK,UACL0C,MAAO,CACHurC,UAAW,IAEf97B,QAASA,EACTjQ,QAAS,KACL6hD,EAAUhnB,OAPlB,UAYCx8B,EAAMokD,OAAS,yBACZjiD,MAAO,CACHmP,WAAY,QAGfy4B,GAAM,mBAAgBhsC,KAAKC,UAAU+rC,EAAQ,KAAM,QAKvDhwC,OAAM+nC,SAAQ3oB,UAAS4pC,YAAWrnC,aAAYwnC,gBAAetkB,YC5J9E,SAASylB,GAAQrkD,GAAQ,MAAD,EAEQO,wBAAS/I,GAFjB,mBAEbsa,EAFa,KAELwyC,EAFK,KAGdzoC,EAAQ,IAAIzjB,cAHE,EAIuCuqD,GAAa,CACpEt8B,OAAO,WAAD,4BAAE,YAAO,IAAC7f,EAAD,WAAKkV,IAAZ,eAAA5hB,EAAA,6DACJ4hB,GAAW,GACXkjB,OAASpnC,GAFL,SAGcqkB,EAAMxiB,KAAKd,UAAa4C,cAAe,CAACoH,GAAGiE,EAAIjE,KAH7D,UAIc,OADZ/J,EAHF,QAIG1C,OAJH,uBAKA4lB,GAAW,GACXkjB,EAASpmC,EAAIzC,SANb,0BASJuuD,EAAUx9B,GAAMO,cAChB3L,GAAW,GAVP,4CAAF,mDAAC,GAYP+xB,OAAO,WAAD,4BAAE,YAAO,OAAEh3C,EAAF,WAAUilB,IAAjB,iBAAA5hB,EAAA,sDACJ4hB,GAAW,GACXkjB,OAASpnC,GACA6sB,EAAI,EAHT,YAGYA,EAAI5tB,EAAOa,QAHvB,iCAIkBukB,EAAMxiB,KAAKd,UAAayC,WAAYvE,EAAO4tB,IAJ7D,UAKkB,OADZ7rB,EAJN,QAKO1C,OALP,wBAMI4lB,GAAW,GACXkjB,EAASpmC,EAAIzC,SAPjB,2BAG+BsuB,IAH/B,uBAWJigC,EAAUx9B,GAAMO,cAChB3L,GAAW,GAZP,4CAAF,mDAAC,GAcPlK,aAAc,CACVvY,SAAU,EAAGmqD,aACF,CACHjiD,MAAO,WACPgF,UAAW,WACXvE,IAAK,WACL4D,OAAQ,CAACvN,EAAMuO,EAAKJ,KAChB,IAAI9B,GAAQ,EAIZ,OAHa,IAATrM,IACAqM,GAAQ,GAEL,oCACH,kBAAC,IAAKpC,KAAN,CAAW7E,KAAI,iBAAY+lD,EAAOh9C,GAAnB,cAAuCm6B,aAActX,OAAO3kB,IACvE,kBAAC,KAAD,KACI,kBAAC,KAAOyX,OAAR,CAAezX,MAAM,QAArB,QACA,kBAAC,KAAOyX,OAAR,CAAezX,MAAM,SAArB,kBA1CxB+xB,EAJY,EAIZA,GAAIld,EAJQ,EAIRA,QAAS4pC,EAJD,EAICA,UAAWG,EAJZ,EAIYA,cAAetkB,EAJ3B,EAI2BA,SAgE/C,OAXA39B,oBAAU,MACK,uCAAG,4BAAAnH,EAAA,sEACQ+hB,EAAMvjB,IAAIC,UAAa2C,YAAa,IAD5C,OAES,OADb1C,EADI,QAEF1C,SACJitD,EAAUvqD,EAAIzC,QAAQ+rC,QACtB3oB,EAAQ3gB,EAAIzC,QAAQgE,OAJd,2CAAH,qDAOXhC,IACD,CAAC+Z,IAEG,yBAAKvN,UAAU,iBAClB,kBAAC,KAAD,CAAQk+C,gBAAgB,YAAYC,kBAAkB,YAAY/uC,SAC7DuZ,IACGg2B,EAAch2B,MAGtB,kBAAC,KAAD,CAASztB,KAAK,eACb42B,KCGMkuB,OA/Ef,WAA2B,MAAD,EACIhkD,wBAAS/I,GADb,mBACfU,EADe,KACR0mC,EADQ,OAEkBr+B,wBAAS/I,GAF3B,mBAEfqqD,EAFe,KAED2C,EAFC,KAIhB/W,EAAS/X,sBAAW,uCAAC,WAAOjxB,GAAP,mBAAA3K,EAAA,yDACyB2K,EAAxC1B,SAAU0hD,EAA8BhgD,EAA9BggD,YAAaC,EAAiBjgD,EAAjBigD,aAC3BD,IAAgBC,EAFG,uBAGnB9lB,EAAS,sCAHU,0BAMjB/iB,EAAQ,IAAIzjB,cACNyjB,EAAMxiB,KAAKd,UAAauD,qBAAsB2I,GAC1D+/C,EAAgB,iCARO,2CAAD,sDASvB,IAEH,OAAO,kBAAC,IAAD,CAAMjgD,UAAU,uBAClBs9C,GAAgB,kBAAC,IAAD,CACb/9C,UAAQ,EACRC,QAAQ,UACRrC,YAAY,gBACZjC,KAAK,UACL+iD,UAAQ,IAEXtqD,GAAS,kBAAC,IAAD,CACN4L,UAAQ,EACRC,QAAQ,OACRrC,YAAaxJ,EACbuH,KAAK,QACL+iD,UAAQ,IAEZ,kBAAC,IAAD,CAAMj+C,UAAU,aAAaC,SAAWC,IACpCgpC,EAAOhpC,KAGP,kBAAC,IAAKvC,KAAN,CACIwC,MAAM,qBACNrH,KAAK,WACLsH,MAAO,CACH,CACIC,UAAU,EACVb,QAAS,2CAIjB,kBAAC,IAAMc,SAAP,OAEJ,kBAAC,IAAK3C,KAAN,CACIwC,MAAM,eACNrH,KAAK,cACLsH,MAAO,CACH,CACIC,UAAU,EACVb,QAAS,qCAIjB,kBAAC,IAAMc,SAAP,OAEJ,kBAAC,IAAK3C,KAAN,CACIwC,MAAM,eACNrH,KAAK,eACLsH,MAAO,CACH,CACIC,UAAU,EACVb,QAAS,2CAIjB,kBAAC,IAAMc,SAAP,OAEJ,kBAAC,IAAK3C,KAAN,KACI,kBAAC,IAAD,CAAQzC,KAAK,UAAUqF,SAAS,UAAhC,c,MCpERpF,GAAYC,IAAZD,QAGFuE,GAAY,CACd9G,YAAa,oBAGXwnD,GAAsB9kD,IAAMC,gBAElC,SAAS8kD,KAAgB,MAAD,EACOvgD,0BAAgB+9C,GAAqBn+C,GAAWk+C,IADvD,mBACb3iD,EADa,KACNY,EADM,KAEbjD,EAAeqC,EAAfrC,YACP,OACI,kBAACwnD,GAAoBzjD,SAArB,CAA8BoD,MAAO,CAAElE,cACnC,yBAAKmE,UAAU,aACX,yBAAKA,UAAU,kBACX,kBAAC,IAAD,CACIpC,MAAO,CAAEmF,MAAO,KAChBu9C,oBAAqB,CAAC,oBACtBC,gBAAiB,CAAC,oBAClB7iD,KAAK,UAEL,kBAAC,GAAD,CACIL,IAAI,mBACJT,MACI,8BACI,kBAAC4jD,GAAA,EAAD,MACA,oDAIR,kBAAC,IAAK7iD,KAAN,CAAWN,IAAI,mBAAmBD,QAAS,KACvCvB,EAAU,CACNX,KAAK,WACL1F,KAAK,CAACoD,YAAY,wBAH1B,qBAOJ,kBAAC,GAAD,CACIyE,IAAI,kBACJT,MACI,8BACI,kBAAC4jD,GAAA,EAAD,MACA,mDAIR,kBAAC,IAAK7iD,KAAN,CAAWP,QAAS,KAChBvB,EAAU,CACNX,KAAK,WACL1F,KAAK,CAACoD,YAAY,cAEvByE,IAAI,WALP,cASZ,yBAAK2C,UAAU,kBACK,qBAAdpH,GAAoC,kBAACmlD,GAAD,MACtB,YAAdnlD,GAA2B,kBAACknD,GAAD,SC/DjD,SAASW,GAAchlD,GAAQ,MAAD,EACAO,mBAAS,IADT,mBACnBrI,EADmB,KACZ0mC,EADY,OAEIr+B,mBAAS,IAFb,mBAEnB0kD,EAFmB,KAEVC,EAFU,OAGI3kD,mBAAS,IAHb,mBAGnBC,EAHmB,KAGVC,EAHU,OAIIF,oBAAS,GAJb,mBAInBqR,EAJmB,KAIV8J,EAJU,OAKXob,IAAKC,UAAbzE,EALmB,oBAMpB/zB,EAAiB,CACnBC,SAAU,CAAEE,KAAM,GAClBE,WAAY,CAAEF,KAAM,KAqBxB,MAAO,CAAE23B,GAhBE,EAAG8uB,YAAWhkD,QAAOssC,YAC5B,uCAAKlpC,UAAU,qCAAwChG,GACnD,kBAAC,IAAD,CAAM4C,MAAOA,EAAOgB,MAAO,CAAEmF,OAAY,OAALtH,QAAK,IAALA,OAAA,EAAAA,EAAOsH,QAAO,QAC9C,kBAAC,IAAD,CAAMgrB,KAAMA,GACPp6B,GAAS,kBAAC,GAAD,CAAU6L,QAAS,kBAAC,IAAD,CAAkBxB,GAAIrK,MAClD+sD,GAAW,kBAAC,GAAD,CAAU9jD,MAAO,kBAAC,IAAD,CAAkBoB,GAAG,mBAAoB9C,KAAK,UAAUsE,QAAS,kBAAC,IAAD,CAAkBxB,GAAI0iD,MACnHE,GAEL,kBAAC,IAAKjjD,KAAN,KACI,kBAAC,IAAD,CAAQzC,KAAK,UAAUmS,QAASA,EAASjQ,QACrC8rC,GACF,kBAAC,IAAD,CAAkBlrC,GAAG,cAK1B+vB,OAAMsM,WAAUljB,aAAY0pC,UAnBvB,IACP9yB,EAAKkK,iBAkBmC/7B,aAAWD,UAAQ0kD,cCvB1E,SAASG,GAAerlD,GAAQ,MAAD,EAESglD,KAA5B3uB,EAFmB,EAEnBA,GAAIuI,EAFe,EAEfA,SAASsmB,EAFM,EAENA,WAFM,EAGA3kD,wBAAS/I,GAHT,mBAGpBmkB,EAHoB,KAGbC,EAHa,KAIrB6xB,EAAM,uCAAG,8BAAA3zC,EAAA,yDACP6hB,EADO,uBAETijB,EAAS,6BAFA,iCAKL/iB,EAAQ,IAAIzjB,cALP,SAMOyjB,EAAMxiB,KAAKd,UAAasD,WAAY,CAAExD,QAASsjB,IANtD,UAOQ,OADbnjB,EANK,QAOH1C,OAPG,wBAQP2H,EAAQ6nD,WAAW9sD,GACnB0sD,EAAW,QATJ,2BAYXtmB,EAASpmC,EAAIzC,SAZF,4CAAH,qDAeZ,OAAOsgC,EAAG,CACNl1B,MAAO,kBAAC,IAAD,CAAkBoB,GAAG,wBAC5BkrC,SACA0X,UAAW,oCACP,kBAAC,IAAKjjD,KAAN,CAAWwC,MAAO,kBAAC,IAAD,CAAkBnC,GAAG,kBAClC9E,EAAQG,cAAR,SAAoC,eAEzC,kBAAC,IAAKsE,KAAN,CAAWwC,MAAO,kBAAC,IAAD,CAAkBnC,GAAG,YACnC,kBAACkZ,GAAD,CAAkBK,UAAYH,IAAaC,EAAUD,UC1BrE,SAAS4pC,GAAavlD,GAAQ,MAAD,EAEWglD,KAA5B3uB,EAFiB,EAEjBA,GAAIuI,EAFa,EAEbA,SAASsmB,EAFI,EAEJA,WAFI,EAGgB5kB,GAAe,CACpDC,aAAa9iC,EAAQG,cAAR,eAA0C,KADjD4nD,EAHe,EAGlBnvB,GAAmBovB,EAHD,EAGLnhD,MAGdmpC,EAAM,uCAAG,8BAAA3zC,EAAA,yDACP2rD,EADO,uBAET7mB,EAAS,6BAFA,iCAKL/iB,EAAQ,IAAIzjB,cALP,SAMOyjB,EAAMxiB,KAAKd,UAAasD,WAAY,CAAE6pD,cAAeD,IAN5D,UAOQ,OADbjtD,EANK,QAOH1C,OAPG,wBAQP2H,EAAQ6nD,WAAW9sD,GACnB0sD,EAAW,QATJ,2BAYXtmB,EAASpmC,EAAIzC,SAZF,4CAAH,qDAeZ,OAAOsgC,EAAG,CACNl1B,MAAO,kBAAC,IAAD,CAAkBoB,GAAG,sBAC5BkrC,SACA0X,UAAW,oCACP,kBAAC,IAAKjjD,KAAN,CAAWwC,MAAO,kBAAC,IAAD,CAAkBnC,GAAG,kBAClCkjD,GAEL,kBAAC,IAAKvjD,KAAN,CAAWwC,MAAO,kBAAC,IAAD,CAAkBnC,GAAG,YAClCijD,QCjCjB,SAASG,GAAM3lD,GAAQ,MAAD,EAEUO,wBAAS/I,GAFnB,mBAEXsa,EAFW,KAEHwyC,EAFG,KAGZzoC,EAAQ,IAAIzjB,cAHA,EAIyCuqD,GAAa,CACpElV,OAAO,WAAD,4BAAE,YAAO,OAAEh3C,EAAF,WAAUilB,IAAjB,eAAA5hB,EAAA,sDAGJ,IAFA4hB,GAAW,GACXkjB,OAASpnC,GACA6sB,EAAI,EAAGA,EAAI5tB,EAAOa,OAAQ+sB,KAQnCigC,EAAUx9B,GAAMO,cAChB3L,GAAW,GAZP,2CAAF,mDAAC,GAcPlK,aAAc,KAfV6kB,EAJU,EAIVA,GAAIld,EAJM,EAINA,QAAS4pC,EAJH,EAIGA,UAAWG,EAJd,EAIcA,cAAetkB,EAJ7B,EAI6BA,SA6B/C,OAXA39B,oBAAU,MACK,uCAAG,4BAAAnH,EAAA,sEACQ+hB,EAAMvjB,IAAIC,UAAayD,UAAW,IAD1C,OAES,OADbxD,EADI,QAEF1C,SACJitD,EAAUvqD,EAAIzC,QAAQ+rC,QACtB3oB,EAAQ3gB,EAAIzC,QAAQgE,OAJd,2CAAH,qDAOXhC,IACD,CAAC+Z,IAEG,yBAAKvN,UAAU,iBAClB,kBAAC,KAAD,CAAQk+C,gBAAgB,YAAYC,kBAAkB,YAAY/uC,SAC7DuZ,IACGg2B,EAAch2B,MAGtB,kBAAC,KAAD,CAASztB,KAAK,eACb42B,KCxCT,SAASuvB,KAAS,MAAD,EAC8BZ,KAAnC3uB,EADK,EACLA,GAAIuI,EADC,EACDA,SAAUsmB,EADT,EACSA,WAAY5yB,EADrB,EACqBA,KAC5Bmb,EAAM,uCAAG,4CAAA3zC,EAAA,+DACoCw4B,EAAKkK,iBAA9CqpB,EADK,EACLA,KAAMC,EADD,EACCA,KAAMjsB,EADP,EACOA,GAAIn8B,EADX,EACWA,KAAMqF,EADjB,EACiBA,UAAU1F,EAD3B,EAC2BA,QAElCA,EAAOw8B,GAENisB,IACDA,EAAO,QAELjqC,EAAQ,IAAIzjB,cARP,SASOyjB,EAAMxiB,KAAKd,UAAa0D,OAAQ,CAC9C4pD,OAAMC,OAAMjsB,KAAIn8B,OAAMqF,WAAU1F,OAAMkP,OAAQ,OAAOw5C,MAAM,UAVpD,OAWQ,OAFbvtD,EATK,QAWH1C,OACJovD,EAAW,0BAEXtmB,EAASpmC,EAAIzC,SAdN,2CAAH,qDAkBZ,OAAOsgC,EACH,CACIl1B,MAAO,kBAAC,IAAD,CAAkBoB,GAAG,kBAC5BkrC,SACA0X,UAAW,oCACP,kBAAC,IAAKjjD,KAAN,CAAW7E,KAAK,OAAOuH,UAAU,EAAMF,MAAO,kBAAC,IAAD,CAAkBnC,GAAG,UAC/D,kBAAC,IAAD,CAAOwnB,YAAY,eAEvB,kBAAC,IAAK7nB,KAAN,CAAW7E,KAAK,OAAOkjC,aAAc,OAAQ77B,MAAO,kBAAC,IAAD,CAAkBnC,GAAG,UACrE,kBAAC,IAAD,OAEJ,kBAAC,IAAKL,KAAN,CAAW7E,KAAK,KAAKuH,UAAU,EAAMF,MAAO,kBAAC,IAAD,CAAkBnC,GAAG,QAC7D,kBAAC,IAAD,OAEJ,kBAAC,KAAD,MACA,kBAAC,IAAKL,KAAN,CAAW7E,KAAK,OAAOuH,UAAU,EAAMF,MAAO,kBAAC,IAAD,CAAkBnC,GAAG,UAC/D,kBAAC,IAAD,OAEJ,kBAAC,IAAKL,KAAN,CAAW7E,KAAK,WAAWuH,UAAU,EAAMF,MAAO,kBAAC,IAAD,CAAkBnC,GAAG,cACnE,kBAAC,IAAD,OAEJ,kBAAC,KAAD,MACA,kBAAC,IAAKL,KAAN,CAAW7E,KAAK,OAAOqH,MAAO,kBAAC,IAAD,CAAkBnC,GAAG,WAC/C,kBAAC,IAAD,UC3CpB,SAASyjD,KAAa,MAAD,EACWzlD,wBAAS/I,GADpB,mBACVsa,EADU,KACFwyC,EADE,KAEXzoC,EAAQ,IAAIzjB,cAFD,EAG0CuqD,GAAa,CACpElV,OAAO,WAAD,4BAAE,YAAO,OAAEh3C,EAAF,WAAUilB,IAAjB,eAAA5hB,EAAA,sDAGJ,IAFA4hB,GAAW,GACXkjB,OAASpnC,GACA6sB,EAAI,EAAGA,EAAI5tB,EAAOa,OAAQ+sB,KAQnCigC,EAAUx9B,GAAMO,cAChB3L,GAAW,GAZP,2CAAF,mDAAC,GAcP2K,OAAO,WAAD,4BAAE,WAAM7f,GAAN,eAAA1M,EAAA,sEACc+hB,EAAMxiB,KAAKd,UAAa4D,UAAU,CAACoG,GAAGiE,EAAIjE,KADxD,OAEc,OADZ/J,EADF,QAEG1C,SACHitD,EAAUvqD,EAAIzC,QAAQ+rC,QACtB3oB,EAAQ3gB,EAAIzC,QAAQgE,OAJpB,2CAAF,mDAAC,GAOPyX,aAAc,KAtBV6kB,EAHS,EAGTA,GAAIld,EAHK,EAGLA,QAAS4pC,EAHJ,EAGIA,UAAWG,EAHf,EAGeA,cAAetkB,EAH9B,EAG8BA,SAoC/C,OAXA39B,oBAAU,MACK,uCAAG,4BAAAnH,EAAA,sEACQ+hB,EAAMvjB,IAAIC,UAAa2D,QAAS,IADxC,OAES,OADb1D,EADI,QAEF1C,SACJitD,EAAUvqD,EAAIzC,QAAQ+rC,QACtB3oB,EAAQ3gB,EAAIzC,QAAQgE,OAJd,2CAAH,qDAOXhC,IACD,CAAC+Z,IAEG,yBAAKvN,UAAU,iBAClB,kBAAC,KAAD,CAAQk+C,gBAAgB,YAAYC,kBAAkB,YAAY/uC,SAC7DuZ,IACGg2B,EAAch2B,MAGtB,kBAAC,KAAD,CAASztB,KAAK,eACb42B,KC9CT,MAAM4vB,GAA4B,2BAC3Bp0B,IAD2B,IAElC,CAAC+b,GAAkBC,OAAQkL,KAGrBmN,GAA2B,2BAC1Bp0B,IAD0B,IAEjC,CAAC8b,GAAkBC,OAAQmL,KAI3B,SAASmN,GAA4B3mD,EAAOhJ,GAC5C,OAAO0vD,GAA4B1vD,EAAOiJ,MAAMD,EAAOhJ,EAAOuD,MCL9D,MAAMqsD,GAA0DpmD,IAAiB,MAAD,EACrDO,mBAAsC,MADe,mBACrErK,EADqE,KAChEmwD,EADgE,OAEnD9lD,mBAAc,MAFqC,mBAErE0a,EAFqE,KAE/DqrC,EAF+D,KAsB5E,OAjBArlD,oBAAU,KACN,MAQM1H,EAAOsf,YARF,uCAAG,gCAAA/e,EAAA,6DACJ+hB,EAAQ,IAAIzjB,cADR,SAEQyjB,EAAMvjB,IAAIC,UAAakE,oBAAoB,CAAC3D,MAAOkH,EAAM3C,OAFjE,OAGQ,OADZ7E,EAFI,QAGH1C,SACGyD,EAAOf,EAAIzC,QACjBswD,EAAQ9sD,IALF,2CAAH,qDAQoB,KAE/B,OADA+sD,EAAS/sD,GACF,KACH0f,cAAcgC,KAEpB,IAIE,oCACI,kBAAC,KAAD,CAASsrC,YAAY,QAAO,kBAAC,IAAD,CAAkBhkD,GAAI,SAClD,kBAAC,KAAD,CACIylC,UAAQ,EACRhhC,WAAU,OAAE9Q,QAAF,IAAEA,OAAF,EAAEA,EAAM6N,QAClB6yC,WAAY1wC,GACR,kBAAC,KAAKhE,KAAN,KACKgE,OC/BnBjC,GAAY,CAChBuiD,aAAa,EACb7tC,WAAa,IAGT8tC,GAA8B5mD,IAAMC,cAA8D,MAElG4mD,GAAuD1mD,IAAW,MAAD,EACxCqE,0BAAgB8hD,GAA6BliD,GAAWgiD,IADhB,mBAC5DzmD,EAD4D,KACrDY,EADqD,KAE5DomD,EAA0BhnD,EAA1BgnD,YAAY7tC,EAAcnZ,EAAdmZ,WAFgD,EAGhCqsC,GAAc,CAAC19C,MAAM,QAAhD+uB,EAH2D,EAG3DA,GAAIuI,EAHuD,EAGvDA,SAASwmB,EAH8C,EAG9CA,UACf3X,EAAM,uCAAG,kCAAA3zC,EAAA,6DACL+hB,EAAQ,IAAIzjB,cACZ3B,EAAS2uD,IAFJ,SAGOvpC,EAAMxiB,KAAKd,UAAagE,oBAAoB9F,GAHnD,OAIX,GAAkB,OADZ+B,EAHK,QAIJ1C,OACH8oC,EAAS,IACTx+B,EAAU,CACNX,KAAMmuC,GAAkBtuC,SACxBvF,KAAM,CACFysD,aAAa,EACb7tC,WAAYliB,EAAM,cAK1B,IACImoC,GAAS,UAAA7gC,KAAKM,MAAM7F,EAAIzC,gBAAf,eAAyBgO,UAAW,iBAChD,MAAOzF,GACJsgC,EAAStgC,EAAEoD,aAlBR,2CAAH,qDA8BZ,OANAT,oBAAU,OAIP,IAGC,kBAACwlD,GAA4BvlD,SAA7B,CAAsCoD,MAAQ,CAAE9E,QAAMY,cAClD,6BAEQomD,EACI,kBAACJ,GAAD,CAAwB/oD,KAAMsb,IAC5B0d,EAAG,CACLl1B,MAAO,kBAAC,IAAD,CAAkBoB,GAAG,kBAC5BkrC,SACA0X,UAAW,oCACP,kBAAC,KAAD,CACIrvD,OAAO,UACPqL,MAAO,kBAAC,IAAD,CAAkBoB,GAAG,QAC5B8b,MAAO,kBAAC,IAAD,CAAkB9b,GAAG,UAEhC,kBAAC,KAAD,CAASgkD,YAAY,QAAO,kBAAC,IAAD,CAAkBhkD,GAAG,oBACjD,kBAAC,IAAKL,KAAN,CAAW7E,KAAM,QAASqH,MAAO,kBAAC,IAAD,CAAkBnC,GAAG,gBAAiBktB,KAAM,gBACzE,kBAAC,IAAD,OAEJ,kBAAC,IAAKvtB,KAAN,CAAW7E,KAAM,YAAaqH,MAAO,kBAAC,IAAD,CAAkBnC,GAAG,cAAektB,KAAM,uEAC3E,kBAAC,IAAD,OAEJ,kBAAC,IAAKvtB,KAAN,CAAW7E,KAAM,cAAeqH,MAAO,kBAAC,IAAD,CAAkBnC,GAAG,kBAAmBktB,KAAM,gBACjF,kBAAC,IAAD,OAEJ,kBAAC,IAAKvtB,KAAN,CAAW7E,KAAM,kBAAmBqH,MAAO,kBAAC,IAAD,CAAkBnC,GAAG,sBAAuBktB,KAAM,gBACzF,kBAAC,IAAD,OAEJ,kBAAC,IAAKvtB,KAAN,CAAW7E,KAAM,iBAAkBqH,MAAO,kBAAC,IAAD,CAAkBnC,GAAG,sBAAuBktB,KAAM,sCACxF,kBAAC,IAAD,OAEJ,kBAAC,IAAKvtB,KAAN,CAAW7E,KAAM,qBAAsBqH,MAAO,kBAAC,IAAD,CAAkBnC,GAAG,0BAA2BktB,KAAM,sCAChG,kBAAC,IAAD,OAEJ,kBAAC,IAAKvtB,KAAN,CAAW7E,KAAM,UAAWqH,MAAO,kBAAC,IAAD,CAAkBnC,GAAG,aAAcg+B,aAAc,eAChF,kBAAC,IAAD,OAEJ,kBAAC,IAAKr+B,KAAN,CAAWykD,cAAc,UAAWpmB,cAAc,EAAMljC,KAAM,uBAAwBqH,MAAO,kBAAC,IAAD,CAAkBnC,GAAG,4BAC9G,kBAAC,KAAD,OAEJ,kBAAC,KAAD,CAASgkD,YAAY,QAAO,kBAAC,IAAD,CAAkBhkD,GAAG,qBAIjD,kBAAC,IAAKL,KAAN,CAAW7E,KAAM,gBAAiBqH,MAAO,kBAAC,IAAD,CAAkBnC,GAAG,oBAAqBg+B,aAAc,GAC7F,kBAAC,KAAD,CACIC,IAAK,EACLrc,IAAK,EACLyiC,MAAO,CACHC,EAAG,KACHC,EAAG,KACHC,EAAG,KACHC,EAAG,SAIf,kBAAC,IAAK9kD,KAAN,CAAW7E,KAAM,eAAgBqH,MAAO,kBAAC,IAAD,CAAkBnC,GAAG,kBAAmBg+B,aAAc,GAC1F,kBAAC,KAAD,CACIC,IAAK,EACLrc,IAAK,EACLyiC,MAAO,CACHE,EAAG,KACHC,EAAG,KACHC,EAAG,SAIf,kBAAC,IAAK9kD,KAAN,CAAW7E,KAAM,kBAAmBqH,MAAO,kBAAC,IAAD,CAAkBnC,GAAG,sBAAuBg+B,aAAc,GACjG,kBAAC,KAAD,CACIC,IAAK,EACLrc,IAAK,EACLyiC,MAAO,CACHC,EAAG,KACHC,EAAG,KACHC,EAAG,KACHC,EAAG,SAIf,kBAAC,IAAK9kD,KAAN,CAAW7E,KAAM,iBAAkBqH,MAAO,kBAAC,IAAD,CAAkBnC,GAAG,oBAAqBg+B,aAAc,GAC9F,kBAAC,KAAD,CACIC,IAAK,EACLrc,IAAK,EACLyiC,MAAO,CACHE,EAAG,KACHC,EAAG,KACHC,EAAG,SAIf,kBAAC,IAAK9kD,KAAN,CAAW7E,KAAM,cAAeqH,MAAO,kBAAC,IAAD,CAAkBnC,GAAG,iBAAkBg+B,aAAc,GACxF,kBAAC,KAAD,CACIC,IAAK,EACLrc,IAAK,EACLyiC,MAAO,CACHC,EAAG,IACHE,EAAG,IACHC,EAAG,QAIf,kBAAC,IAAK9kD,KAAN,CAAW7E,KAAM,gBAAiBqH,MAAO,kBAAC,IAAD,CAAkBnC,GAAG,mBAAoBg+B,aAAc,SAC5F,kBAAC,KAAD,KACI,kBAAC,KAAOxkB,OAAR,CAAezX,MAAO,SAAtB,WAGR,kBAAC,IAAKpC,KAAN,CAAW7E,KAAM,mBAAoBqH,MAAO,kBAAC,IAAD,CAAkBnC,GAAG,uBAAwBg+B,aAAc,kBACnG,kBAAC,KAAD,KACI,kBAAC,KAAOxkB,OAAR,CAAezX,MAAO,kBAAtB,0BCvJ9B2iD,GAAqBjnD,IAAkB,MAAD,EAEZO,mBAAS,IAFG,mBAEjCob,EAFiC,KAEzBC,EAFyB,OAGVrb,mBAAmB,IAHT,mBAGjC2mD,EAHiC,KAGxBC,EAHwB,OAIH5mD,mBAAiB,IAJd,mBAIjC6mD,EAJiC,KAIrBC,EAJqB,KAOxCpmD,oBAAU,MACK,uCAAG,gCAAAnH,EAAA,6DACJ+hB,EAAQ,IAAIzjB,cADR,SAEQyjB,EAAMvjB,IAAIC,UAAamE,kBAAmB,IAFlD,OAGS,OADblE,EAFI,QAGF1C,SACEyD,EAAOf,EAAIzC,QACjBoxD,EAAW5tD,EAAKQ,OALV,2CAAH,qDAQXhC,IACD,IAjBqC,QAoBkBitD,KAAnD3uB,EApBiC,EAoBjCA,GAAIuI,EApB6B,EAoB7BA,SAAUsmB,EApBmB,EAoBnBA,WAAuBxpC,GApBJ,EAoBP0pC,UApBO,EAoBI1pC,YACtC+xB,EAAM,uCAAG,8BAAA3zC,EAAA,yDACX8kC,EAAS,IACTyoB,EAAe,IACf3rC,GAAW,GACPC,EAJO,uBAKPijB,EAAS,OALF,iCAQL/iB,EAAQ,IAAIzjB,cARP,SASOyjB,EAAMxiB,KAAKd,UAAaiE,oBAAqB,CAAC1D,MAAM6iB,IAT3D,OAUQ,OADbnjB,EATK,QAUH1C,OACJovD,EAAW,mBAEXtmB,EAAS,eACTyoB,EAAe7uD,EAAIzC,UAEvB2lB,GAAW,GAhBA,4CAAH,qDAyBN4rC,EAAY,uCAAG,WAAOhjD,GAAP,SAAAxK,EAAA,sDACjB8hB,EAAUtX,GADO,2CAAH,sDAIlB,OAAO+xB,EAAG,CACNl1B,MAAO,kBAAC,IAAD,CAAkBoB,GAAG,wBAC5BkrC,SACA0X,UAAW,oCACNiC,GAAe,kBAAC,KAAD,CACZtxD,OAAO,UACPuoB,MAAO+oC,IAEX,kBAAC,IAAKllD,KAAN,CAAW7E,KAAM,OAAQqH,MAAO,kBAAC,IAAD,CAAkBnC,GAAI,SAClD,kBAAC,KAAD,CAAQoR,SAAU2zC,GAlBnBJ,EAAQr+C,IAAK3C,GACT,kBAAC,KAAO6V,OAAR,CAAezX,MAAO4B,EAAMtE,IAAKsE,GAAOA,UCxCrDqhD,GAAavnD,IAAkB,MAAD,EAEjB82B,IAAKC,UAAbzE,EAFyB,sBAGT/xB,mBAAwB,IAHf,mBAGzBxG,EAHyB,KAGpBof,EAHoB,OAIL5Y,mBAAwB,IAJnB,mBAIzBinD,EAJyB,KAIlBC,EAJkB,KAK1BlpD,EAAiB,CACnBC,SAAU,CAACE,KAAM,GACjBE,WAAY,CAACF,KAAM,KAGvBuC,oBAAU,MACK,uCAAG,gCAAAnH,EAAA,6DACJ+hB,EAAQ,IAAIzjB,cADR,SAEQyjB,EAAMvjB,IAAIC,UAAamE,kBAAmB,IAFlD,OAGS,OADblE,EAFI,QAGF1C,SACAyD,EAAOf,EAAIzC,QACjBojB,EAAQ5f,EAAKQ,OALL,2CAAH,qDAQXhC,IACD,IAEH,MAMMuvD,EAAY,uCAAG,WAAOhjD,GAAP,mBAAAxK,EAAA,6DACX+hB,EAAQ,IAAIzjB,cADD,SAECyjB,EAAMvjB,IAAIC,UAAakE,oBAAqB,CAAC3D,MAAOwL,IAFrD,OAGE,OADb9L,EAFW,QAGT1C,SACEyD,EAAOf,EAAIzC,QACjB0xD,EAAUluD,EAAKwK,UALF,2CAAH,sDAqClB,OA1BQ,oCACI,uCAAKQ,UAAU,qCAAwChG,GACnD,kBAAC,IAAD,CAAM4C,MAAO,kBAAC,IAAD,CAAkBoB,GAAI,qBAAuBJ,MAAO,CAACmF,MAAO,QACrE,kBAAC,IAAD,CAAMgrB,KAAMA,GACR,kBAAC,IAAKpwB,KAAN,CAAW7E,KAAM,OAAQqH,MAAO,kBAAC,IAAD,CAAkBnC,GAAI,SAClD,kBAAC,KAAD,CAAQoR,SAAU2zC,GArBnCvtD,EAAK8O,IAAK3C,GACN,kBAAC,KAAO6V,OAAR,CAAezX,MAAO4B,EAAMtE,IAAKsE,GAAOA,MAwB/B,kBAAC,KAAD,CAASqgD,YAAY,QAAO,kBAAC,IAAD,CAAkBhkD,GAAI,SAClD,kBAAC,KAAD,CACIylC,UAAQ,EACRhhC,WAAYwgD,EACZ5Q,WAAY1wC,GACR,kBAAC,KAAKhE,KAAN,KACKgE,UC3DnCwhD,GAAkB1nD,IAAiB,MAAD,EAErB82B,IAAKC,UAAbzE,EAF6B,sBAGX/xB,mBAAS,IAHE,mBAG7BrI,EAH6B,KAGvB0mC,EAHuB,OAIPr+B,mBAAS,IAJF,mBAI7B0kD,EAJ6B,KAIrBC,EAJqB,OAKP3kD,oBAAS,GALF,mBAK7BqR,EAL6B,UAMpC3Q,oBAAU,OAIL,IAEL,MAAMwsC,EAAM,uCAAG,gCAAA3zC,EAAA,6DACX8kC,EAAS,IACTsmB,EAAW,IACLrpC,EAAQ,IAAIzjB,cACZ3B,EAAS67B,EAAKkK,iBAJT,SAKO3gB,EAAMxiB,KAAKd,UAAa0C,gBAAgBxE,GAL/C,OAMO,OADZ+B,EALK,QAMJ1C,OACHovD,EAAW,WAEXtmB,EAASpmC,EAAIzC,SATN,2CAAH,qDAiEZ,OA7CQ,oCACI,uCAAKwO,UAAU,qCANA,CACnB/F,SAAU,CAACE,KAAM,GACjBE,WAAY,CAACF,KAAM,MAKX,kBAAC,IAAD,CAAMyC,MAAO,kBAAC,IAAD,CAAkBoB,GAAI,QAAUJ,MAAO,CAACmF,MAAO,QACxD,kBAAC,IAAD,CAAMgrB,KAAMA,GACPp6B,GAAS,kBAAC,GAAD,CAAU6L,QAAS,kBAAC,IAAD,CAAkBxB,GAAIrK,MAClD+sD,GAAW,kBAAC,GAAD,CAAU9jD,MAAO,kBAAC,IAAD,CAAkBoB,GAAG,mBAAoB9C,KAAK,UAAUsE,QAAS,kBAAC,IAAD,CAAkBxB,GAAI0iD,MACpH,kBAAC,IAAK/iD,KAAN,CAAW7E,KAAM,OAAQqH,MAAO,kBAAC,IAAD,CAAkBnC,GAAG,UACjD,kBAAC,IAAD,OAEJ,kBAAC,IAAKL,KAAN,CAAW7E,KAAM,MAAOqH,MAAO,kBAAC,IAAD,CAAkBnC,GAAG,SAChD,kBAAC,IAAD,OAEJ,kBAAC,IAAKL,KAAN,CAAW7E,KAAM,OAAQqH,MAAO,kBAAC,IAAD,CAAkBnC,GAAG,UACjD,kBAAC,IAAD,OAEJ,kBAAC,IAAKL,KAAN,CAAW7E,KAAM,aAAcqH,MAAO,kBAAC,IAAD,CAAkBnC,GAAG,eAAgBg+B,aAAc,8BACrF,kBAAC,IAAD,OAEJ,kBAAC,IAAKr+B,KAAN,CAAW7E,KAAM,gBAAiBqH,MAAO,kBAAC,IAAD,CAAkBnC,GAAG,kBAAmBg+B,aAAc,8BAC3F,kBAAC,IAAD,OAEJ,kBAAC,IAAKr+B,KAAN,CAAW7E,KAAM,gBAAiBqH,MAAO,kBAAC,IAAD,CAAkBnC,GAAG,kBAAmBg+B,aAAc,8BAC3F,kBAAC,IAAD,OAEJ,kBAAC,IAAKr+B,KAAN,CAAWykD,cAAc,UAAWpmB,cAAc,EAAMljC,KAAM,WAAYqH,MAAO,kBAAC,IAAD,CAAkBnC,GAAG,cAClG,kBAAC,KAAD,OAEJ,kBAAC,IAAKL,KAAN,CAAW7E,KAAM,YAAaqH,MAAO,kBAAC,IAAD,CAAkBnC,GAAG,cAAeg+B,aAAc,MACnF,kBAAC,IAAD,OAEJ,kBAAC,IAAKr+B,KAAN,CAAW7E,KAAM,cAAeqH,MAAO,kBAAC,IAAD,CAAkBnC,GAAG,iBACxD,kBAAC,IAAD,OAEJ,kBAAC,IAAKL,KAAN,KACI,kBAAC,IAAD,CAAQzC,KAAK,UAAUmS,QAASA,EAASjQ,QACrC8rC,GACF,kBAAC,IAAD,CAAkBlrC,GAAG,iBC7D/C7C,GAAYC,IAAZD,QACR,SAASioD,KAAY,MAAD,EACsBpnD,mBAAS,mBAD/B,mBACTpD,EADS,KACIyqD,EADJ,KAEhB,OACI,yBAAKrjD,UAAU,aACX,yBAAKA,UAAU,kBACX,kBAAC,IAAD,CACIpC,MAAO,CAAEmF,MAAO,KAChBu9C,oBAAqB,CAAC,mBACtBC,gBAAiB,CAAC,qBAClB7iD,KAAK,UAEL,kBAAC,GAAD,CACIL,IAAI,oBACJT,MACI,8BACI,kBAAC4jD,GAAA,EAAD,MACA,8BAAM,kBAAC,IAAD,CAAkBxiD,GAAG,yBAInC,kBAAC,IAAKL,KAAN,CAAWN,IAAI,kBAAkBD,QAAS,KACtCimD,EAAe,qBAChB,kBAAC,IAAD,CAAkBrlD,GAAG,gBACxB,kBAAC,IAAKL,KAAN,CAAWN,IAAI,cAAcD,QAAS,KAClCimD,EAAe,iBAChB,kBAAC,IAAD,CAAkBrlD,GAAG,kBAE5B,kBAAC,GAAD,CAASX,IAAI,OAAOT,MAChB,8BACI,kBAAC4jD,GAAA,EAAD,MACA,8BAAM,kBAAC,IAAD,CAAkBxiD,GAAG,qBAG/B,kBAAC,IAAKL,KAAN,CAAWN,IAAI,wBAGXD,QAAS,KACLimD,EAAe,2BAChB,kBAAC,IAAD,CAAkBrlD,GAAG,sBAGhC,kBAAC,GAAD,CAASX,IAAI,OAAOT,MAChB,8BACI,kBAAC4jD,GAAA,EAAD,MACA,8BAAM,kBAAC,IAAD,CAAkBxiD,GAAG,YAG/B,kBAAC,IAAKL,KAAN,CAAWN,IAAI,eACXD,QAAS,KACLimD,EAAe,kBAChB,kBAAC,IAAD,CAAkBrlD,GAAG,mBAEhC,kBAAC,GAAD,CAASX,IAAI,aAAaT,MACtB,8BACI,kBAAC4jD,GAAA,EAAD,MACA,8BAAM,kBAAC,IAAD,CAAkBxiD,GAAG,kBAG/B,kBAAC,IAAKL,KAAN,CAAWN,IAAI,QACXD,QAAS,KACLimD,EAAe,WAChB,kBAAC,IAAD,CAAkBrlD,GAAG,mBAC5B,kBAAC,IAAKL,KAAN,CAAWN,IAAI,aACXD,QAAS,KACLimD,EAAe,gBAChB,kBAAC,IAAD,CAAkBrlD,GAAG,iBAGhC,kBAAC,GAAD,CAASX,IAAI,sBAAsBT,MAC/B,8BACI,kBAAC4jD,GAAA,EAAD,MACA,8BAAM,kBAAC,IAAD,CAAkBxiD,GAAG,2BAG/B,kBAAC,IAAKL,KAAN,CAAWN,IAAI,sBACJD,QAAS,KACLimD,EAAe,yBAChB,kBAAC,IAAD,CAAkBrlD,GAAG,yBACnC,kBAAC,IAAKL,KAAN,CAAWN,IAAI,sBACJD,QAAS,KACLimD,EAAe,yBAChB,kBAAC,IAAD,CAAkBrlD,GAAG,yBACnC,kBAAC,IAAKL,KAAN,CAAWN,IAAI,mBACJD,QAAS,KACLimD,EAAe,sBAChB,kBAAC,IAAD,CAAkBrlD,GAAG,uBAGvC,kBAAC,GAAD,CAASX,IAAI,MAAMT,MACf,8BACI,kBAAC4jD,GAAA,EAAD,MACA,8BAAM,kBAAC,IAAD,CAAkBxiD,GAAG,WAG/B,kBAAC,IAAKL,KAAN,CAAWN,IAAI,MACJD,QAAS,KACLimD,EAAe,SAChB,kBAAC,IAAD,CAAkBrlD,GAAG,YAK/C,yBAAKgC,UAAU,kBACM,oBAAhBpH,GAAqC,kBAACkoD,GAAD,MACrB,gBAAhBloD,GAAiC,kBAACooD,GAAD,MACjB,0BAAhBpoD,GAA2C,kBAAC,GAAD,MAC3B,iBAAhBA,GAAkC,kBAACwoD,GAAD,MAClB,UAAhBxoD,GAA2B,kBAACyoD,GAAD,MACX,eAAhBzoD,GAAgC,kBAAC6oD,GAAD,MAChB,wBAAhB7oD,GAAyC,kBAACupD,GAAD,MACzB,wBAAhBvpD,GAAyC,kBAAC8pD,GAAD,MACzB,qBAAhB9pD,GAAsC,kBAACoqD,GAAD,MACtB,QAAhBpqD,GAAyB,kBAACuqD,GAAD,QC7H1C,MAAMG,GAAO7nD,GAGL,oCACI,4BACIqN,QAAQ,gBACRlL,MAAO,CAACmF,MAAO,OAAQC,OAAQ,SAC/B0wC,IAAK,wCACL1qC,YAAY,IACZC,UAAU,SCLpBs6C,GAAY9nD,IAAiB,MAAD,EACNO,mBAAS,IADH,mBACvBxG,EADuB,KACjBof,EADiB,KAiB9B,OAfAlY,oBAAU,MACK,uCAAG,oCAAAnH,EAAA,6DACJzB,EAAUoF,EAAQG,cAAR,QACVie,EAAQ,IAAIzjB,cAFR,SAGQyjB,EAAMvjB,IAAIC,UAAa2C,YAAa,IAH5C,OAGJ1C,EAHI,OAIPH,IACO0vD,EAAWvvD,EAAIzC,QAAQgE,KACvB3D,EAAM2xD,EAASr3C,OAAQxK,GAClBA,EAAK7I,OAAShF,GACtB,GAAGjC,IACN+iB,EAAQ/iB,EAAIqa,MAAM,KAAK,GAAG,IAAIra,EAAIqa,MAAM,KAAK,GAAG,UAT1C,2CAAH,qDAYX1Y,IACD,IAEC,oCAEQgC,GAAS,4BACLsT,QAAQ,2DACRlL,MAAO,CAACmF,MAAO,OAAQC,OAAQ,SAC/B0wC,IAAKl+C,EACLwT,YAAY,IACZC,UAAU,U,eCdvB,SAASw6C,KAAa,MAAD,EACIznD,mBAA8B,IADlC,mBACjBwpC,EADiB,KACTiZ,EADS,KAElBiF,EAAY,uCAAG,gCAAAnuD,EAAA,6DACX+hB,EAAQ,IAAIzjB,cADD,SAECyjB,EAAMxiB,KAAKd,UAAaoE,aAAc,IAFvC,OAGE,OADbnE,EAFW,QAGT1C,SACEwO,EAAQ9L,EAAIzC,QAClBitD,EAAU1+C,IALG,2CAAH,qDAQZ4jD,EAAa,uCAAG,WAAO7qD,GAAP,eAAAvD,EAAA,6DACZ+hB,EAAQ,IAAIzjB,cADA,SAEZyjB,EAAMxiB,KAAKd,UAAasE,eAAgB,CAC1CQ,SAHc,OAKlB4qD,IALkB,2CAAH,sDAWnB,OAJAhnD,oBAAU,KACNgnD,KACD,IAEI,yBAAK1jD,UAAU,qCAClB,kBAAC,KAAD,CAAOyC,WAAY+iC,GACf,kBAAC,KAAMoe,OAAP,CAAchnD,MAAM,2BAAOgF,UAAU,OAAOvE,IAAI,SAChD,kBAAC,KAAMumD,OAAP,CAAchnD,MAAM,2BAAQgF,UAAU,eAAevE,IAAI,eAAe4D,OAAQ,CAAClB,EAAOyM,EAAQ3K,KAC7E,IAAX9B,EACO,oDAEPA,EAAQ,EACD,oDAEG,IAAVA,EACO,0DAEJ,uCAEX,kBAAC,KAAM6jD,OAAP,CAAchnD,MAAM,6CAAUgF,UAAU,kBAAkBvE,IAAI,kBAChD4D,OAAQ,CAAClB,EAAOyM,EAAQ3K,KAEpB,IAAIgiD,IAAY,IAAI9vC,MAAOC,UAAYjU,GAAS,IAC5C+jD,EAAW,IAAMD,EAAW,UAC5BA,EAAW,KACXC,EAAW,IAAMnkC,KAAKokC,MAAMF,EAAW,IAAM,iBAE7CA,EAAW,OACXC,EAAW,IAAMnkC,KAAKokC,MAAMF,EAAW,MAAQ,iBAE/CA,EAAW,QACXC,EAAW,IAAMnkC,KAAKokC,MAAMF,EAAQ,OAAkB,iBAE1D,MAAMG,EAAO,IAAIjwC,KAAKhU,GAEtB,OAAO,oCAAG8H,KAAOm8C,GAAMh8C,OAAO,uBAAyB87C,MAGzE,kBAAC,KAAMF,OAAP,CAAchnD,MAAM,6CAAUgF,UAAU,aAAavE,IAAI,aAAa4D,OAAQ,CAAClB,EAAOyM,EAAQ3K,IAC5E,IAAV9B,EACO,gEAEG,IAAVA,EACO,gEAEJ,uCAGX,kBAAC,KAAM6jD,OAAP,CAAchnD,MAAM,6CAAUmG,MAAM,MACtB45C,SAAU,CAACC,WAAW,GAAOh7C,UAAU,cAAcvE,IAAI,cACzD4D,OAAQ,CAAClB,EAAOyM,EAAQ3K,IACb,oCAAG9B,KAG5B,kBAAC,KAAM6jD,OAAP,CAAchnD,MAAM,eAAKgF,UAAU,UAAUvE,IAAI,UACnC4D,OAAQ,CAAClB,EAAOyM,EAAQ3K,IACb,oCACH,kBAAC,KAAD,CACIjF,MAAM,+DACNM,OAAO,MACPD,WAAW,KACXgnD,UAAW,KACPN,EAAen3C,EAA4B1T,QAG/C,kBAAC,IAAD,2B,MC3F/B+yB,GAAiBD,KAAjBC,cA0BA,SAASq4B,KACZ,MAD4B,EAKb3xB,IAAKC,UAAbzE,EALqB,sBAMF/xB,mBAAS,IANP,mBAMrBrI,EANqB,KAMd0mC,EANc,OAOEr+B,mBAAS,IAPX,mBAOrB0kD,EAPqB,KAOZC,EAPY,OAQE3kD,oBAAS,GARX,mBAQrBqR,EARqB,aASErR,oBAAS,IATX,mBASrBw7B,EATqB,KASZ2sB,EATY,OAUNnoD,mBAAqB,IAVf,mBAUrB+vB,EAVqB,KAUhBq4B,EAVgB,OAWFpoD,mBAAuD,MAXrD,mBAWrBkwB,EAXqB,KAWdm4B,EAXc,OAYRroD,mBAAgC,MAZxB,mBAYrB45B,EAZqB,KAYjB0uB,EAZiB,OAaEtoD,mBAAwB,IAb1B,mBAarB2mD,EAbqB,KAaZC,EAbY,OAciF1mB,KAAlGU,EAdiB,EAcrB9K,GAAuB+I,EAdF,EAcJ9M,KAAqBqM,EAdjB,EAciBA,aAAwBW,EAdzC,EAc+BV,SAA6BW,EAd5D,EAc4DA,kBAd5D,EAewBh/B,oBAAkB,GAf1C,mBAerBuoD,EAfqB,KAeDC,GAfC,KAiBtBhxD,GAAK,uCAAG,oCAAA+B,EAAA,6DACJ+hB,EAAQ,IAAIzjB,cADR,SAEQyjB,EAAMvjB,IAAIC,UAAa6D,aAAc,IAF7C,cAEJ5D,EAFI,OAGJ8+B,EAAW9+B,EAAIzC,QAAQgE,KAAK8O,IAAK3C,IACnCA,EAAKtE,IAAMsE,EAAK7I,KAChB6I,EAAK/E,MAAQ+E,EAAK7I,KAClB6I,EAAK2qB,QAAS,EACd3qB,EAAK4hB,SAAW5hB,EAAK42B,OAAOj0B,IAAI4nB,IACrB,CACHluB,GAAG,GAAD,OAAK2D,EAAK7I,KAAV,YAAkBozB,EAAMpzB,MAC1BuE,IAAI,GAAD,OAAKsE,EAAK7I,KAAV,YAAkBozB,EAAMpzB,MAC3B8D,MAAOsvB,EAAMpzB,KACbwzB,QAAQ,EACRxuB,KAAM,kBAACuuB,GAAA,EAAD,SAGP1qB,IAhBD,SAkBe2V,EAAMvjB,IAAIC,UAAa2C,YAAa,IAlBnD,OAmBe,MADnB8tD,EAlBI,QAmBKlzD,SACLk8C,EAAQgX,EAAWjzD,QAAQgE,KACjCotD,EAAWnV,IAEf2W,EAAOrxB,GAvBG,4CAAH,qDAyBXr2B,oBAAU,KACNlJ,MACD,IAEH,MAAM01C,GAAM,uCAAG,kCAAA3zC,EAAA,yDACXorD,EAAW,IACXtmB,EAAS,IACH/iB,EAAQ,IAAIzjB,cAEa,WADzB3B,EAAS67B,EAAKkK,kBACV,cAAiC/lC,EAAM,OALtC,uBAMPmoC,EAAS,sBANF,iCASLqqB,EAAY9vD,OAAOC,OAAO3C,EAAQ0jC,GAT7B,UAUOte,EAAMxiB,KAAKd,UAAaqE,qBAAsBqsD,GAVrD,QAWQ,OADbzwD,EAVK,QAWH1C,OACJovD,EAAW,WAEXtmB,EAASpmC,EAAIzC,SAdN,4CAAH,qDAmBZ,OAAO,oCACH,uCAAKwO,UAAU,qCAjEI,CACnB/F,SAAU,CAACE,KAAM,GACjBE,WAAY,CAACF,KAAM,MAgEf,kBAAC,IAAD,CAAMyC,MAAO,kBAAC,IAAD,CAAkBoB,GAAI,mBAAqBJ,MAAO,CAACmF,MAAO,QACnE,kBAAC,IAAD,CAAMgrB,KAAMA,GACR,kBAAC,KAAD,CACInxB,MAAO,kBAAC,IAAD,CAAkBoB,GAAG,mBAC5BnB,QAAS26B,EACT16B,SAAU,KACN+9B,EAAc3C,cACdisB,GAAW,IAEfpnD,KAAM,KACF,MAAM07B,EAAkBoC,EAAc5C,iBAC/BS,EAA2CD,EAA3CC,gBAAiBuC,EAA0BxC,EAA1BwC,WAAYC,EAAczC,EAAdyC,YAChCxC,GACKuC,IAAeC,IAAcF,IAMtCspB,EAAM,CACF5rB,kBACAuC,aACAC,aACAF,oBACA5C,QAAa,OAALlM,QAAK,IAALA,OAAA,EAAAA,EAAOkM,SAAU,GACzBttB,WAAgB,OAALohB,QAAK,IAALA,OAAA,EAAAA,EAAOphB,YAAa,KAGnC+vB,EAAc3C,cACdisB,GAAW,IAfHppB,EAAkB,iEAiB9B99B,WAAW,SACXC,OAAO,MACP,kBAAC0/B,EAAD,OAEHjpC,GAAS,kBAAC,GAAD,CAAU6L,QAAS,kBAAC,IAAD,CAAkBxB,GAAIrK,MAClD+sD,GAAW,kBAAC,GAAD,CAAU9jD,MAAO,kBAAC,IAAD,CAAkBoB,GAAG,mBAAoB9C,KAAK,UACrDsE,QAAS,kBAAC,IAAD,CAAkBxB,GAAI0iD,MACrD,kBAAC,IAAK/iD,KAAN,CAAW7E,KAAM,SACb,kBAAC,KAAD,CAAMyzB,IAAI,aAAaC,SAAUnf,GAC7B,kBAAC,GAAD,CAAerK,OAAQ,IACR+vB,SAAUhH,EACV0H,aAAa,QACbjxB,cAAe,CAACkC,EAAK8oB,KACjB,IAAKA,EAAKlB,OACN,OAFsB,QAIGkB,EAAKnwB,IAAe6O,MAAM,KAJ7B,mBAInBksB,EAJmB,KAIXttB,EAJW,KAK1Bu5C,EAAS,CAACjsB,SAAQttB,cAClBsvB,EAAa5M,EAAKnwB,KAClB8mD,GAAW,IACZjzB,aAAc,EAAEhvB,QAAOsrB,iBAKjD,kBAAC,IAAK7vB,KAAN,CAAW7E,KAAM,OAAQqH,MAAO,kBAAC,IAAD,CAAkBnC,GAAG,8BACjD,8BAAOkuB,EAAQA,EAAMkM,OAAS,IAAMlM,EAAMphB,UAAY,uBAG1D,kBAAC,IAAKnN,KAAN,CAAW7E,KAAM,cAAeqH,MAAO,kBAAC,IAAD,CAAkBnC,GAAG,8BACxD,kBAAC,KAAD,CAAQoR,SAAU,CAACrP,EAAOsmB,KACR,YAAVtmB,GACAykD,IAAsB,GAEZ,UAAVzkD,GACAykD,IAAsB,KAG1B,kBAAC,KAAOhtC,OAAR,CAAezX,MAAO,SAAtB,gBACA,kBAAC,KAAOyX,OAAR,CAAezX,MAAO,WAAtB,kBAKJwkD,EACI,kBAAC,IAAK5mD,KAAN,CAAW7E,KAAM,eAAgBqH,MAAO,kBAAC,IAAD,CAAkBnC,GAAG,qCACzD,kBAAC,IAAD,OACW,qCAIlBumD,EAGkB,qCAFf,kBAAC,IAAK5mD,KAAN,CAAW7E,KAAM,SAAUqH,MAAO,kBAAC,IAAD,CAAkBnC,GAAG,gDACnD,kBAAC,IAAD,OAIZ,kBAAC,IAAKL,KAAN,CAAW7E,KAAM,aAAcqH,MAAO,kBAAC,IAAD,CAAkBnC,GAAG,4DACvD,kBAAC,KAAD,KAGQ2kD,EAAQr+C,IAAI3C,GACD,kBAAC,KAAO6V,OAAR,CAAezX,MAAO4B,EAAK7I,MAAO6I,EAAK7I,SAc9D,kBAAC,IAAK6E,KAAN,KACI,kBAAC,IAAD,CAAQzC,KAAK,UAAUmS,QAASA,EAASjQ,QACrC8rC,IACF,kBAAC,IAAD,CAAkBlrC,GAAG,gB,MC3MxC7C,GAAWC,IAAXD,QAEP,SAASwpD,KAAgB,MAAD,EACkB3oD,mBAAS,gBAD3B,mBACbpD,EADa,KACAyqD,EADA,KAEpB,OACI,yBAAKrjD,UAAU,aACX,yBAAKA,UAAU,kBACX,kBAAC,IAAD,CACIpC,MAAO,CAACmF,MAAO,KACfu9C,oBAAqB,CAAC,gBACtBC,gBAAiB,CAAC,yBAClB7iD,KAAK,UAEL,kBAAC,GAAD,CACIL,IAAI,wBACJT,MAAO,8BAAM,kBAAC4jD,GAAA,EAAD,MAAe,8BAAM,kBAAC,IAAD,CAAkBxiD,GAAG,6BAIvD,kBAAC,IAAKL,KAAN,CAAWN,IAAI,eAAeD,QAAS,KACnCimD,EAAe,kBAChB,kBAAC,IAAD,CAAkBrlD,GAAG,kBAExB,kBAAC,IAAKL,KAAN,CAAWN,IAAI,iBAAiBD,QAAS,KACrCimD,EAAe,oBAChB,kBAAC,IAAD,CAAkBrlD,GAAG,qBAG5B,kBAAC,GAAD,CACIX,IAAI,wBACJT,MAAO,8BAAM,kBAAC4jD,GAAA,EAAD,MAAe,8BAAM,kBAAC,IAAD,CAAkBxiD,GAAG,gCAenE,yBAAKgC,UAAU,kBACM,iBAAhBpH,GAAkC,kBAAC6qD,GAAD,MAClB,mBAAhB7qD,GAAoC,kBAACsrD,GAAD,Q,yBCpDtC,MAAMU,WAAmBtpD,YAEpChK,YAAYmK,GACRoF,MAAMpF,GACN/J,KAAKmzD,IAAMppD,EAAMopD,IACjBnzD,KAAKuJ,MAAQ,CAACzJ,QAAS,IAI3B+W,oBACI7W,KAAKqJ,SAAS,CACVvJ,QAASoD,OAAOw3B,QAAQ16B,KAAKmzD,IAAIC,kBAAkB34C,OAAQxK,GAChDA,EAAK,IACb2C,IAAK3C,GACE,OAAN,OAAcA,EAAK,GAAnB,eAA4BA,EAAK,GAAjC,SACD3O,KAAK,MAJC,4BAI6BtB,KAAKmzD,IAAIE,oBAJtC,QASjB9jD,SAEI,OAGI,uBAAKjB,UAAU,gBACVpC,MAAO,CAAC,aAAc,SACvB,2BACKlM,KAAKuJ,MAAMzJ,WC7BhC,MAAM6vC,GAAOC,KAAMD,KACbrnC,GAAiB,CACnBC,SAAU,CAACE,KAAM,GACjBE,WAAY,CAACF,KAAM,IAEjB6qD,GAAiB,CACnB/qD,SAAU,CAACE,KAAM,GACjBE,WAAY,CAACF,KAAM,EAAGI,OAAQ,IAGlC,MAAM0qD,WAAyB3pD,YAE3BhK,YAAYmK,GACRoF,MAAMpF,GADS,KAwBnBypD,UAAavjD,IACT,GAAIA,EAAK8D,eAAe,SACpB,OAAO,gBAAC,GAAD,CAAYo/C,IAAKnzD,KAAKmzD,MAIjC,OAFkBljD,EAAI,OAEL2C,IAAKi1C,GACX,gBAAC,IAAK57C,KAAN,iBAAe3D,GAAf,CAA+BlB,KAAMygD,EAAQ,KAAUp5C,MAAOo5C,EAAQ,KAAUn5C,MAAO,CAAC,CAACC,UAAU,MACtG,gBAAC,IAAD,CAAOnF,KAAK,QAAQsqB,YAAa+zB,EAAQ,UA9BjD7nD,KAAKuJ,MAAQ,CACTgB,QAAS,EACTqmC,MAAO7mC,EAAM6mC,MAAMxP,OAAO,CAAC,CAACjZ,KAAM,eAAgB,OAAS,MAE/DnoB,KAAKmzD,IAAMppD,EAAM4M,OACjB3W,KAAKy0C,QAAU7qC,cAGnB6kC,OACIzuC,KAAKy0C,QAAQlqC,QAAQkpD,iBAAiB30C,KAAKtQ,IACvCkE,QAAQC,IAAI,4BAA6BnE,GACzC,MAAMjE,EAAUvK,KAAKuJ,MAAMgB,QAAU,EACrCvK,KAAKqJ,SAAS,CAACkB,YACfvK,KAAKmzD,IAAIO,UAAUllD,KAI3B8F,OACI,MAAM/J,EAAUvK,KAAKuJ,MAAMgB,QAAU,EACrCvK,KAAKqJ,SAAS,CAACkB,YAiBnBgF,SAAU,MACChF,EAAWvK,KAAKuJ,MAAhBgB,QACP,OACI,2BAEI,gBAAC,KAAD,CAAOA,QAASA,GACXvK,KAAKuJ,MAAMqnC,MAAMh+B,IAAI3C,GAAQ,gBAAC,GAAD,CAAMtE,IAAKsE,EAAKkY,KAAMjd,MAAO+E,EAAKkY,SAEpE,uBAAK7Z,UAAU,gBACVpC,MAAO,CAAC,aAAc,SACvB,gBAAC,IAAD,CAAM6lC,UAAU,GACZ,gBAAC,IAAD,eAAMv6B,IAAKxX,KAAKy0C,SAAa6e,GAA7B,CAA6CpnD,MAAO,CAACmF,MAAO,WACvDrR,KAAKwzD,UAAUxzD,KAAKuJ,MAAMqnC,MAAMrmC,OAM7C,uBAAK+D,UAAU,eAAepC,MAAO,CAACurC,UAAW,SAEzCltC,EAAUvK,KAAKuJ,MAAMqnC,MAAMvvC,OAAS,GACjC,gBAAC,IAAD,CAAQmI,KAAK,UAAUkC,QAAS,IAAM1L,KAAKyuC,QAA3C,aAGHlkC,IAAYvK,KAAKuJ,MAAMqnC,MAAMvvC,OAAS,GACnC,gBAAC,IAAD,CAAQmI,KAAK,UAAUkC,QAAS,IAAMoC,KAAQkhD,QAAQ,yBAAtD,QAGHzkD,EAAU,GAEN,gBAAC,IAAD,CAAQ2B,MAAO,CAACynD,WAAY,GAAIjoD,QAAS,IAAM1L,KAAKsU,QAApD,oBAarB,MAAMs/C,GAAuBL,GCvFhCM,GACAC,KADAD,OAAQE,GACRD,KADQC,QAASC,GACjBF,KADiBE,OAAQC,GACzBH,KADyBG,MAId,MAAMC,WAAiBtqD,YAClChK,YAAYmK,GACRoF,MAAMpF,GADS,KAqBnB2pD,UAAazjD,IACT/M,OAAOC,OAAOnD,KAAKozD,iBAAkBnjD,IAtBtB,KAyBnBkkD,QAAW5R,IACPviD,KAAKqzD,oBAAsB9Q,EACf,IAAI3jC,GAAS1N,IACrBuP,aAAa,GAAjB,8BAA4C8hC,EAA5C,iBAAuErgD,IAEnElC,KAAKqJ,SAAS,CACV+qD,YAAalyD,EAAK0Q,IAAK3C,GACZnI,KAAKM,MAAM6H,EAAI,OAAWjQ,KAAKqzD,qBAA/B,eAGhBlzC,QAjCHngB,KAAKuJ,MAAQ,CAAC8qD,UAAW,GAAID,YAAa,IAC1Cp0D,KAAKozD,iBAAmB,GAI5Bv8C,oBACgB,IAAI+H,GAAS1N,IACrBuP,aAAa,GAAjB,yBAA+Cve,IAC3ClC,KAAKqJ,SAAS,CAACgrD,UAAWnyD,GAAO,KACzBA,EAAKb,OAAS,GACdrB,KAAKm0D,QAAQjyD,EAAK,GAAL,eAGtBie,OAwBP5Q,SACI,OACI,gBAAC,KAAD,CAAQrD,MAAO,CAACooD,UAAW,UACvB,gBAACL,GAAD,KACI,uBAAK3lD,UAAU,SACf,gBAAC,IAAD,CAAM4N,MAAM,OAAO0yC,oBAAqB,CAAC,KAAM5iD,KAAK,UAC/ChM,KAAKuJ,MAAM8qD,UAAUzhD,IAAK3C,GACX,gBAAC,IAAKhE,KAAN,CAAWN,IAAI,IAAID,QAAS,KAChC1L,KAAKm0D,QAAQlkD,EAAI,cAEhBA,EAAI,eAOzB,gBAAC,KAAD,KACI,gBAAC4jD,GAAD,CAAQ3nD,MAAO,CAACqU,WAAY,OAAQqM,QAAS,KAC7C,gBAACmnC,GAAD,CAAS7nD,MAAO,CAAC+I,OAAQ,WACrB,uBAAK/I,MAAO,CAAC0gB,QAAS,GAAIrM,WAAY,OAAQ+zC,UAAW,MACpDt0D,KAAKuJ,MAAM6qD,YAAYxhD,IAAK3C,GAClB,gBAAC2jD,GAAD,CAAsBj9C,OAAQ3W,KACR4wC,MAAO3gC,OAIhD,gBAAC+jD,GAAD,CAAQ9nD,MAAO,CAACkZ,UAAW,eC9ExC,MAAMmvC,WAA8B3qD,YACvChK,YAAYmK,GACRoF,MAAMpF,GAGVwF,SAEI,OACI,uBAAKrD,MAAO,CAACmF,MAAM,SACf,gBAAC,GAAD,QCOhB,MAAMrD,GAAY,CACd9G,YAAa,QACbG,SAAS,GAGPgD,GAAoBT,IAAMC,gBAEhC,SAAS2qD,GAAWzqD,GAAQ,MACjBG,EAAWH,EAAXG,QADgB,EAEIkE,0BAAgB9E,EAAmB0E,GAAW5E,GAFlD,mBAEhBG,EAFgB,KAETY,EAFS,KAGfjD,EAAyBqC,EAAzBrC,YAAaG,EAAYkC,EAAZlC,QAMrB,OAJA2D,oBAAU,KACNb,EAAUxG,IAAY2H,WAAWrC,EAAsBE,cAAe,MACvE,IAGC,kBAACkB,GAAkBY,SAAnB,CAA4BoD,MAAO,CAAElE,cACjC,yBAAKmE,UAAU,eACX,yBAAKA,UAAU,sBACX,kBAACxE,EAAD,CAAeI,QAASA,EAASF,YAAa3C,EAAS4C,YAAazC,EAAQkD,UAAWxD,YAAaA,KAExG,yBAAKoH,UAAU,oBACM,aAAhBpH,GAA8B,kBAAC,GAAD,MACd,aAAhBA,IAA+BG,GAAW,kBAAC0H,GAAD,MAC1B,YAAhB7H,GAA6BG,GAAW,kBAAC,GAAD,MACxB,oBAAhBH,GAAqCG,GAAW,kBAAC4rD,GAAD,MAChC,aAAhB/rD,GAA8BG,GAAW,kBAAC,GAAD,MACzB,UAAhBH,GAA2BG,GAAWG,EAAQkD,WAAa,kBAAC,GAAD,MAC3C,aAAhBxD,GAA8BG,GAAW,kBAACqqD,GAAD,MACzB,QAAhBxqD,GAAyB,kBAAC0qD,GAAD,MACT,WAAhB1qD,GAA4BG,GAAW,kBAACwqD,GAAD,MACvB,iBAAhB3qD,GAAkCG,GAAW,kBAAC,GAAD,OAElD,yBAAKiH,UAAU,sBACX,yBAAKpC,MAAO,CAAEkJ,OAAQ,QAASgQ,UAAW,SAAU/T,MAAO,SAA3D,0DAC2D,uBAAG/C,UAAU,YAChE+pB,KAAK,gCAD8C,iCAEvD,iCAAM,uBAAGrd,OAAO,SACZqd,KAAK,+EAA8E,yBAC/E2pB,IAAI,KAFN,4D,SCrDyCr+C,IAAYC,aAAZ,uCAAyB,WAAOrD,GAAP,uBAAAsD,EAAA,6DACtFH,EAAS,IAAIvB,cADyE,EAEtE5B,EAAOuD,KAArBsD,EAFoF,EAEpFA,KAAMjH,EAF8E,EAE9EA,IAF8E,SAG1EuD,EAAON,KAAKd,UAAayC,WAAY,CAAEqC,OAAMjH,QAH6B,UAIzE,OADboC,EAHsF,QAIpF1C,OAJoF,yCAKjF,CACHiE,KAAM,CACF7B,MAAO6F,KAAKM,MAAM7F,EAAIzC,SAASkN,OAPiD,gCAWrF,CACHlJ,KAAM,CACF7B,WAAOV,EACPgJ,QAAShK,EAAOuI,QAAQyB,QAAU,KAdkD,2CAAzB,uDAAjDkqD,G,GAARzwD,QAAsC0wD,G,GAAPn0D,O,GCDkCoD,IAAYC,aAAZ,uCAAyB,WAAOrD,GAAP,SAAAsD,EAAA,+EAC7F,CACHC,KAAM,CACF7B,WAAOV,EACPgJ,QAAShK,EAAOuI,QAAQyB,QAAU,KAJ0D,2CAAzB,uDAAzDoqD,G,GAAR3wD,QAA0C4wD,G,GAAPr0D,OCCjD,MAAMs0D,OACKC,cAAc,gBADnBD,GAEKE,UAAY,YAFjBF,GAGKG,cAAgB,gBAG3B,MAAMC,GAA0B,CAC5B,CAACJ,GAAoBC,eAAgB5nD,EACrC,CAAC2nD,GAAoBE,WAAYN,GACjC,CAACI,GAAoBG,eAAgBL,IAGzC,SAASO,GAAgB3rD,EAAOhJ,GAC5B,OAAQA,EAAOiJ,MACX,KAAKqrD,GAAoBC,cACrB,OAAO3nD,EAAe5D,EAAOhJ,EAAOuD,MACxC,KAAK+wD,GAAoBE,UACrB,OAAOL,GAAgBnrD,EAAOhJ,EAAOuD,MACzC,KAAK+wD,GAAoBG,cACrB,OAAOJ,GAAoBrrD,EAAOhJ,EAAOuD,MAC7C,QACI,OAAOyF,G,eCsCJ4rD,OAxDf,WAA6B,MAEjBhrD,EAAcC,qBAAWgrD,IAAzBjrD,UAFgB,EAGe3C,EAAQ2G,cAAvC7F,EAHgB,EAGhBA,eAAgBM,EAHA,EAGAA,WAExB,OAAO,kBAAC,IAAD,iBAAUN,EAAV,CAA0BgG,UAAU,aAAaC,SAAWC,IAC/DrE,EAAU,CACNX,KAAMqrD,GAAoBC,cAC1BhxD,KAAM0K,OAIV,kBAAC,IAAKvC,KAAN,CACIwC,MAAM,WACNrH,KAAK,WACLsH,MAAO,CACH,CACIC,UAAU,EACVb,QAAS,iCAIjB,kBAAC,IAAD,OAEJ,kBAAC,IAAK7B,KAAN,CACIwC,MAAM,WACNrH,KAAK,WACLsH,MAAO,CACH,CACIC,UAAU,EACVb,QAAS,iCAIjB,kBAAC,IAAMc,SAAP,OAEJ,kBAAC,IAAK3C,KAAN,CACIwC,MAAM,oBACNrH,KAAK,YACLsH,MAAO,CACH,CACIC,UAAU,EACVb,QAAS,iCAIjB,kBAAC,IAAMc,SAAP,OAEJ,kBAAC,IAAK3C,KAASrD,EACX,kBAAC,IAAD,CAAQY,KAAK,UAAUqF,SAAS,UAAhC,SCOGwmD,OAxDf,WAAuB,MAEXlrD,EAAcC,qBAAWgrD,IAAzBjrD,UAFU,EAGkB3C,EAAQ2G,cAArC7F,EAHW,EAGXA,eAAeM,EAHJ,EAGIA,WAChB0sD,EAAe,CAAE3mD,UAAU,EAC7Bb,QAAS,YAEb,OAAO,kBAAC,IAAD,iBAAUxF,EAAV,CAA0BgG,UAAU,aAAaC,SAAWC,IAC/DrE,EAAU,CACNX,KAAMqrD,GAAoBE,UAC1BjxD,KAAM0K,OAGV,kBAAC,IAAKvC,KAAN,CACIwC,MAAM,cACNrH,KAAK,OACLsH,MAAO,CAAC4mD,IAER,kBAAC,IAAD,OAGJ,kBAAC,IAAKrpD,KAAN,CACIwC,MAAM,aACNrH,KAAK,MACLsH,MAAO,CAAC4mD,IAER,kBAAC,IAAD,OAGJ,kBAAC,IAAKrpD,KAAN,CACIwC,MAAM,eACNrH,KAAK,eAEL,kBAAC,IAAD,OAGJ,kBAAC,IAAK6E,KAASrD,EACX,kBAAC,IAAD,CAAQY,KAAK,UAAUqF,SAAS,UAAhC,MAGJ,kBAAC,KAAD,CAASrF,KAAK,aACd,kBAAC,IAAD,CAAQkC,QACHrD,IACCA,EAAEwD,iBACF1B,EAAU,CACRX,KAAMqrD,GAAoBG,cAC1BlxD,KAAM,MAGZ+K,SAAS,UARX,W,SC7CwElL,IAAYC,aAAcrD,IAC/F,CAAEuD,KAAMvD,EAAOuD,QADHyxD,G,GAATvxD,QAA2CwxD,G,GAAPj1D,O,GAIoBoD,IAAYC,aAAcrD,IACrF,CAAEuD,KAAM,CAAC2xD,eAAe,MADXC,G,GAAT1xD,QAAsC2xD,G,GAARp1D,O,GAI4BoD,IAAYC,aAAcrD,IACxF,CAAEuD,KAAM,CAAC2xD,eAAe,MADZG,G,GAAR5xD,QAAuC6xD,G,GAARt1D,OCT9C,MAAMu1D,OAEKC,WAAa,YAFlBD,GAGKE,SAAW,UAHhBF,GAIKL,cAAgB,gBAG3B,MAAMQ,GAAqB,CACvB,CAACH,GAAeE,UAAWN,GAC3B,CAACI,GAAeC,YAAaH,GAC7B,CAACE,GAAeL,eAAgBF,IAGpC,SAASW,GAAW3sD,EAAOhJ,GACvB,OAAQA,EAAOiJ,MACX,KAAKssD,GAAeE,SAChB,OAAOL,GAAcpsD,EAAOhJ,EAAOuD,MACvC,KAAKgyD,GAAeC,WAChB,OAAOF,GAAgBtsD,EAAOhJ,EAAOuD,MACzC,KAAKgyD,GAAeL,cAChB,OAAOD,GAAoBjsD,EAAOhJ,EAAOuD,MAC7C,QACI,OAAOyF,GCmBJ4sD,OApCf,WAAiB,MAELhsD,EAAcC,qBAAWgsD,IAAzBjsD,UAFI,EAGwB3C,EAAQ2G,cAArC7F,EAHK,EAGLA,eAAeM,EAHV,EAGUA,WACtB,OAAO,oCACH,kBAAC,IAAD,CACIkF,QAAQ,iBACRrC,YAAY,gDACZjC,KAAK,YAET,kBAAC,KAAD,MACA,kBAAC,IAASlB,EACN,kBAAC,IAAK2D,KAASrD,EACX,kBAAC,IAAD,CAAQY,KAAK,UAAUkC,QACnB,KACIvB,EAAU,CACNX,KAAMssD,GAAeE,SACrBlyD,KAAM,OAJlB,oBAQA,kBAAC,KAAD,CAAS0F,KAAK,aACd,kBAAC,IAAD,CAAQkC,QACJ,KACIvB,EAAU,CACNX,KAAMssD,GAAeC,WACrBjyD,KAAM,OAJlB,0B,+bCrBR6rC,GAASC,KAATD,KAEF0mB,GAAoB3oD,KAAOC,IAAV,MAOjB2oD,GAAiB5oD,KAAOC,IAAV,MAKd4oD,GAAe7oD,KAAOC,IAAV,MAMZK,GAAY,CACd/L,WAAOV,EACPgJ,QAAS,GAEP6qD,GAAkBxrD,IAAMC,gBAiDf2sD,OA/Cf,WAAqB,MAAD,EAEWpoD,0BAAgB8mD,GAAiBlnD,GAAWinD,IAFvD,mBAET1rD,EAFS,KAEFY,EAFE,KAIRlI,EAAmBsH,EAAnBtH,MAAOsI,EAAYhB,EAAZgB,QAEf,OACI,kBAAC6qD,GAAgBnqD,SAAjB,CAA0BoD,MAAO,CAAElE,cAC/B,kBAACksD,GAAD,KACI,kBAACC,GAAD,KACI,kBAAC,KAAD,CAAYprD,MAAM,oCAEtB,kBAAC,KAAD,MACA,kBAACqrD,GAAD,KACI,kBAAC,KAAD,CAAOhsD,QAASA,GACZ,kBAAC,GAAD,CAAMW,MAAM,sBAAsBO,YAAY,uBAC9C,kBAAC,GAAD,CAAMP,MAAM,cAAcO,YAAY,6BACtC,kBAAC,GAAD,CAAMP,MAAM,OAAOO,YAAY,mBAEnC,kBAAC,KAAD,MACCxJ,GAAS,kBAAC,IAAD,CACN6L,QAAQ,UACRrC,YAAaxJ,EACbuH,KAAK,QACLqE,UAAQ,IAGI,IAAZtD,GAAiB,kBAAC,IAAD,KACb,kBAAC,GAAD,OAIQ,IAAZA,GAAiB,kBAAC,IAAD,KACb,kBAAC,GAAD,OAIQ,IAAZA,GAAiB,kBAAC,IAAD,KACb,kBAAC,GAAD,W,oBCDbksD,OAvED,CACVr3C,MAAO,QACPK,SAAU,WACV/M,QAAS,UACTgkD,kBAAmB,oBACnBC,SAAU,WACVC,MAAO,QACPC,KAAM,OACN1qB,MAAO,QACP2qB,oBAAqB,sBACrBC,0BAA2B,oCAC3BC,WAAY,aACZC,aAAc,gBACdC,OAAQ,SACRC,KAAM,OACNC,eAAgB,iBAChBC,YAAa,aACbC,kBAAmB,+CACnBC,eAAgB,iBAChBC,WAAY,YACZC,YAAa,aACbC,QAAS,UACTj9C,OAAQ,SACRnZ,KAAM,OACNq2D,MAAO,QACP7wD,OAAQ,SACRib,KAAM,OACNmxB,IAAK,MACL0kB,MAAO,QACPC,eAAgB,iBAChBC,eAAgB,iBAChBC,kBAAmB,oBACnBC,kBAAmB,mBACnBC,KAAM,OACNC,cAAe,gBACfC,WAAY,aACZC,cAAe,gBACfC,gBAAiB,kBACjBC,KAAM,OACNC,aAAc,eACdC,WAAY,cACZC,eAAgB,qBAChBC,YAAa,qBACbC,UAAW,mBACXC,aAAc,gBACdC,GAAI,KACJC,iBAAkB,yDAClBC,SAAU,QACVnJ,KAAM,OACNC,KAAM,OACNjsB,GAAI,gBACJn8B,KAAM,YACNqF,SAAU,WACVksD,MAAO,QACPC,cAAe,gBACfC,WAAY,aACZC,MAAO,QACPnyB,gBAAgB,kBAChBuC,WAAW,aACXC,WAAW,aACX4vB,cAAc,gBACdC,eAAe,iBACfC,kBAAkB,qDAClBtpC,IAAK,eACLupC,GAAI,SACJC,kBAAkB,oBAClBC,YAAa,cACbC,MAAM,QACNC,eAAe,iBACfC,oBAAoB,wC,qBCrDxB,MAAM5rD,GAAY,CACdynD,eAAe,EACf95C,SAAS,EACTob,KAAM,KACNvqB,eAAe,GAEb4pD,GAAaxsD,IAAMC,gBAqCVgwD,OApCf,WAAgB,MAAD,EACgBzrD,0BAAgB8nD,GAAYloD,GAAWioD,IADvD,mBACJ1sD,EADI,KACGY,EADH,KAEHsrD,EAA8ClsD,EAA9CksD,cAAe95C,EAA+BpS,EAA/BoS,QAAQob,EAAuBxtB,EAAvBwtB,KAAKvqB,EAAkBjD,EAAlBiD,cAFzB,4CAIX,8BAAA3I,EAAA,6DACUH,EAAS,IAAIvB,cADvB,SAE0BuB,EAAOrB,IAAIC,UAAaoC,SAAU,IAF5D,OAG2B,OADjBwF,EAFV,QAGgBrK,QACRsK,EAAU,CACNX,KAAMssD,GAAeL,cACrB3xD,KAAM,CACF2xD,cAAevrD,EAAQpK,QAAQg6D,WAC/BttD,cAAetC,EAAQpK,QAAQ4S,UAAW,EAC1CiJ,SAAS,KATzB,4CAJW,sBAuBX,OAJA3Q,oBAAU,MAnBC,mCAoBPshD,IACD,IAGC,kBAAC,KAAD,CAAcyN,OAAQhjC,EAAMijC,SAAUvD,IACtC,kBAAC,KAAD,CAAgBsD,OAAQE,MACpB,kBAAC7D,GAAWnrD,SAAZ,CAAqBoD,MAAO,CAAElE,cACzBwR,GAAW,kBAAC,GAAD,OACVA,IAAY85C,GAAiB,kBAAC,GAAD,OAC7B95C,GAAW85C,GAAiB,kBAAC,GAAD,CAAYvrD,QAAS,CAACsC,uBC3CpE0tD,IAAS3qD,OACL,kBAAC,GAAD,MAAQ4oB,SAASgiC,eAAe,SnOmH9B,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMx7C,KAAKy7C,IACjCA,EAAaC,gB,kEoOpGJ72D,IA3Bf,MACI,oBAAoB82D,GAChB,MAAO,CACHz2D,QAAS,EAAG02D,WAAUC,WAAUC,aAC5B,MAAMzwD,EAAYuwD,EAClB,8CAAO,WAAOn6D,GAAP,eAAAsD,EAAA,sEACgB42D,EAAc,2BAAKl6D,GAAN,IAAcuI,QAAS6xD,OADpD,OACG72D,EADH,OAEHqG,EAAU,aACNX,KAAMjJ,EAAOiJ,MACV1F,IAJJ,2CAAP,mDAAM,IAQVvD,OAAQ,CAACgJ,EAAOzF,IACL,2BAAKyF,GAAUzF,IAKlC,kBAAkBsD,EAAM5G,GACpB,MAAO,CACHgJ,KAAMpC,EACNtD,KAAMtD,M,+UCtBlB,sGAAO,MACMH,EADiB,GAIvB,MAAMkD,KACFC,IAAM,MADJD,EAEFE,KAAO,OAFLF,EAGFs3D,IAAM,MAHJt3D,EAIFkiC,OAAU,SAGd,MAQM9jC,EAAc,CACvByF,KAAM,kB","file":"static/js/main.fa3cbce3.chunk.js","sourcesContent":["export class LangKey{\n    static firstName = \"firstName\"   \n}\nexport class GlobalParamNames {\n    static USER_NAME = \"userName\"\n    static USER_ID = \"userId\"\n    static ADMIN_TOKEN = \"admin_token\"\n    static LOGIN_TOKEN = \"access-token\"\n}","import { BACKEND_URL, AccessToken } from './RestConst'\nimport { GlobalParamNames } from '../Dicts'\n\nexport class RestResponse {\n    constructor(status, content,response) {\n        this.status = status\n        this.content = content\n        this.resp = response\n    }\n}\n\nexport class Backend {\n\n    constructor(url, fetch_config = {}) {\n        this.url = url\n        if (!this.url) {\n            this.url = BACKEND_URL\n        }\n        this.fetch_config = fetch_config\n    }\n\n    async request(action, params, method = \"GET\") {\n        method = method.toUpperCase();\n        const userName = sessionStorage.getItem(GlobalParamNames.USER_NAME)\n        //const loginToken = sessionStorage.getItem(GlobalParamNames.LOGIN_TOKEN)\n        if (userName) {\n            params[GlobalParamNames.USER_NAME] = userName\n        }\n\n        // if (loginToken) {\n        //     params[GlobalParamNames.LOGIN_TOKEN] = loginToken\n        // }\n\n        let formBody = [];\n        for (let property in params) {\n            let encodedKey = encodeURIComponent(property);\n            let encodedValue = encodeURIComponent(params[property]);\n            formBody.push(encodedKey + \"=\" + encodedValue);\n        }\n        let newurl = this.url + action\n\n        if (formBody.length > 0) {\n            newurl = newurl + \"?\"\n        }\n\n        if (method === \"GET\") {\n            newurl = newurl + formBody.join(\"&\")\n            formBody = undefined\n        } else {\n            formBody = formBody.join(\"&\")\n        }\n\n        const basic_config = {\n            method: method,\n            timeout: 1000 * 60 * 60 * 24,\n            headers: {\n                'Content-Type': 'application/x-www-form-urlencoded',\n                'Accept': 'application/json',\n                'Access-Token': sessionStorage.getItem(AccessToken) || ''\n            },\n            body: formBody\n        }\n\n        const final_config = { ...basic_config, ...this.fetch_config }\n\n        try {            \n            const response = await fetch(newurl, final_config);\n            if (!response.ok) {\n                const error = await response.text()\n                return new RestResponse(response.status, error);\n            }\n            const json = await response.json();\n            return new RestResponse(200, json,response);\n        } catch (err) {\n            return new RestResponse(500, err,undefined);\n        }\n    }\n}\n","import { RestResponse, Backend } from './backend/Backend'\nimport RemoteAction from './RemoteAction'\nimport { Method, Status } from './backend/RestConst'\n\n\nexport class ActionProxy {\n  static client = new ActionProxy()\n  constructor() {\n    this.backend = new Backend()\n  }\n\n  async userName() {\n    const res = await this.get(RemoteAction.USER_NAME, {})\n    return res\n  }\n\n  async runScript(sql, jobName, params) {\n    const res = await this.userName()\n    if (res.status !== 200) {\n      return res\n    }\n    const { userName, backendTags } = res.content\n\n    const finalParams = {\n      sql: sql,\n      owner: userName,\n      jobName: jobName,\n      sessionPerUser: true,\n      show_stack: true,\n      skipAuth: false,\n      tags: backendTags || \"\"\n    }\n    Object.assign(finalParams, params)\n    const temp = await this.post(RemoteAction.RUN, finalParams)\n    return temp\n  }\n\n  /**\n   * \n   * @param {string} action \n   * @param {{}} params \n   * @return {RestResponse}\n   */\n  async get(action, params) {\n    const res = await this.backend.request(action, params, Method.GET)\n    return res\n  }\n\n  /**\n   * \n   * @param {string} action \n   * @param {{}} params \n   * @returns {RestResponse}\n   */\n  async post(action, params) {\n    const res = await this.backend.request(action, params, Method.POST)\n    return res\n  }\n}\n\n","import ActionMaker from \"../../../ActionMaker\"\n\nexport const {handler:SetStateActionHandler,action:SetStateAction} = ActionMaker.buildHandler(async (action)=>{\n    return {        \n        data: {\n            ...action.data  \n        }\n    }\n})","export default class RemoteAction {\n    static RUN = \"/api_v1/run/script\"\n    static USER_NAME = \"/api_v1/user/userName\"\n    static JOB_LIST = \"/api_v1/job/list\"\n    static JOB_DETAIL = \"/api_v1/job\"\n    static JOB_KILL = \"/api_v1/job/kill\"\n\n    static SAVE_SCRIPT_FILE = \"/api_v1/script_file\"\n\n    static ANALYSIS_TABLES = \"/api_v1/analysis/tables\"\n    static ANALYSIS_TABLE_INFO = \"/api_v1/analysis/table/get\"\n    static ANALYSIS_SAVE = \"/api_v1/analysis/tables/save\"\n    static ANALYSIS_TABLE_DELETE = \"/api_v1/analysis/table/delete\"\n\n    static APP_INFO = \"/api_v1/app\"\n    static APP_SAVE = \"/api_v1/app/save\"\n\n    static REGISTER = \"/api_v1/user/register\"\n    static LOGIN = \"/api_v1/user/login\"\n    static LOGOUT = \"/api_v1/user/logout\"\n\n    static ENGINE_ADD = \"/api_v1/engine/add\"\n    static ENGINE_REGISTER = \"/api_v1/engine/register\"\n    static ENGINE_LIST = \"/api_v1/engine/list\"\n    static ENGINE_REMOVE = \"/api_v1/engine/remove\"\n\n    static SCRIPT_FILE_LIST = \"/api_v1/script_file\"\n\n    static SCRIPT_FILE_GET = \"/api_v1/script_file/get\"\n\n    static SCRIPT_FILE_REMOVE = \"/api_v1/script_file/remove\"\n\n    static PLUGIN_LIST = \"/api_v1/plugin/list\"\n    static PLUGIN_GET = \"/api_v1/plugin/get\"\n\n    static ANALYSIS_PLUGIN_LIST = \"/api_v1/script_file/plugins\"\n    static ANALYSIS_PLUGIN_GET = \"/api_v1/script_file/plugin/get\"\n    static ANALYSIS_PLUGIN_PUBLISH = \"/api_v1/script_file/plugin/publish\"\n    static SCRIPT_SHARE_PUBLIC = \"/api_v1/script_file/share\"\n\n    static USER_EXTRA = \"/api_v1/user/extra/update\"\n    static USER_CHANGE_PASSWORD = \"/api_v1/changepassword\"\n\n    static APPLY_GET = \"/api_v1/analysis/apply\"\n\n    static TEMA_LIST = \"/api_v1/team\" \n    \n    static DS_ADD = \"/api_v1/ds/add\" \n    static DS_LIST = \"/api_v1/ds/list\"\n    static DS_REMOVE = \"/api_v1/ds/remove\" \n\n    static DS_MYSQL_DBS= \"/api_v1/ds/mysql/dbs\"\n\n    static DS_MYSQL_CONNECT = \"/api_v1/ds/mysql/connect/get\"\n    static DS_MYSQL_COLUMN_INFO = \"/api_v1/ds/mysql/column\"\n\n    static CLOUD_CREATE_ENGINE = \"/api_v1/proxy/api/create_engine\"\n    static CLOUD_DELETE_ENGINE = \"/api_v1/proxy/api/delete_engine\"\n    static CLOUD_ENGINE_STATUS = \"/api_v1/proxy/api/status\"\n    static CLOUD_ENGINE_LIST = \"/api_v1/proxy/api/list\"\n\n    static INDEXER_LIST = \"/api_v1/indexer\"\n    static MYSQL_INDEXER_CREATE = \"/api_v1/indexer/mysql/build\"\n    static INDEXER_REMOVE = \"/api_v1/indexer/remove\"\n\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import ActionMaker from \"../../ActionMaker\"\nimport { ActionProxy } from \"../../../backend_service/ActionProxy\"\nimport RemoteAction from \"../../../backend_service/RemoteAction\"\nimport { AccessToken } from \"../../../backend_service/backend/RestConst\"\n\nexport const {handler:SwitchActionHandler,action:SwitchAction} = ActionMaker.buildHandler(async (action)=>{\n    if(action.data.currentPage === \"logout\"){\n        const client = new ActionProxy()\n        await client.post(RemoteAction.LOGOUT, {})        \n        sessionStorage.removeItem(AccessToken.name)\n        sessionStorage.removeItem(\"user\")\n        return {        \n            data: {\n                currentPage: \"admin\",\n                logined: false\n            }\n        }\n    }\n    return {        \n        data: {\n            currentPage: action.data.currentPage\n        }\n    }\n})","import * as React from 'react';\nimport Cookies from 'universal-cookie';\nimport { AccessToken } from '../backend_service/backend/RestConst';\nclass UIMaker {\n\n    static setupLogin(res) {  \n        const user = {userName:res.content.name, role:res.content.role,extraOption:res.content.backendTags}\n        const token = res.resp.headers.get(AccessToken.name)\n        sessionStorage.setItem(AccessToken.name, token)\n        sessionStorage.setItem(\"user\",JSON.stringify(user))\n        const cookies = new Cookies();\n        cookies.set(AccessToken.name, token, { path: '/' })\n    }\n    \n    static updateUser(res){\n        const user = {userName:res.content.name, role:res.content.role,extraOption:res.content.backendTags}\n        sessionStorage.setItem(\"user\",JSON.stringify(user)) \n    }\n\n    static extraOption(){\n        const userStr = sessionStorage.getItem(\"user\") \n        if(!userStr) return {}\n        try{\n            return JSON.parse(JSON.parse(userStr).extraOption) || {}\n        }catch(e){\n            return {}\n        }\n        \n    }\n\n    static isAdmin(){\n        const userStr = sessionStorage.getItem(\"user\") \n        if(!userStr) return false\n        const user = JSON.parse(userStr)\n        if(user.role===\"admin\") return true\n        return false\n    }\n\n    static logined(){\n        if(sessionStorage.getItem(AccessToken.name)) {\n            return true\n        }\n        return false\n    }\n    static formLayout2() {\n        const formItemLayout = {\n            labelCol: {\n                xs: {\n                    span: 4,\n                },\n                sm: {\n                    span: 8,\n                },\n            },\n            wrapperCol: {\n                xs: {\n                    span: 4,\n                },\n                sm: {\n                    span: 8,\n                },\n            },\n        };\n        const tailLayout = {\n            wrapperCol: {\n                offset: 8,\n                span: 16,\n            },\n        };\n        return { formItemLayout, tailLayout } \n    }\n    static formLayout1() {\n        const formItemLayout = {\n            labelCol: {\n                xs: {\n                    span: 24,\n                },\n                sm: {\n                    span: 8,\n                },\n            },\n            wrapperCol: {\n                xs: {\n                    span: 24,\n                },\n                sm: {\n                    span: 16,\n                },\n            },\n        };\n        const tailLayout = {\n            wrapperCol: {\n                offset: 8,\n                span: 16,\n            },\n        };\n        return { formItemLayout, tailLayout }\n    }\n}\n\nexport default UIMaker","import UIMaker from \"../../UIMaker\"\nimport ActionMaker from \"../../ActionMaker\"\n\nexport const {handler:CheckLoginedActionHandler,action:CheckLoginedAction} = ActionMaker.buildHandler(async (action)=>{\n    let currentPage = \"console\"\n    // let currentPage = \"workshop\"\n    if(action.__state.currentPage===\"register\" && !UIMaker.logined()){\n        currentPage = \"register\"\n    }\n    return {        \n        data: {\n            ...action.data,\n            logined: UIMaker.logined(),\n            currentPage\n        }\n    }\n})","import { SwitchAction, SwitchActionHandler } from \"./SwitchAction\";\nimport { CheckLoginedActionHandler, CheckLoginedAction } from \"./CheckLoginedAction\";\nimport { SetStateAction, SetStateActionHandler } from \"../../analysis/common/actions/SetStateAction\";\nclass AppConsoleActionNames {\n    static SWITCH = \"switch\"\n    static CHECK_LOGINED = \"checkLogined\"\n}\nconst AppConsoleHandlers = {\n    [AppConsoleActionNames.SWITCH]: SwitchActionHandler,\n    [AppConsoleActionNames.CHECK_LOGINED]: CheckLoginedActionHandler,\n    setState: SetStateActionHandler\n}\n\nfunction AppConsoleReducer(state, action) {\n    switch (action.type) {\n        case AppConsoleActionNames.SWITCH:\n            return SwitchAction(state, action.data)\n        case AppConsoleActionNames.CHECK_LOGINED:\n            return CheckLoginedAction(state, action.data)\n        case \"setState\":\n            return SetStateAction(state, action.data)\n        default:\n            return state;\n    }\n}\nexport { AppConsoleActionNames, AppConsoleReducer, AppConsoleHandlers }","import React, { useState, useCallback, useEffect, useContext, useRef } from 'react';\nimport { useReducerAsync } from 'use-reducer-async'\nimport { AppConsoleContext } from '../AppConsole';\nimport { Menu, Divider, Alert } from 'antd';\nimport { HomeOutlined, AppstoreOutlined, SettingOutlined, MoreOutlined, LogoutOutlined, SelectOutlined, LoginOutlined } from '@ant-design/icons';\nimport ActionMaker from '../../ActionMaker';\nimport { AppConsoleActionNames } from '../actions/AppConsoleReducer';\nimport UIMaker from '../../UIMaker';\nimport Modal from 'antd/lib/modal/Modal'\nimport { FormattedMessage  } from 'react-intl'; \nconst { SubMenu } = Menu;\n\nconst ConsoleHeaderContext = React.createContext()\n\nfunction ConsoleHeader(props) {\n    const { currentPage, userLogined, isUserAdmin,appInfo } = props\n    const { dispacher } = useContext(AppConsoleContext)\n    const [current, setCurrent] = useState(currentPage)\n    const [logined, setLogined] = useState(userLogined)\n    const [isAdmin, setIsAdmin] = useState(isUserAdmin)\n    const [leave, setLeave] = useState(undefined)\n\n    const [enableConsole,setEnableConsole] = useState(false)\n    const tempCurrent = useRef()\n\n    useEffect(() => {\n        const { currentPage, userLogined, isUserAdmin } = props\n        setCurrent(currentPage)\n        setLogined(userLogined)\n        setIsAdmin(isUserAdmin)\n    }, [props]);    \n\n    return (\n        <ConsoleHeaderContext.Provider>\n            <Modal\n                title={\"Confirm\"}\n                visible={leave || false}\n                onCancel={() => { setLeave(undefined) }}\n                onOk={() => {\n                    setLeave(undefined)\n                    setCurrent(tempCurrent.current)\n                    dispacher(ActionMaker.buildEvent(\n                        AppConsoleActionNames.SWITCH, { currentPage: tempCurrent.current }\n                    ))\n                }}\n                cancelText=\"Cancel\"\n                okText=\"Leave\"\n            >\n                <Alert                    \n                    description={leave}\n                    type=\"info\"\n                />\n            </Modal>\n            <Menu onClick={(e) => { \n                if(e.key === \"home\"){\n                    e.domEvent.preventDefault()\n                    e.domEvent.stopPropagation()\n                    return\n                }           \n                if (logined && current === \"workshop\" && e.key !== \"workshop\") {\n                    tempCurrent.current = e.key\n                    setLeave(\"Do you wanna leave workshop? Please make sure you have saved your work before you leave.\")\n                } else {\n                    setCurrent(e.key)\n                    dispacher(ActionMaker.buildEvent(\n                        AppConsoleActionNames.SWITCH, { currentPage: e.key }\n                    ))\n                }\n\n            }} selectedKeys={[current]} mode=\"horizontal\">\n                <Menu.Item  key=\"home\">\n                    <span style={{ fontSize: 32 }}>MLSQL Web Console</span>\n                    <span style={{ fontSize: 11 }}>(Build 20210712.181143)</span>\n                </Menu.Item>\n                {/* <Divider type=\"vertical\"></Divider> */}\n                {/* menu 中不能包含其他的组件， 否则会报错 */}\n\n                {!logined && <Menu.Item key=\"login\" icon={<LoginOutlined />}>\n                    <FormattedMessage id=\"login\"/>\n                </Menu.Item>}\n                {!logined && <Menu.Item key=\"register\" icon={<SelectOutlined />}>\n                     <FormattedMessage id=\"register\"/>                    \n                </Menu.Item>}\n\n                {logined && appInfo.enableConsole && <Menu.Item key=\"console\" icon={<HomeOutlined />}>\n                    <FormattedMessage id=\"console\"/>\n                </Menu.Item>}\n                {logined && <Menu.Item key=\"workshop\" icon={<AppstoreOutlined />}>\n                   <FormattedMessage id=\"analysis_workshop\"/>                    \n                </Menu.Item>}\n\n                {logined && <Menu.Item key=\"indexer_manager\" icon={<AppstoreOutlined />}>\n                    <FormattedMessage id=\"indexer_manager\"/>\n                </Menu.Item>}\n\n                {\n                    logined && <Menu.Item key=\"settings\" icon={<SettingOutlined />}>\n                        <FormattedMessage id=\"settings\"/>                    \n                </Menu.Item>\n                }\n                {\n                    logined && isAdmin && <Menu.Item key=\"admin\" icon={<SettingOutlined />}>\n                        <FormattedMessage id=\"admin\"/>\n                    </Menu.Item>\n                }\n                {\n                    logined && <SubMenu icon={<MoreOutlined />} title={<FormattedMessage id=\"more\"/>}>\n                        <Menu.Item key=\"scriptPlugin\">脚本插件</Menu.Item>\n                        <Menu.Item key=\"doc\">中文文档</Menu.Item>\n                        <Menu.Item key=\"engine\">Engine</Menu.Item>\n                        <Menu.Item key=\"logout\" icon={<LogoutOutlined />}>Logout</Menu.Item>\n                    </SubMenu>\n                }\n            </Menu>\n        </ConsoleHeaderContext.Provider>\n    )\n}\nexport { ConsoleHeader, ConsoleHeaderContext }\n","import { ActionProxy } from \"../../../../backend_service/ActionProxy\"\nimport RemoteAction from \"../../../../backend_service/RemoteAction\"\nimport UIMaker from \"../../../UIMaker\"\nimport ActionMaker from \"../../../ActionMaker\"\n\nexport const {handler:RegisterActionHandler,action:RegisterAction} = ActionMaker.buildHandler(async(action)=>{\n        const { userName, password, password2 } = action.data        \n        if (password !== password2) {            \n            return {\n                data: {\n                    error: \"Passwords are not matched\"\n                }\n            }\n        }\n    \n        const client = new ActionProxy()\n        const res = await client.post(RemoteAction.REGISTER, {\n            userName, password\n        })\n    \n        let data = {}\n        if (res.status !== 200) {\n            data = {\n                error: JSON.parse(res.content).msg\n            }\n        } else { \n            //login                \n            UIMaker.setupLogin(res)\n            data = {\n                error: undefined, \n                logined: true,\n                current: action.__state.current + 1               \n            }\n        }\n        return {data}\n        \n})\n","import { ActionProxy } from \"../../../../backend_service/ActionProxy\"\nimport RemoteAction from \"../../../../backend_service/RemoteAction\"\nimport UIMaker from \"../../../UIMaker\"\nimport ActionMaker from \"../../../ActionMaker\"\n\nexport const {handler:LoginActionHandler,action:LoginAction} = ActionMaker.buildHandler(async (action)=>{\n    const client = new ActionProxy()\n    const res = await client.post(RemoteAction.LOGIN, action.data)\n    if (res.status !== 200) {\n        return {\n            data:{logined:false,error: JSON.parse(res.content).msg}\n            \n        }\n    }\n    UIMaker.setupLogin(res)\n    return {        \n        data:{logined:true}\n    }\n})","import { RegisterAction, RegisterActionHandler } from \"../../../app_setup/actions/app/RegisterAction\"\nimport { LoginAction, LoginActionHandler } from \"./LoginAction\"\n\nclass LoginRegisterActionNames {\n    static REGISTER = \"register\"\n    static LOGIN = \"login\"\n}\nconst LoginRegisterHandlers = {\n    [LoginRegisterActionNames.REGISTER]: RegisterActionHandler,\n    [LoginRegisterActionNames.LOGIN]: LoginActionHandler,\n}\n\nfunction LoginRegisterReducer(state, action) {\n    switch (action.type) {\n        case LoginRegisterActionNames.REGISTER:\n            return RegisterAction(state, action.data)\n        case LoginRegisterActionNames.LOGIN:\n            return LoginAction(state, action.data)\n        default:\n            return state;\n    }\n}\nexport { LoginRegisterActionNames, LoginRegisterReducer, LoginRegisterHandlers }","import React, { useState, useCallback, useEffect } from 'react';\n\nimport styled from 'styled-components'\nimport { Alert } from 'antd';\n\nconst AlertBoxW = styled.div`\n  width: 100%;    \n  margin: 0px 10px 10px 0px;\n`\nfunction AlertBox(props){\n    return <AlertBoxW>\n        <Alert {...props} closable type={props.type||\"error\"} message={props.title || \"Message\"} description={props.message}></Alert>\n    </AlertBoxW>\n}\n\nexport default AlertBox","import React, { useState, useCallback, useEffect, useContext } from 'react';\nimport { Steps, Divider, Alert, Input, Form, Card, Button } from 'antd';\nimport { useReducerAsync } from 'use-reducer-async'\nimport { AppConsoleContext } from '../AppConsole';\nimport UIMaker from '../../UIMaker';\nimport './Register.scss'\nimport { LoginRegisterActionNames, LoginRegisterReducer, LoginRegisterHandlers } from './actions/LoginRegisterReducer';\nimport { AppConsoleActionNames } from '../actions/AppConsoleReducer';\nimport AlertBox from '../../AlertBox';\n\n\nconst RegisterContext = React.createContext()\nconst initState = {\n    logined: false,\n    error: undefined\n}\nfunction Register() {\n    const { dispacher: appConsoleDispacher } = useContext(AppConsoleContext)\n    const { formItemLayout, tailLayout } = UIMaker.formLayout1()\n    const [state, dispacher] = useReducerAsync(LoginRegisterReducer, initState, LoginRegisterHandlers)\n\n    const { logined, error } = state\n\n    useEffect(() => {        \n        appConsoleDispacher({\n            type: AppConsoleActionNames.CHECK_LOGINED,\n            data: {}\n        })\n    }, [logined])\n\n    return (\n        <RegisterContext.Provider value={{}}>\n            <div className=\"app-console-main-register\">\n                <Card title=\"Register\">\n                    {\n                        error && <AlertBox type=\"error\" message={error}></AlertBox>\n                    }\n                    <Form {...formItemLayout} className=\"login-form\" onFinish={(values) => {\n                        dispacher({\n                            type: LoginRegisterActionNames.REGISTER,\n                            data: values\n                        })\n                    }}>\n                        <Form.Item\n                            label=\"UserName\"\n                            name=\"userName\"\n                            rules={[\n                                {\n                                    required: true,\n                                    message: 'Please input your username!',\n                                },\n                            ]}\n                        >\n                            <Input />\n                        </Form.Item>\n\n                        <Form.Item\n                            label=\"Password\"\n                            name=\"password\"\n                            rules={[\n                                {\n                                    required: true,\n                                    message: 'Please input your password!',\n                                },\n                            ]}\n                        >\n                            <Input.Password />\n                        </Form.Item>\n                        <Form.Item\n                            label=\"Repeated Password\"\n                            name=\"password2\"\n                            rules={[\n                                {\n                                    required: true,\n                                    message: 'Please input your password!',\n                                },\n                            ]}\n                        >\n                            <Input.Password />\n                        </Form.Item>\n                        <Form.Item {...tailLayout}>\n                            <Button type=\"primary\" htmlType=\"submit\">\n                                Go\n        </Button>\n                        </Form.Item>\n                    </Form>\n                </Card>\n            </div>\n        </RegisterContext.Provider>\n    )\n}\nexport { Register, RegisterContext }","import React, { useState, useCallback, useEffect, useContext } from 'react';\nimport { Steps, Divider, PageHeader, Input, Form, Card, Button } from 'antd';\nimport { useReducerAsync } from 'use-reducer-async'\nimport { AppConsoleContext } from '../AppConsole';\nimport UIMaker from '../../UIMaker';\nimport './Register.scss'\nimport { AppConsoleActionNames } from '../actions/AppConsoleReducer';\nimport { LoginRegisterReducer, LoginRegisterHandlers, LoginRegisterActionNames } from './actions/LoginRegisterReducer';\nimport ActionMaker from '../../ActionMaker';\nimport AlertBox from '../../AlertBox';\n\n\nconst initState = {\n    logined: false,\n    error: undefined\n}\n\nconst LoginContext = React.createContext()\n\nfunction Login() {\n    const { formItemLayout, tailLayout } = UIMaker.formLayout1()\n    const { dispacher: appConsoleDispacher } = useContext(AppConsoleContext)\n\n    const [state, dispacher] = useReducerAsync(LoginRegisterReducer, initState, LoginRegisterHandlers)\n    const { logined ,error} = state\n\n    useEffect(() => {\n        appConsoleDispacher({\n            type: AppConsoleActionNames.CHECK_LOGINED,\n            data: {\n                logined\n            }\n        })\n    }, [logined])\n\n    return (\n        <LoginContext.Provider>\n            <div className=\"app-console-main-register\">\n                <Card title=\"Login\">\n                    {\n                        error && <AlertBox type=\"error\" message={error}></AlertBox>\n                    }\n                    <Form {...formItemLayout} className=\"login-form\" onFinish={(values) => {\n                        dispacher(ActionMaker.buildEvent(LoginRegisterActionNames.LOGIN, values))\n                    }}>\n                        <Form.Item\n                            label=\"UserName\"\n                            name=\"userName\"\n                            rules={[\n                                {\n                                    required: true,\n                                    message: 'Please input your username!',\n                                },\n                            ]}\n                        >\n                            <Input />\n                        </Form.Item>\n\n                        <Form.Item\n                            label=\"Password\"\n                            name=\"password\"\n                            rules={[\n                                {\n                                    required: true,\n                                    message: 'Please input your password!',\n                                },\n                            ]}\n                        >\n                            <Input.Password />\n                        </Form.Item>\n                        <Form.Item {...tailLayout}>\n                            <Button type=\"primary\" htmlType=\"submit\">\n                                Go\n        </Button>\n                        </Form.Item>\n                    </Form>\n                </Card>\n            </div>\n        </LoginContext.Provider>\n    )\n}\nexport { Login, LoginContext }","import * as React from \"react\";\nimport {Table,Modal} from 'antd';\n\n\nconst ReactMarkdown = require('react-markdown')\n\nexport class MLSQLQueryDisplay extends React.Component {\n    constructor(props) {\n        super(props)\n        this.tableStyle = props.style || {}\n        this.state = {columns: [], rows: [], view: {enabled: false}}\n        this.config = {}\n    }\n\n    setRender = (keyColumn, data) => {\n\n        const value = data[0][keyColumn.key]\n\n        if (this.config && this.config[\"render\"]) {\n            const render = this.config[\"render\"][keyColumn.key]\n            if (render) {\n                keyColumn[\"render\"] = render\n            }\n            return\n        }\n\n        try {\n            if (React.Component.isPrototypeOf(value.type)) {\n                keyColumn[\"render\"] = value => <span>{value}</span>\n                return\n            }\n        }\n        catch (e) {\n        }\n\n        if (keyColumn.key == \"html\") {            \n            keyColumn[\"render\"] = value => <pre>{value.substring(0,300)}</pre>\n            return\n        }\n\n        if ((typeof value) === 'object') {\n            keyColumn[\"render\"] = value => <span>{                \n                    JSON.stringify(value).substring(0, 300) \n                }</span>\n            return\n        }\n        if ((typeof value) === 'array') {\n            keyColumn[\"render\"] = value => <span>{value.join(\",\").substring(0, 300)}</span>\n            return\n        }\n        if ((typeof value) === 'boolean') {\n            keyColumn[\"render\"] = value => <span>{value.toString()}</span>\n            return\n        }\n        if (keyColumn.key == \"fileSystem\" || keyColumn.key == \"message\" || keyColumn.key == \"info\") {\n            keyColumn[\"render\"] = value => <pre>{value.toString()}</pre>\n            return\n        }\n\n\n    }\n\n    update = (data, config) => {\n        // e.g. [{\"a\":1}]\n        this.config=config\n        let keys = []\n        let basket = {}\n        let rows = []\n        const self = this\n        //collect all keys\n        data.forEach(function (item) {\n            for (let key in item) {\n                if (!basket[key]) {\n                    const keyColumn = {\n                        title: key,\n                        dataIndex: key,\n                        key: key,\n                    }\n                    self.setRender(keyColumn, data)\n                    keys.push(keyColumn)\n                    basket[key] = true\n                }\n            }\n        })\n\n        // collect data\n        data.forEach(function (item, index) {\n            let new_item = {}\n            keys.forEach(function (key) {\n                new_item[key.key] = item[key.key]\n            })\n            new_item[\"key\"] = index\n            rows.push(new_item)\n        })\n\n        this.setState({columns: keys, data: rows})\n    }\n\n    rowDoubleClick = (row, index, event) => {\n        if (row.name === \"codeExample\" || row.name === \"doc\") {\n            this.setState({\n                view: {\n                    enabled: true,\n                    content: row.value\n                }\n            })\n        }\n    }\n\n    disablePreview = () => {\n        this.setState({\n            view: {\n                enabled: false\n            }\n        })\n    }\n\n    render() {\n        const self = this\n        return (<div style={this.tableStyle}>\n                <Table\n                    onRow={(row, index) => {\n                        return {\n                            onDoubleClick: (event) => {\n                                self.rowDoubleClick(row, index, event)\n\n                            }\n                        }\n                    }\n                    }\n\n                    columns={this.state.columns}\n                    dataSource={this.state.data}/>\n                <Modal\n                    title={\"View\"}\n                    visible={this.state.view.enabled}\n                    onCancel={this.disablePreview}\n                    onOk={this.disablePreview}\n                    cancelText=\"Cancel\"\n                    OkText=\"Ok\"\n                >\n                    <ReactMarkdown source={this.state.view.content || \"\"}/>\n                </Modal>\n            </div>\n        )\n    }\n\n}","export const BACKEND_SERVER = \"\";\nexport const REGISTER_URL = BACKEND_SERVER + \"/api_v1/user/register\";\nexport const USERNAME_URL = BACKEND_SERVER + \"/api_v1/user/userName\";\nexport const USER_TAGS_UPDATE = BACKEND_SERVER + \"/api_v1/user/tags/update\";\nexport const USERS_URL = BACKEND_SERVER + \"/api_v1/users\";\nexport const LOGIN_URL = BACKEND_SERVER + \"/api_v1/user/login\";\nexport const CREATE_SCRIPT_FILE = BACKEND_SERVER + \"/api_v1/script_file\";\nexport const REMOVE_SCRIPT_FILE = BACKEND_SERVER + \"/api_v1/script_file/remove\";\nexport const GET_SCRIPT_FILE = BACKEND_SERVER + \"/api_v1/script_file/get\";\nexport const RUN_SCRIPT = BACKEND_SERVER + \"/api_v1/run/script\";\nexport const CLUSTER_MANAGER = BACKEND_SERVER + \"/api_v1/cluster\";\nexport const FILE_UPLOAD = BACKEND_SERVER + \"/api_v1/file/upload\";\nexport const FILE_DOWNLOAD = BACKEND_SERVER + \"/api_v1/file/download\";\n\n\nexport const CREATE_TEAM = BACKEND_SERVER + \"/api_v1/team/create\";\nexport const CHECK_TEAM_NAME = BACKEND_SERVER + \"/api_v1/team/name/check\";\nexport const LIST_TEAMS = BACKEND_SERVER + \"/api_v1/team\";\n\nexport const LIST_TEAMS_JOINED = BACKEND_SERVER + \"/api_v1/team/joined\";\nexport const LIST_TEAMS_INVITED = BACKEND_SERVER + \"/api_v1/team/invited\";\n\nexport const LIST_TEAMS_IN = BACKEND_SERVER + \"/api_v1/team/in\";\n\n\nexport const ADD_TEAMS_MEMBER = BACKEND_SERVER + \"/api_v1/team/member/add\";\nexport const REMOVE_TEAMS_MEMBER = BACKEND_SERVER + \"/api_v1/team/member/remove\";\nexport const LIST_TEAMS_MEMBER = BACKEND_SERVER + \"/api_v1/team/members\";\n\nexport const ACCEPT_TEAMS_MEMBER = BACKEND_SERVER + \"/api_v1/team/member/accept\";\nexport const REFUSE_TEAMS_MEMBER = BACKEND_SERVER + \"/api_v1/team/member/refuse\";\n\nexport const ADD_TEAMS_ROLE = BACKEND_SERVER + \"/api_v1/team/role/add\";\nexport const REMOVE_TEAMS_ROLE = BACKEND_SERVER + \"/api_v1/team/role/remove\";\nexport const LIST_TEAMS_ROLE = BACKEND_SERVER + \"/api_v1/team/roles\";\n\nexport const ADD_TEAMS_TABLE = BACKEND_SERVER + \"/api_v1/team/table/add\";\nexport const REMOVE_TEAMS_TABLE = BACKEND_SERVER + \"/api_v1/team/table/remove\";\nexport const LIST_TEAMS_TABLES = BACKEND_SERVER + \"/api_v1/team/tables\";\n\n\nexport const ADD_ROLES_TABLE = BACKEND_SERVER + \"/api_v1/role/table/add\";\nexport const REMOVE_ROLES_TABLE = BACKEND_SERVER + \"/api_v1/role/table/remove\";\nexport const LIST_ROLES_TABLE = BACKEND_SERVER + \"/api_v1/role/tables\";\n\nexport const ADD_ROLES_MEMBER = BACKEND_SERVER + \"/api_v1/role/member/add\";\nexport const REMOVE_ROLES_MEMBER = BACKEND_SERVER + \"/api_v1/role/member/remove\";\nexport const LIST_ROLES_MEMBER = BACKEND_SERVER + \"/api_v1/role/members\";\n\nexport const LIST_BACKENDS_BY_TEAM = BACKEND_SERVER + \"/api_v1/backends\";\n\nexport const CHNAGE_PASSWORD = BACKEND_SERVER + \"/api_v1/changepassword\";","export const Method = {\n    GET: \"get\",\n    POST: \"post\",\n    PUT: \"put\"\n}\n\nexport const Status = {\n    Success: 200,\n    BadRequest: 400,\n    Unauthorized: 401,\n    Forbidden: 404,\n    ServerError: 500\n}\n\nexport const AccessToken = {\n    name: \"access-token\"\n}\n","import React from 'react'\nimport Dropzone from 'react-dropzone'\nimport {fromEvent} from 'file-selector';\nimport request from \"superagent\";\nimport {FILE_UPLOAD} from '../../service/BackendConfig'\nimport * as HTTP from \"../../service/HTTPMethod\";\n\nconst baseStyle = {\n    width: 200,\n    height: 200,\n    borderWidth: 2,\n    borderColor: '#666',\n    borderStyle: 'dashed',\n    borderRadius: 5\n};\nconst activeStyle = {\n    borderStyle: 'solid',\n    borderColor: '#6c6',\n    backgroundColor: '#eee'\n};\nconst rejectStyle = {\n    borderStyle: 'solid',\n    borderColor: '#c66',\n    backgroundColor: '#eee'\n};\n\nconst fileListStyle = {\n    display: 'flex'\n}\n\n\nexport class UploadDropzone extends React.Component {\n\n    constructor() {\n        super()\n        this.state = {\n            files: []\n        }\n\n    }\n\n    onDrop = (files) => {\n        this.setState({files})\n        const req = request.post(FILE_UPLOAD);\n        req.set('Access-Token', sessionStorage.getItem(HTTP.AccessToken.name) || '')\n        files.forEach(file => {\n            req.attach(file.path, file);\n        });\n\n        req.end((err, res) => {\n            this.setState({files: []})\n            if (!err) {\n                if (res.ok) {\n                    this.setState({msg: \"total files:\" + files.length + \" are uploaded. \\n You can check the files with command: !hdfs -ls /tmp/upload; \"})\n                }\n            } else {\n                console.log(err)\n                this.setState({msg: err.toString() + \"\\n Sometimes this caused by your upload space is not enough or backend fails\"})\n            }\n        })\n    }\n\n\n    render() {\n\n        const files = this.state.files.map(f => (\n            <li key={f.name}>\n                {f.path} - {f.size} bytes\n            </li>\n        ))\n\n        return (\n            <section style={fileListStyle}>\n                <div>\n                    <Dropzone onDrop={this.onDrop}\n                              getDataTransferItems={evt => fromEvent(evt)}\n                    >\n                        {({getRootProps, getInputProps, isDragActive, isDragAccept, isDragReject, acceptedFiles, rejectedFiles}) => {\n                            let styles = {...baseStyle}\n                            styles = isDragActive ? {...styles, ...activeStyle} : styles\n                            styles = isDragReject ? {...styles, ...rejectStyle} : styles\n\n                            return (\n                                <div\n                                    {...getRootProps()}\n                                    style={styles}\n                                >\n                                    <input {...getInputProps()} />\n                                    <div>\n                                        {isDragAccept ? 'Drop' : 'Drag'} files here...\n                                    </div>\n                                    {isDragReject && <div>Unsupported file type...</div>}\n                                </div>\n                            )\n                        }}\n                    </Dropzone>\n                </div>\n                <aside>\n                    <h4>{files.length === 0 ? \"\" : \"Files\"}</h4>\n                    <ul>{files}</ul>\n                </aside>\n                <div>{this.state.msg ? this.state.msg : \"\"}</div>\n            </section>\n        );\n    }\n}","import React, {PureComponent} from 'react';\nimport {\n    ScatterChart, Scatter, XAxis, YAxis, ZAxis, CartesianGrid, Tooltip, Legend,\n} from 'recharts';\n\nconst randomColor = require('randomcolor');\nconst generateColor = () => {\n    let color = randomColor()\n    if (color === \"#000000\") {\n        color = \"#8884d8\"\n    }\n    return color\n}\n\nexport default class MLSQLThreeDimScatterChart {\n\n\n    static basicCheck = (data, fun) => {\n        if (data.length < 1) {\n            return false\n        }\n\n        try {\n            return fun(data[0])\n        } catch (e) {\n            return false\n        }\n\n        return true\n    }\n\n    static isShouldRender = (data) => {\n        return MLSQLThreeDimScatterChart.basicCheck(data, (item) => {\n\n            return item.hasOwnProperty(\"x\") && item.hasOwnProperty(\"y\") && (item.hasOwnProperty(\"_dash_config\") || item.hasOwnProperty(\"dash\")) && (\n                item[\"dash\"] === \"scatter\" || (item[\"_dash_config\"] || {})[\"dash\"] === \"scatter\"\n            )\n        })\n    }\n\n    static render(data) {\n        let haveZ = data[0].hasOwnProperty(\"z\")\n        if (!data.hasOwnProperty(\"dataType\")) {\n            data.forEach((item) => {\n                item[\"dataType\"] = \"default\"\n                if (!haveZ) {\n                    item[\"z\"] = 0\n                }\n            })\n        }\n        const dataTypeToItems = data.reduce((map, item) => {\n            const {x, y, z, dataType} = item\n            const prev = map.get(dataType)\n            if (prev) {\n                prev.push(item)\n            } else {\n                map.set(dataType, [item])\n            }\n            return map\n        }, new Map())\n\n        const item = data[0]\n        const _config = item[\"_dash_config\"] || {}\n\n        const scatters = [...dataTypeToItems.keys()].map((key) => {\n            const dataTypeConfig = Object.assign({fill: generateColor(), shape: \"triangle\"}, (_config[key] || {}))\n            return <Scatter key={key} name={key} data={dataTypeToItems.get(key)} {...dataTypeConfig}/>\n        })\n\n\n        const xConfig = Object.assign({type: \"number\", dataKey: \"x\"}, (_config[\"x\"] || {}))\n        const yConfig = Object.assign({type: \"number\", dataKey: \"y\"}, (_config[\"y\"] || {}))\n        const zConfig = Object.assign({type: \"number\", dataKey: \"z\"}, (_config[\"z\"] || {}))\n\n\n        return (\n            <ScatterChart\n                width={400}\n                height={400}\n                margin={{\n                    top: 20, right: 20, bottom: 20, left: 20,\n                }}\n            >\n                <CartesianGrid/>\n                <XAxis {...xConfig}/>\n                <YAxis {...yConfig}/>\n                {haveZ ? <ZAxis {...zConfig}/> : \"\"}\n                <Tooltip cursor={{strokeDasharray: '3 3'}}/>\n                <Legend/>\n                {scatters}\n            </ScatterChart>\n        );\n    }\n\n}\n\n","import React, {PureComponent} from 'react';\nimport {\n    XAxis,\n    YAxis,\n    LineChart,\n    CartesianGrid,\n    Legend,\n    Line,\n    Tooltip as JTooltip,\n    Bar as JBar,\n    BarChart,\n} from 'recharts';\n\nconst randomColor = require('randomcolor');\nconst generateColor = () => {\n    let color = randomColor()\n    if (color === \"#000000\") {\n        color = \"#8884d8\"\n    }\n    return color\n}\n\nexport default class MLSQLLineChart {\n\n\n    static basicCheck = (data, fun) => {\n        if (data.length < 1) {\n            return false\n        }\n\n        try {\n            return fun(data[0])\n        } catch (e) {\n            return false\n        }\n\n        return true\n    }\n\n    static isShouldRender = (data) => {\n        return MLSQLLineChart.basicCheck(data, (item) => {\n            return item.hasOwnProperty(\"x\") && (item.hasOwnProperty(\"dash\") || item.hasOwnProperty(\"_dash_config\"))\n        })\n    }\n\n    static render(data) {\n        const item = data[0]\n        const ys = []\n        const _config = item[\"_dash_config\"] || {}\n        if (item[\"dash\"] === \"line\" || _config[\"dash\"] === \"line\") {\n            Object.keys(item).forEach((key) => {\n                if ((typeof item[key]) === \"number\") {\n                    const dataTypeConfig = Object.assign({stroke: generateColor()}, (_config[key] || {}))\n                    ys.push(<Line key={key} type=\"monotone\" dataKey={key} {...dataTypeConfig}/>)\n                }\n            })\n            return <LineChart\n                width={500}\n                height={300}\n                data={data}\n                margin={{\n                    top: 5, right: 30, left: 20, bottom: 5,\n                }}\n            >\n                <CartesianGrid strokeDasharray=\"3 3\"/>\n                <XAxis dataKey=\"x\"/>\n                <YAxis/>\n                <JTooltip/>\n                <Legend/>\n                {ys}\n            </LineChart>\n        }\n\n\n        if (item[\"dash\"] === \"bar\" || _config[\"dash\"] === \"bar\") {\n            Object.keys(item).forEach((key) => {\n                if ((typeof item[key]) === \"number\") {\n                    const dataTypeConfig = Object.assign({fill: generateColor()}, (_config[key] || {}))\n                    ys.push(<JBar key={key} dataKey={key} {...dataTypeConfig}/>)\n                }\n            })\n            return <BarChart\n                width={500}\n                height={300}\n                data={data}\n                margin={{\n                    top: 5, right: 30, left: 20, bottom: 5,\n                }}\n            >\n                <CartesianGrid strokeDasharray=\"3 3\"/>\n                <XAxis dataKey=\"x\"/>\n                <YAxis/>\n                <JTooltip/>\n                <Legend/>\n                {ys}\n            </BarChart>\n        }\n    }\n\n}","import React, {Component} from 'react';\nimport {LineChart, Line, CartesianGrid, XAxis, YAxis, Legend} from 'recharts';\nimport moment from \"moment\";\n\n\nexport default class MLSQLStream extends Component {\n\n    constructor(props) {\n        super(props);\n        this.queryApp = props.parent.parent\n        this.state = {data: props.data, dataForRender: [], titleMap: {}}\n\n    }\n\n    componentDidMount() {\n        this.renderStream()\n    }\n\n    static isStream = (data) => {\n        if (data.length < 1) {\n            return false\n        }\n        try {\n            const item = JSON.parse(data[0][\"value\"])\n            if (!item[\"runId\"]) {\n                return false\n            }\n        } catch (e) {\n            return false\n        }\n\n        return true\n    }\n\n    static isShouldRender = (data) => {\n        return MLSQLStream.isStream(data)\n    }\n\n    renderStream = () => {\n        const data = this.state.data\n        const dataForRender = []\n        const dataForRender2 = []\n\n        data.forEach((item) => {\n            const jsonItem = JSON.parse(item[\"value\"])\n            const x = moment.utc(jsonItem.timestamp).format('DD,h:mm:ss')\n            dataForRender.push({\n                x: x,\n                inputRowsPerSecond: jsonItem.inputRowsPerSecond,\n                processedRowsPerSecond: jsonItem.processedRowsPerSecond\n            })\n\n            dataForRender2.push({\n                x: x,\n                numInputRows: jsonItem.numInputRows\n            })\n        })\n        this.setState({\n            dataForRender: dataForRender,\n            dataForRender2: dataForRender2\n        })\n    }\n\n    static renderRawData = (data) => {\n        if (!MLSQLStream.isShouldRender(data)) return \"\"\n        const dataForRender = []\n        data.forEach((item) => {\n            const jsonItem = JSON.parse(item[\"value\"])\n            dataForRender.push(JSON.stringify(jsonItem, null, 2))\n        })\n        return dataForRender.join(\"\\n\")\n    }\n\n    render() {\n        if (this.state.dataForRender.length === 0) return null\n        return <div>\n\n            <LineChart width={800} height={300} data={this.state.dataForRender}>\n                <Line type=\"monotone\" dataKey=\"inputRowsPerSecond\" stroke=\"#8884d8\"/>\n                <Line type=\"monotone\" dataKey=\"processedRowsPerSecond\" stroke=\"#82ca9d\"/>\n                <CartesianGrid stroke=\"#ccc\"/>\n                <XAxis dataKey=\"x\"/>\n                <YAxis/>\n                <Legend/>\n            </LineChart>\n\n            <LineChart width={800} height={300} data={this.state.dataForRender2}>\n                <Line type=\"monotone\" dataKey=\"numInputRows\" stroke=\"#8884d8\"/>\n                <CartesianGrid stroke=\"#ccc\"/>\n                <XAxis dataKey=\"x\"/>\n                <YAxis/>\n                <Legend/>\n            </LineChart>\n        </div>\n    }\n\n}\n\n","import React from 'react';\nimport {Resizable} from \"re-resizable\";\n\n\nexport default class MLSQLHTML {\n\n\n    static basicCheck = (data, fun) => {\n        if (data.length < 1) {\n            return false\n        }\n\n        try {\n            return fun(data[0])\n        } catch (e) {\n            return false\n        }\n\n        return true\n    }\n\n    static isShouldRender = (data) => {\n        return MLSQLHTML.basicCheck(data, (item) => {\n            return item.hasOwnProperty(\"html\") && (item.hasOwnProperty(\"dash\") || item.hasOwnProperty(\"_dash_config\"))\n        })\n    }\n\n    static render(data) {        \n        const item = data[0]    \n        return <MLSQLHTMLPanel data={item}></MLSQLHTMLPanel>\n    }\n\n}\n\nexport class MLSQLHTMLPanel extends React.Component {\n\n\n    constructor(props) {\n        super(props)\n        this.state = {data: this.props.data}\n    }\n\n    refresh = (data) => {\n        this.setState({data: data})\n    }\n\n    render() {        \n        return (\n            <div style={{width:\"100%\"}}>\n                <Resizable defaultSize={{height: \"500px\"}}>\n                    <iframe\n                        sandbox=\"allow-scripts\"\n                        style={{width: '100%', height: \"100%\"}}\n                        srcDoc={this.state.data[\"html\"]}\n                        frameBorder=\"0\"\n                        scrolling=\"yes\"\n                        ref={(f) => {\n                            this.ifr = f;\n                        }}\n\n                    />\n                </Resizable>\n            </div>\n        );\n        \n    }\n\n\n}","import ConsoleOp from \"./ConsoleOp\";\n\nexport default class EditorOp extends ConsoleOp{\n    constructor(comp){\n      super(comp)\n    }\n    getText() {\n        return this.editor.getValue()\n    }\n\n    getSelection(){\n        let selectionRange = this.editor.getSelectionRange()\n        let content = this.session.getTextRange(selectionRange);\n        return content\n    }\n}","export default class  ConsoleOp{\n  constructor(consoleComp){\n     this.inner = consoleComp \n     this.session = this.inner.editor.session\n     this.editor = this.inner.editor    \n  }\n\n  setText(msg){\n      this.editor.setValue(msg)\n      return this\n  }\n\n  append(msg){\n    this.session.insert({\n        row: this.session.getLength(),\n        column: 0\n    }, \"\\n\" + msg)\n    return this\n  }\n\n  insertAfterCursor(msg){\n    const p = this.editor.getCursorPosition()\n    this.session.insert(p, msg)\n    this.editor.focus()\n    return this\n  }\n}","import {ActionProxy} from '../../backend_service/ActionProxy';\nimport RemoteAction from '../../backend_service/RemoteAction';\n\nconst uuidv4 = require('uuid/v4');\nconst client = new ActionProxy()\nexport default class EngineService {\n\n    static async ls(path) {\n        const client = new ActionProxy()\n        const res = await client.runScript(`!hdfs -ls -F ${path};`, uuidv4(), {\"queryType\": \"robot\"})\n        return res\n    }\n\n    static async killJob(jobName) {\n        const res = await client.runScript(\"!kill \" + jobName + \";\", uuidv4(), {\"queryType\": \"robot\"})\n        //sync the status        \n        await client.get(RemoteAction.JOB_KILL, {jobName: jobName})\n        return res\n    }\n\n    static async runJob(sql, block = false) {\n        const res = await client.runScript(sql, uuidv4(), {\"async\": block})\n        return res\n    }\n\n    static async showFunctions() {\n        const res = await client.runScript(\"\", uuidv4(), {executeMode: \"sqlFunctions\"})\n        return res\n    }\n\n    static async jobs() {\n        const jobName = uuidv4()\n        const res = await client.runScript(`load _mlsql_.\\`jobs\\` as wow;`, jobName, {\"queryType\": \"robot\"})\n        return {jobName, res}\n    }\n\n    static async tablesInDeltaLake() {\n        const jobName = uuidv4()\n        const res = await client.runScript(`!delta show tables;`, jobName, {\"queryType\": \"robot\"})\n        return res\n    }\n\n    static async tablesInWorkshop() {\n        const res = await client.get(RemoteAction.ANALYSIS_TABLES, {})\n        return res\n    }\n\n    static async tableInfo(tableName) {\n        const res = await client.get(RemoteAction.ANALYSIS_TABLE_INFO, {tableName})\n        return res\n    }\n\n    static async jobProgress(jobName) {\n        const res = await client.runScript(`load _mlsql_.\\`jobs/get/${jobName}\\` as wow;`, uuidv4(), {\"queryType\": \"robot\"})\n        const empty_res = {currentJobIndex: 0, totalJobs: 1}\n        if (res.status === 200) {\n            const jsonObj = res.content[0]\n            if (!jsonObj) {\n                return empty_res\n            }\n            let currentJobIndex = jsonObj.progress.currentJobIndex\n            let totalJobs = jsonObj.progress.totalJob\n            if (totalJobs === 1) {\n                const res2 = await client.runScript(`load _mlsql_.\\`jobs/${jobName}\\` as wow;`, uuidv4(), {\"queryType\": \"robot\"})\n                currentJobIndex = res2.content[0].completedJobsNum\n                totalJobs = res2.content[0].activeJobsNum + currentJobIndex\n            }\n            return {currentJobIndex, totalJobs}\n        }\n        return empty_res\n    }\n\n    static async currentSQL(jobName) {\n        const res = await client.runScript(`load _mlsql_.\\`jobs/get/${jobName}\\` as wow;`, uuidv4(), {\"queryType\": \"robot\"})\n        const empty_res = {currentJobIndex: 0, totalJobs: 1, script: \"\", isFinish: true}\n        if (res.status === 200) {\n            const jsonObj = res.content[0]\n            if (!jsonObj) {\n                return empty_res\n            }\n            let currentJobIndex = jsonObj.progress.currentJobIndex\n            let totalJobs = jsonObj.progress.totalJob\n            let script = jsonObj.progress.script\n            return {currentJobIndex, totalJobs, script,isFinish:false}\n        }else {\n            return empty_res\n        }\n\n    }\n\n    static async jobProgress2(jobName) {\n        const res2 = await client.runScript(`load _mlsql_.\\`jobs/v2/${jobName}\\` as wow;`, uuidv4(), {\"queryType\": \"robot\"})\n        return res2.content[0]\n    }\n\n    static async resourceInfo() {\n        const res = await client.runScript(`load _mlsql_.\\`resource\\` as output;`, uuidv4(), {\"queryType\": \"robot\"})\n        const totalCores = res.content[0].totalCores\n        const activeTasks = res.content[0].activeTasks\n        return {activeTasks, totalCores}\n    }\n}","import React from 'react';\nimport { ActionProxy } from \"../../backend_service/ActionProxy\"\nimport RemoteAction from '../../backend_service/RemoteAction';\nimport { MLSQLQueryDisplay } from '../../components/MLSQLQueryDisplay';\nimport { Button, Modal } from 'antd';\nimport EditorOp from '../comp_op/EditorOp'\nimport AceEditor from 'react-ace';\nimport EngineService from '../service/EngineService';\n\nexport default class QueryHistory extends React.Component {\n    constructor(props){\n      super(props)\n      // here the queryApp is actually MLSQLACEEditor\n      this.queryApp = props.parent.queryApp      \n      this.client = new ActionProxy()\n      this.state = {showDetail:false,executeAgainStatus:{}}\n      \n\n      let defaultRender =  (value,record)=>{\n        return <Button type=\"link\" onClick={async (evt)=>{\n          // target button\n          // parentNode th\n          // parentNode tr\n          // the second th is jobName\n          // <tr><th>...</th></tr>\n          const currentTH = evt.target.parentNode\n          // another way get row index and column index\n          // console.log(`${currentTH.parentElement.rowIndex}:${currentTH.cellIndex} `)\n          // const domTree = evt.target.parentNode.parentNode      \n          // const jobName = domTree.children[1].innerText\n          // const num = [].slice.call(domTree.children).indexOf(currentTH)\n          const num = currentTH.parentNode.cellIndex\n          let field = \"\"\n          switch (num){\n            case 2: field= \"content\";break;\n            case 4: field= \"reason\";break;\n            case 7: field= \"response\";break;\n          } \n          console.log(num)         \n          await this.showDetail(record.name,field)\n          \n        }} ><span style={{whiteSpace:\"normal\",wordWrap:\"break-word\",width:\"100px\"}}>{value}</span></Button>\n      }\n      \n      let statusRender = (value)=>{\n        let t = \"\"\n        let cssStyle = {}\n        switch (value) {\n          case \"fail\": t = \"danger\"; break;\n          case \"killed\": t = \"danger\"; break;\n          case \"success\": t = \"primary\"; cssStyle ={backgroundColor:\"green\"}; break;\n          case \"running\": t = \"primary\";break;\n        }\n        \n        return <Button type={t} style={cssStyle}>{value}</Button>\n      }\n\n      let killJobRender = (value,record)=>{  \n        const jobName = record.name\n        if(record.status!==\"running\"){\n            return <Button type=\"primary\" key={jobName} loading={this.state.executeAgainStatus[jobName]} onClick={async (evt)=>{  \n               this.state.executeAgainStatus[jobName] = true \n               this.setState(this.state.executeAgainStatus)\n               await EngineService.runJob(record.content)\n               this.reload()\n            }}>Execute again</Button>\n        }\n        return <Button key={jobName} onClick={async (evt)=>{           \n           const res = await EngineService.killJob(jobName)\n           this.reload()\n         }}>Kill</Button>\n      }\n\n      let showTableRender = (value,record)=>{\n        return <Button type=\"link\" onClick={async (evt)=>{               \n          await this.showResponse(record.name)\n        }}><span style={{whiteSpace:\"normal\",wordWrap:\"break-word\",width:\"100px\"}}>{value}</span></Button>      \n      }\n\n      this.renderConfig = {\n        render:{\n          content: defaultRender,\n          response: showTableRender,\n          reason: defaultRender,\n          status: statusRender,\n          \"__command__\": killJobRender\n        }\n      }      \n    }\n\n    async reload(){\n      this.setState({executeAgainStatus:{}})\n      const res = await this.client.get(RemoteAction.JOB_LIST,{}) \n      if(res.status == 200){\n        if(this.display){\n            this.display.update(\n              this.processData(res.content),\n              this.renderConfig)\n        }  \n      }\n    }\n\n    processData(data){\n       return data.map(item=>{\n         const jobName = item[\"status\"]===\"running\" ? item[\"jobName\"] : \"\"\n         return Object.assign(item,{\"__command__\":jobName})\n       })\n    }\n\n    async showDetail(jobName,field){  \n      const res = await this.client.get(RemoteAction.JOB_DETAIL,{jobName:jobName})      \n      this.setState({        \n        showDetail: true,\n        detailConsoleMessage:res.content[field] \n      })           \n    }\n\n    async showResponse(jobName){  \n      const res = await this.client.get(RemoteAction.JOB_DETAIL,{jobName:jobName})\n      this.setState({        \n        showResponse: true\n      })            \n      if(this.respDisplay){                         \n        this.respDisplay.update(JSON.parse(res.content.response))\n      }      \n    }\n\n    toggleDetail = ()=>{      \n      this.setState({showDetail:!this.state.showDetail})\n    }\n    toggleResponse = ()=>{      \n      this.setState({showResponse:!this.state.showResponse})\n    }\n\n   async componentDidMount(){\n       await this.reload()\n    }\n\n    cleanSQL = (sql)=> {\n       try{\n        return sql.split(\"\\n\").filter(line=> !line.includes(\"password\")).join(\"\\n\")\n       }catch(e){\n        return sql\n       }\n       \n    }\n\n    render(){\n      return <div className=\"mlsql-query-display\"> \n        <Modal  \n                    title={\"View\"}\n                    visible={this.state.showDetail}\n                    onCancel={this.toggleDetail}\n                    onOk={this.toggleDetail}\n                    cancelText=\"Cancel\" \n                    width=\"70%\"                   \n                    OkText=\"Ok\">                    \n         <AceEditor height={\"300px\"}\n                        width={\"100%\"}                        \n                        mode=\"text\"\n                        theme=\"github\"\n                        name=\"detail_box\"\n                        value={this.cleanSQL(this.state.detailConsoleMessage)||\"\"}\n        ></AceEditor>\n        </Modal> \n        <Modal  \n                    title={\"View\"}\n                    visible={this.state.showResponse}\n                    onCancel={this.toggleResponse}\n                    onOk={this.toggleResponse}\n                    cancelText=\"Cancel\" \n                    width=\"70%\"\n                    OkText=\"Ok\">                    \n        <MLSQLQueryDisplay style={{overflow:\"scroll\"}} ref={(_display)=>{this.respDisplay = _display}} parent={this}/>\n        </Modal> \n        <div style={{ marginBottom: 16 }}>\n          <Button type=\"primary\" onClick={()=>{this.reload()}}>\n            Reload\n          </Button>          \n        </div>     \n        <MLSQLQueryDisplay ref={(_display)=>{this.display = _display}} parent={this}/>\n      </div>\n    }\n}","import * as React from \"react\";\nimport { Progress,Button } from \"antd\";\nimport EngineService from \"../service/EngineService\";\nimport \"./ResourceProgress.scss\"\nexport default class ResourceProgress extends React.Component {\n    constructor(props) {\n        super(props) \n        this.queryPanel = props.parent               \n        this.state ={percent:0}        \n    }\n\n    async componentDidMount(){\n      await this.reload()\n    }\n\n    async reload(){\n       const {activeTasks,totalCores} = await EngineService.resourceInfo() \n       const {jobName,res}  = await EngineService.jobs() \n       const jobNum = res.content.filter((item)=>{\n           return item.jobName !== jobName \n       }).length     \n       this.setState({percent:activeTasks/totalCores*100,\n        totalCores,activeTasks,jobNum})\n    }\n\n    enter = (params) => {\n       \n    }\n\n    exit = () => {        \n       \n    }\n\n    render() {\n        return <div className=\"rp-main\">\n            \n            <div className=\"rp-block\">\n            <div className=\"rp-name\" >CPU Usage(total cores:{this.state.totalCores}): </div>\n             <Progress percent={this.state.percent}   style={{maxWidth:\"300px\"}}/>                           \n            </div> \n\n            <div className=\"rp-block\">\n            <div className=\"rp-name\">Jobs Running: <span>{this.state.jobNum}</span></div>\n                \n            </div>            \n        </div>\n    }\n}","import React, {Component, PureComponent} from 'react';\nimport {Collapse,Tabs} from 'antd';\nimport {UploadDropzone} from '../upload/UploadDropZone'\nimport MLSQLThreeDimScatterChart from \"../dash/MLSQLScatterChart\";\nimport MLSQLLineChart from \"../dash/MLSQLLineChart\";\nimport MLSQLStream from \"../dash/MLSQLStream\";\nimport MLSQLHTML from \"../dash/MLSQLHTML\";\nimport QueryHistory from \"../../v1/async_execute/QueryHistory\"\nimport ResourceProgress from '../../v1/async_execute/ResourceProgress';\nimport {\n    BarChart, Bar, Cell, XAxis, YAxis, CartesianGrid, Tooltip, Legend,\n  } from 'recharts';\n\n\nconst Panel = Collapse.Panel;\nconst TabPane = Tabs.TabPane;\n\nfunction callback(key) {\n    \n}\n\nexport class MLSQLDash extends PureComponent {\n    constructor(props) {\n        super(props);\n        this.queryApp = props.parent\n        this.state = {data: [], dataForRender: [], titleMap: {}}\n    }\n\n\n    static basicCheck = (data, fun) => {\n        if (data.length < 1) {\n            return false\n        }\n\n        try {\n            return fun(data[0])\n        } catch (e) {\n            return false\n        }\n\n        return true\n    }\n\n\n    isNormalXY = (data) => {\n        return MLSQLDash.basicCheck(data, (item) => {\n            return item.hasOwnProperty(\"x\") && item.hasOwnProperty(\"y\") && ((typeof item[\"y\"]) === \"number\")\n        })\n    }\n\n\n    xYRender = (data) => {\n        return <Bar\n            height={200}\n            title=\"Bar\"\n            data={data}\n        />\n    }\n\n\n    renderDash = () => {\n        const data = this.state.data        \n        if (MLSQLStream.isShouldRender(data)) {\n            return <MLSQLStream data={data} parent={this}/>\n        }\n\n        if (MLSQLThreeDimScatterChart.isShouldRender(data)) {\n            return MLSQLThreeDimScatterChart.render(data)\n        }\n\n        if (this.isNormalXY(data)) {\n            return this.xYRender(data)\n        }\n\n        if (MLSQLLineChart.isShouldRender(data)) {\n            return MLSQLLineChart.render(data)\n        }\n\n        if (MLSQLHTML.isShouldRender(data)) {\n            return MLSQLHTML.render(data)\n        }\n\n        return <div></div>\n\n    }\n\n    refresh() {\n        try {\n            const data = this.queryApp.queryResData || []\n            this.setState({data: data})\n        } catch (e) {\n\n        }\n\n    }\n\n\n    render() {\n        return (<Collapse onChange={callback}>\n            <Panel header=\"Tools/Dashboard\" key=\"0\">\n                <Tabs defaultActiveKey=\"0\" onChange={callback} onTabClick={(key)=>{\n                        if(key===\"0\"){                            \n                            this.resourceProgressRef.reload()\n                        }                        \n                    }}>\n                    <TabPane tab=\"Cluster Info\" key=\"0\">\n                     <ResourceProgress ref={(et)=>this.resourceProgressRef=et} parent={this}></ResourceProgress>\n                    </TabPane>\n                    <TabPane tab=\"Upload\" key=\"1\">\n                        <UploadDropzone/>\n                    </TabPane>\n                    <TabPane tab=\"Dashboard\" key=\"2\">{this.renderDash()}</TabPane>\n                    <TabPane tab=\"RawData\" key=\"3\">\n                        <pre>{MLSQLStream.renderRawData(this.state.data)}</pre>\n                    </TabPane>\n                    <TabPane tab=\"History\" key=\"4\">\n                        <QueryHistory ref={(et)=>this.queryHistory=et} parent={this}/>\n                    </TabPane>\n\n                    {/* <TabPane tab=\"Running jobs\" key=\"5\">\n                        <QueryHistory ref={(et)=>this.queryHistory=et}/>\n                    </TabPane> */}\n                </Tabs>\n            </Panel>\n        </Collapse>)\n    }\n\n}","const { ActionProxy } = require(\"../../backend_service/ActionProxy\");\nconst { default: RemoteAction } = require(\"../../backend_service/RemoteAction\");\n\nexport default class CodeIntellegence {\n     static async getSuggestList(sql,lineNum,columnNum){\n    \n    const restClient = new ActionProxy()\n\n    const res = await restClient.post(RemoteAction.RUN,{\n        executeMode: \"autoSuggest\",\n        sql: sql, \n        lineNum: lineNum +1,\n        columnNum: columnNum,\n        isDebug: false,\n        queryType: \"robot\" \n    })\n\n    if(res && res.status === 200){\n        const wordList = res.content\n        return wordList\n    }else {\n        return []\n    } \n   } \n}","import React from \"react\";\nimport {MLSQLAPI, APIResponse, ServerError} from \"../service/MLSQLAPI\";\nimport * as backendConfig from \"../service/BackendConfig\";\nimport * as HTTP from \"../service/HTTPMethod\";\nimport Cookies from 'universal-cookie';\n\n\nexport class MLSQLAuth {\n\n    isLogin() {\n        return sessionStorage.getItem(HTTP.AccessToken.name) !== null\n    }\n\n    /**\n     *\n     * @param callback {(userName)=>{}}\n     */\n    userName(callback) {\n\n        const api = new MLSQLAPI(backendConfig.USERNAME_URL)\n\n        /**\n         * @param  {APIResponse} apiResponse\n         */\n        const sCallBack = (apiResponse) => {\n            /**\n             *  if server return unauthorized status, then we should\n             *  remove our token since it maybe invalidate.\n             */\n            if (apiResponse.status === HTTP.Status.Unauthorized) {\n                sessionStorage.removeItem(HTTP.AccessToken.name)\n            } else {\n                apiResponse.content.then((s => {\n                    callback(JSON.parse(s)[\"userName\"])\n                })).catch((error) => {\n                })\n            }\n        }\n\n        api.request(HTTP.Method.GET, {}, sCallBack, (m) => {\n            console.log(m)\n        })\n    }\n\n    user(callback) {\n\n        const api = new MLSQLAPI(backendConfig.USERNAME_URL)\n        api.request2({}, (json) => {\n            callback(json)\n        }, (str) => {\n\n        })\n    }\n\n    /**\n     * @param {String} userName\n     * @param {String} password\n     */\n    login(userName, password, _sCallBack, _errorCallBack) {\n        this.registerOrLogin(backendConfig.LOGIN_URL, userName, password, _sCallBack, _errorCallBack)\n    }\n\n    logout() {\n        sessionStorage.removeItem(HTTP.AccessToken.name)\n    }\n\n    /**\n     * @param {String} userName\n     * @param {String} password\n     */\n    register(userName, password, _sCallBack, _errorCallBack) {\n        this.registerOrLogin(backendConfig.REGISTER_URL, userName, password, _sCallBack, _errorCallBack)\n    }\n\n    registerOrLogin(url, userName, password, _sCallBack, _errorCallBack) {\n        const api = new MLSQLAPI(url)\n\n        const body = {\n            userName: userName,\n            password: password\n        }\n\n        /**\n         * @param  {APIResponse} apiResponse\n         */\n        const sCallBack = (apiResponse) => {\n            if (apiResponse.accessToken) {\n                sessionStorage.setItem(HTTP.AccessToken.name, apiResponse.accessToken)\n                const cookies = new Cookies();\n                cookies.set(HTTP.AccessToken.name, apiResponse.accessToken, { path: '/' });\n            }\n            _sCallBack(apiResponse)\n        }\n        /**\n         *\n         * @param {ServerError} serverError\n         */\n        const errorCallBack = (serverError) => {\n            _errorCallBack(serverError)\n        }\n        api.request(HTTP.Method.POST, body, sCallBack, errorCallBack)\n    }\n}","import * as HTTP from \"../service/HTTPMethod\";\nimport {MLSQLAuth as Auth} from \"../user/MLSQLAuth\";\n\nconst uuidv4 = require('uuid/v4');\n\nexport class ServerError {\n    constructor(content) {\n        this.value = content\n    }\n}\n\nexport class APIResponse {\n    /**\n     * @param {Number} status\n     * @param {Promise<String>} content\n     * @param {String} accessToken\n     */\n    constructor(status, content, accessToken) {\n        this.status = status;\n        this.content = content;\n        this.accessToken = accessToken\n    }\n\n    json = (process, jsonErr) => {\n\n        this.content.then((s) => {\n            try {\n                const jsonObj = JSON.parse(s)\n                process(jsonObj)\n            } catch (e) {\n                console.log(e)\n                jsonErr(s)\n            }\n\n        })\n    }\n\n}\n\nexport class MLSQLAPI {\n\n    constructor(url) {\n        this.url = url;\n    }\n\n\n    request2(params, successCallback, serverErrorCallback) {\n        const self = this\n        self.request(HTTP.Method.POST, params, (ok) => {\n            ok.json((wow) => {\n                successCallback(wow)\n            }, (jsonErr) => {\n                serverErrorCallback(jsonErr)\n            })\n        }, (fail) => {\n            try {\n                fail.value().content((str) => {\n                    let res = str\n                    try {\n                        res = JSON.parse(str)[\"msg\"]\n                    } catch (e) {\n\n                    }\n                    serverErrorCallback(res)\n                })\n            } catch (e) {\n                serverErrorCallback(fail ? fail.toString() : \"result is null\")\n            }\n\n        })\n    }\n\n    runScript(params, sql, successCallback, serverErrorCallback) {\n        const auth = new Auth()\n        const jobName = uuidv4()\n        const self = this\n        auth.user((jsonRes) => {\n            const {userName, backendTags} = jsonRes            \n            const finalParams = {\n                sql: sql,\n                owner: userName,\n                jobName: jobName,\n                sessionPerUser: true,\n                show_stack: true,\n                skipAuth: false,\n                tags: backendTags || \"\"\n            }\n            Object.assign(finalParams, params)\n            const background = params.background || false\n            if (background) {\n                Object.assign(finalParams, {async: true, callback: \"\"})\n            }\n\n            self.request(HTTP.Method.POST, finalParams, (ok) => {\n                if (ok.status === 200) {\n                    ok.json((wow) => {\n                        successCallback(wow)\n                    }, (jsonErr) => {\n                        serverErrorCallback(jsonErr)\n                    })\n                } else {\n                    try {\n                        ok.content.then((str) => {\n                            let res = str\n                            try {\n                                res = JSON.parse(str)[\"msg\"]\n                            } catch (e) {\n\n                            }\n                            serverErrorCallback(\"backend status:\" + ok.status + \"\\n\" + res)\n                        })\n                    } catch (e) {\n                        serverErrorCallback(\"backend status:\" + ok.status)\n                    }\n                }\n\n            }, (fail) => {\n                try {\n                    fail.value().content((str) => {\n                        let res = str\n                        try {\n                            res = JSON.parse(str)[\"msg\"]\n                        } catch (e) {\n\n                        }\n                        serverErrorCallback(res)\n                    })\n                } catch (e) {\n                    serverErrorCallback(fail ? fail.toString() : \"result is null\")\n                }\n\n            })\n        })\n    }\n\n    request(method, body, successCallback, serverErrorCallback) {\n        method = method.toUpperCase();\n\n        let formBody = [];\n        for (let property in body) {\n            let encodedKey = encodeURIComponent(property);\n            let encodedValue = encodeURIComponent(body[property]);\n            formBody.push(encodedKey + \"=\" + encodedValue);\n        }\n\n        let newurl = this.url\n\n        if (method === \"GET\") {\n            newurl = newurl + \"?\" + formBody\n            formBody = undefined\n        } else {\n            formBody = formBody.join(\"&\")\n        }\n        return fetch(newurl, {\n            method: method,\n            timeout: 1000 * 60 * 60 * 24,\n            headers: {\n                'Content-Type': 'application/x-www-form-urlencoded',\n                'Accept': 'application/json',\n                'Access-Token': sessionStorage.getItem(HTTP.AccessToken.name) || ''\n            },\n            body: formBody\n        }).then((res) => {\n            successCallback(new APIResponse(res.status, res.text(), res.headers.get(HTTP.AccessToken.name)))\n        })\n            .catch((res) => {\n                serverErrorCallback(new ServerError(res))\n            })\n    }\n\n    newRunScript(params, sql, okFun, failFun) {\n        const auth = new Auth()\n        const jobName = uuidv4()\n        const self = this\n        auth.user((jsonRes) => {\n            const {userName, backendTags} = jsonRes\n\n            if (!backendTags) {\n                failFun(`\n                \n                ---------------Warning--------------------\n                \n                Please make sure you have backend configured. \n                If not, please contact admin;\n                \n                ------------------------------------------\n                `)\n                return\n            }\n\n            const finalParams = {\n                sql: sql,\n                owner: userName,\n                jobName: jobName,\n                sessionPerUser: true,\n                show_stack: true,\n                skipAuth: false,\n                tags: backendTags || \"\"\n            }\n            Object.assign(finalParams, params)\n            const background = params.background || false\n            if (background) {\n                Object.assign(finalParams, {async: true, callback: \"\"})\n            }\n\n            self.new_request(HTTP.Method.POST, finalParams, okFun, failFun)\n        })\n    }\n\n    new_request(method, body, okFun, failFun) {\n        method = method.toUpperCase();\n\n        let formBody = [];\n        for (let property in body) {\n            let encodedKey = encodeURIComponent(property);\n            let encodedValue = encodeURIComponent(body[property]);\n            formBody.push(encodedKey + \"=\" + encodedValue);\n        }\n\n        let newurl = this.url\n\n        if (method === \"GET\") {\n            newurl = newurl + \"?\" + formBody\n            formBody = undefined\n        } else {\n            formBody = formBody.join(\"&\")\n        }\n        let resStatus = 0\n\n        return fetch(newurl, {\n            method: method,\n            timeout: 1000 * 60 * 60 * 24,\n            headers: {\n                'Content-Type': 'application/x-www-form-urlencoded',\n                'Accept': 'application/json',\n                'Access-Token': sessionStorage.getItem(HTTP.AccessToken.name) || ''\n            },\n            body: formBody\n        }).then((res) => {\n            resStatus = res.status\n            if (resStatus === 200) {\n                res.json().then((value) => {\n                    okFun(value)\n                })\n            }\n            return res\n        }).then(res => {\n            const extractMsg = () => {\n                res.text().then(value => {\n                        try {\n                            failFun(JSON.parse(value)[\"msg\"])\n                        } catch (e) {\n                            failFun(value)\n                        }\n                    }\n                )\n            }\n\n            switch (resStatus) {\n                case 201:\n                    break\n                case 400:\n                    extractMsg()\n                    break\n                case 500:\n                    extractMsg()\n                    break\n                default:\n                    console.log('unhandled')\n                    break\n            }\n        })\n            .catch((err) => {\n                failFun(err.message)\n            })\n    }\n}","export class ButtonToCommand {\n    makeSQL = (name) => {\n        if (name === \"JobList\") {\n            return `load _mlsql_.\\`jobs\\` as output;`\n        }\n        if (name === \"ConnectMySQL\") {\n            return `connect jdbc where\n url=\"jdbc:mysql://127.0.0.1:3306/wow?characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&tinyInt1isBit=false\"\n and driver=\"com.mysql.jdbc.Driver\"\n and user=\"\"\n and password=\"\"\n as db_1;`\n        }\n\n        if (name === \"ShowResource\") {\n            return `load _mlsql_.\\`resource\\` as output;`\n        }\n        return \"\"\n    }\n}","import { ActionProxy } from \"../../backend_service/ActionProxy\"\nimport RemoteAction from \"../../backend_service/RemoteAction\"\nimport EngineService from \"../service/EngineService\";\nconst uuidv4 = require('uuid/v4');\n\nexport default class AsyncExecuter {\n    constructor(queryPanel){\n      this.queryPanel = queryPanel\n      this.client = new ActionProxy()\n      this.jobName = uuidv4()\n      this.editorOp = this.queryPanel.getEditorOp()\n      this.consoleOp = this.queryPanel.getConsoleOp()\n      const selectSQL = this.editorOp.getSelection()\n      this.sql = selectSQL || this.editorOp.getText() \n\n      this.commandGroupRef = this.queryPanel.commandGroup.current\n      //this.resourceProgressRef = this.queryPanel.resourceProgressRef\n      this.jobProgressRef = this.queryPanel.jobProgressRef\n      this.taskProgressRef = this.queryPanel.taskProgressRef.current\n      \n      this.displayRef = this.queryPanel.queryApp.display.current\n      this.dashRef = this.queryPanel.queryApp.dash.current\n\n\n      this.timeout = this.commandGroupRef.state.timeout\n      this.logInfo = {}\n\n      this.closed = false\n    \n\n      \n    }\n\n    log(msg){\n        this.consoleOp.append(msg)\n        return this\n    }\n\n    enterLoading = () => {\n        this.commandGroupRef.setState({loading: true});\n        //this.resourceProgressRef.enter({jobName: this.jobName})        \n        //this.taskProgressRef.enter({jobName: this.jobName})        \n    }\n\n    exitLoading = () => {\n        this.commandGroupRef.setState({loading: false});\n        // this.jobProgressRef.exit()\n        //this.resourceProgressRef.exit()\n        //this.taskProgressRef.exit()        \n    }\n\n    prepare(){        \n        this.enterLoading()\n        this.consoleOp.setText(\"\")\n        this.displayRef.update(JSON.parse(\"[]\"))\n    }\n    measureTime(startTime) {\n        this.exitLoading()\n        const endTime = new Date().getTime()\n        return endTime - startTime\n    }\n\n\n\n    async saveFile(params){\n      const scriptId = this.queryPanel.state.scriptId\n      if(!scriptId){\n         this.log(\"No file are opened, cannot execute save action\")\n         return\n      }\n      const res = await this.client.post(RemoteAction.SAVE_SCRIPT_FILE,{\n        id: scriptId,\n        content: this.editorOp.getText()\n      })\n      if(res.status !== 200){\n          this.log(res.content)\n      }\n      if(res.status === 200){\n          this.log(`File[${scriptId}] have been saved.`)\n      }\n      return res\n\n    }\n\n    async run(params) {\n        this.prepare()\n        const startTime = new Date().getTime()        \n        const res = await this.client.runScript(this.sql, this.jobName, Object.assign(params,{\n            jobName: this.jobName,\n            async: true,\n            timeout: this.timeout,\n            engineName:this.queryPanel.engineName\n        }))    \n        \n        if(res.status !== 200){                                    \n            this.log(\"Fail to submit job\" + \"\\nTime cost:\" + this.measureTime(startTime) + \"ms\")            \n            return []\n        }\n\n        this.intervalTimer = setInterval(async () => {            \n            await this.monitorJob()\n            await this.monitorLog()\n        }, 1000)\n\n        //refresh job list in dash\n        if(this.dashRef.queryHistory){\n            this.dashRef.queryHistory.reload()  \n        }\n        this.jobProgressRef.enter()\n        return res\n    }\n    async cancelMonitor() {\n        if (this.intervalTimer) {\n            clearInterval(this.intervalTimer)\n            this.intervalTimer = null\n        }\n        this.jobProgressRef.exit()\n    }\n\n    async monitorJob(){        \n        const res = await this.client.get(RemoteAction.JOB_DETAIL,\n            {\n                jobName:this.jobName,\n                queryType:\"robot\"\n            })\n        const jobInfo = res.content\n        // job fail\n        if(jobInfo.status === 3){\n           this.closed = true\n           this.cancelMonitor() \n           this.exitLoading() \n           this.jobProgressRef.exit()\n           this.log(jobInfo.reason)\n        }\n        // job success\n        if(jobInfo.status === 2){\n            this.closed = true\n            this.cancelMonitor()\n            this.exitLoading() \n            this.jobProgressRef.exit()\n            const data = JSON.parse(jobInfo.response)\n            this.displayRef.update(data) \n            this.queryPanel.queryApp.setData(data)\n        }\n    }\n\n    async monitorLog(){\n        const jobName = uuidv4()               \n        const res = await this.client.runScript(`load _mlsql_.\\`log/${this.logInfo['offset'] || -1}\\` where filePath=\"engine_log\" as output;`, jobName, {\"queryType\":\"robot\"})\n        if(res.status !== 200) return\n        const jsonObj = res.content[0]\n        if (jsonObj[\"value\"] && jsonObj['value'].length > 0) {\n            this.log(jsonObj['value'].map(item => {\n                return item.split(\"__MMMMMM__\")[1]\n            }).join(\"\\n\"))\n        }\n        this.logInfo['offset'] = jsonObj[\"offset\"]\n    }\n\n    \n\n    async killJob(){\n        if (!this.jobName) return\n        const res = await EngineService.killJob(this.jobName)\n        try {\n            this.log(res.content[0]['description'])                \n        }catch(e){\n            this.log(res.content)\n        }\n        this.closed = true\n        this.jobName = null\n        this.cancelMonitor() \n        this.exitLoading()\n        \n    }\n}","import * as React from \"react\";\nimport Timer from \"react-compound-timer\"\nimport {Collapse, Table, Button} from 'antd';\nimport EngineService from \"../service/EngineService\";\n\nexport default class JobProgress extends React.Component {\n    constructor(props) {\n        super(props)\n        this.queryPanel = props.parent\n        this.state = {loading: false, jobs: {}, dataSource: [], currentSQL: {}, totalTime: \"0s\", currentJobGroup: \"\"}\n        this.columns = [\n            {\n                title: \"Job Id(Job Group)\",\n                dataIndex: \"title\",\n                key: \"title\"\n\n            },\n            {\n                title: \"Duration\",\n                dataIndex: \"duration\",\n                key: \"duration\"\n            }\n            ,\n            {\n                title: \"Tasks(for all stages)： Succeeded/Total\",\n                dataIndex: \"tasks\",\n                key: \"tasks\",\n                render: (text, record, index) => {\n                    const percent = 2 * record.progress\n                    return <div>\n\n                        <div style={{position: \"relative\", width: \"200px\", height: \"30px\", backgroundColor: \"yellow\"}}>\n                            <div style={{\n                                position: \"relative\",\n                                top: \"0px\",\n                                right: \"0px\",\n                                width: percent + \"px\",\n                                height: \"100%\",\n                                backgroundColor: \"rgba(27,163,232,100)\"\n                            }}>\n                            </div>\n                            <div style={{position: \"absolute\", top: \"4px\", textAlign: \"center\",width:\"100%\"}}>\n                                {text}\n                            </div>\n\n                        </div>\n                    </div>\n                }\n            }\n        ]\n    }\n\n    enter = (params) => {\n        this.setState({loading: true, jobs: {}, dataSource: [], currentSQL: {}, totalTime: \"0s\", currentJobGroup: \"\"})\n        this.intervalTimer = setInterval(async () => {\n            const jobName = this.queryPanel.executor.jobName\n            const currentSQL = await EngineService.currentSQL(this.state.currentJobGroup || jobName)\n            const jobs = await EngineService.jobProgress2(this.state.currentJobGroup || jobName)\n            if (jobs.activeJobs && jobs.activeJobs.length !== 0) {\n                if (!this.state.currentJobGroup) {\n                    this.setState({currentJobGroup: jobs.groupId})\n                }\n                this.makeProgress(jobs, currentSQL)\n            }\n        }, 1000)\n    }\n\n    exit = () => {\n        if (this.intervalTimer) {\n            setTimeout(() => {\n                clearInterval(this.intervalTimer)\n                this.intervalTimer = null\n            }, 3000)\n            this.finalTime = this.state.totalTime\n            this.setState({loading: false})\n        }\n    }\n\n    makeProgress = (temp, currentSQL) => {\n        if (temp.activeJobs) {\n            const jobs = temp.activeJobs\n            const dataSource = jobs.map(job => {\n                return {\n                    jobId: job.jobId,\n                    duration: job.duration,\n                    total: job.numTasks - job.numSkippedTasks,\n                    numKilledTasks: job.numKilledTasks,\n                    skipped: job.numSkippedTasks,\n                    failed: job.numFailedTasks,\n                    completed: job.numCompletedIndices,\n                    started: job.numActiveTasks\n\n                }\n            }).map(item => {\n                    const percent = parseInt((item.completed / item.total * 100) + \"\")\n                    let runningStr = \"\"\n                    if (item.failed === 0 && item.skipped === 0 && item.started > 0) {\n                        runningStr += `(${item.started} running)`\n                    }\n                    if (item.failed > 0) {\n                        runningStr += `(${item.failed} failed)`\n                    }\n                    if (item.skipped > 0) {\n                        runningStr += `(${item.skipped} skipped)`\n                    }\n                    if (item.numKilledTasks > 0) {\n                        runningStr += `(${item.numKilledTasks} killed)`\n                    }\n\n                    let duration = item.duration + \" ms\"\n                    if (item.duration > 1000) {\n                        duration = parseInt((item.duration / 1000) + \"\") + \" s\"\n                    }\n\n                    return {\n                        title: `${item.jobId}(${temp.groupId})`,\n                        duration: duration,\n                        tasks: `${item.completed}/${item.total}${runningStr}`,\n                        progress: percent\n                    }\n                }\n            )\n            let _cur = currentSQL\n            if (currentSQL.isFinish) {\n                _cur = this.state.currentSQL\n                _cur[\"currentJobIndex\"] = _cur[\"totalJobs\"]\n            }\n            if (this.timer) {\n                const totalTime = (this.timer.getTime() / 1000).toFixed(2) + \"s\"\n                this.setState({dataSource, currentSQL: _cur, totalTime})\n                return\n            }\n            this.setState({dataSource, currentSQL: _cur})\n        }\n    }\n\n    showSQL = () => {\n        return this.state.currentSQL.currentJobIndex && <h3>\n            sql:\n            [{this.state.currentSQL.currentJobIndex}/{this.state.currentSQL.totalJobs}: {this.state.currentSQL.script}]\n        </h3>\n    }\n\n    render() {\n        if (!this.state.loading) {\n            if (this.finalTime) {\n                return <div>\n                    <Button type=\"primary\" style={{margin: \"0px 0px 20px 0px\"}}>\n                        Time Cost: {this.finalTime}\n                    </Button>\n                    <div>\n                        <Collapse defaultActiveKey={['1']}>\n                            <Collapse.Panel header={this.showSQL()} key=\"1\">\n                                <Table dataSource={this.state.dataSource} columns={this.columns}/>\n                            </Collapse.Panel>\n                        </Collapse>\n                    </div>\n                </div>\n            } else {\n                return <div></div>\n            }\n        }\n        return <div>\n            <Button type=\"primary\" style={{margin: \"0px 0px 20px 0px\"}}>\n                Time Cost:<Timer ref={(et) => this.timer = et}>\n                <Timer.Minutes formatValue={value => `${value} m. `}/>\n                <Timer.Seconds formatValue={value => `${value} s. `}/>\n            </Timer></Button>\n            <div>\n                <Collapse defaultActiveKey={['1']}>\n                    <Collapse.Panel header={this.showSQL()} key=\"1\">\n                        <Table dataSource={this.state.dataSource} columns={this.columns}/>\n                    </Collapse.Panel>\n                </Collapse>\n            </div>\n        </div>\n    }\n}","import React, { useState, useCallback, useEffect, useReducer } from 'react';\nimport { ActionProxy } from '../../../backend_service/ActionProxy';\nimport RemoteAction from '../../../backend_service/RemoteAction';\nimport { Select } from 'antd';\nimport UIMaker from '../../UIMaker';\n\n\n\nfunction EngineSelectComp(props) {\n    const [error, setError] = useState(undefined)\n    const [data, setData] = useState([])\n    const [loading, setLoading] = useState(false)\n    const [engine, setEngine] = useState(undefined)\n    useEffect(() => {\n        const fetch = async () => {\n            setLoading(true)\n            const proxy = new ActionProxy()\n            const res = await proxy.get(RemoteAction.ENGINE_LIST, {})            \n            setData(res.content.data)\n            const backend = UIMaker.extraOption()[\"backend\"]\n            if(res.content.data.length >0 && !backend){\n                setEngine(res.content.data[0].name)\n            }            \n            setLoading(false)\n        }\n        fetch()\n    }, [])\n\n    useEffect(()=>{      \n    //   const save = async()=>{\n    //     const proxy = new ActionProxy()\n    //     await proxy.post(RemoteAction.USER_EXTRA,{backend:engine})\n    //   }\n    //   save()\n      props.useEngine(engine)\n    },[engine,props])\n\n    const selectEngine = (value) => {\n        setEngine(value)\n    }\n    return (\n        <Select onChange={selectEngine} style={{width: \"120px\"}}>\n            {data.map((item)=>{\n                return <Select.Option value={item.name} key={item.id}>{item.name}</Select.Option>\n            })}\n        </Select>\n    )\n}\nexport { EngineSelectComp }","import * as React from \"react\";\nimport brace from 'brace';\nimport 'brace/ext/searchbox';\nimport AceEditor from 'react-ace';\nimport 'brace/mode/sql';\nimport 'brace/theme/github';\nimport 'brace/ext/language_tools';\nimport CodeIntellegence from '../v1/service/CodeIntellegence'\n\nimport './MLSQLAceEditor.scss'\nimport {Button, Tooltip, Progress, Divider} from 'antd';\nimport {MLSQLAPI} from \"../service/MLSQLAPI\";\nimport * as BackendConfig from \"../service/BackendConfig\";\nimport {assert} from \"../common/tool\"\nimport {ButtonToCommand} from \"./et/ButtonToCommand\";\nimport {Select} from 'antd';\nimport {Resizable} from \"re-resizable\";\nimport EditorOp from \"../v1/comp_op/EditorOp\";\nimport AsyncExecuter from \"../v1/async_execute/AsyncExecuter\";\nimport JobProgress from \"../v1/async_execute/JobProgress\";\nimport ResourceProgress from \"../v1/async_execute/ResourceProgress\";\nimport { EngineSelectComp } from \"../v1/app_console/pages/EngineSelectComp\";\n\nconst {Option} = Select;\n\nconst uuidv4 = require('uuid/v4');\n\n\nclass MLSQLAceEditor extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.language = this.props.language || \"sql\"\n        this.queryApp = this.props.parent\n        this.aceEditorRef = React.createRef()\n        this.commandGroup = React.createRef()        \n        \n        this.taskProgressRef = React.createRef()\n\n        this.cancelQuery = this.cancelQuery.bind(this)\n        this.executeQuery = this.executeQuery.bind(this)\n\n        this.state = {value: \"\", loading: false}\n    }\n\n    text = (value, scriptId) => {\n        this.setState({value: value, scriptId: scriptId}, () => {\n            this.aceEditorRef.current.editor.setValue(value, 1)\n        })\n\n    }\n\n    componentDidMount() {\n        if (this.props.parentCallback) {\n            this.props.parentCallback(this)\n        }\n\n        var staticWordCompleter = {\n            getCompletions: async function(editor, session, pos, prefix, callback) {\n                var wordList = await CodeIntellegence.getSuggestList(editor.getValue(),pos.row,pos.column)\n                callback(null, wordList.map(function(word) {\n                    let desc = \"\"\n                    if(\"desc\" in word.extra){\n                        desc= word.extra[\"desc\"]\n                    }\n                    return {\n                        caption: word.name,\n                        value: word.name,\n                        meta: desc\n                    };\n                }));\n        \n            }\n        }\n        this.getAceEditor().completers = [staticWordCompleter]\n    }\n\n    onChange(newValue) {\n\n    }\n\n     executeSave = async ()=>{\n        const executor = new AsyncExecuter(this)\n        const res = await executor.saveFile({})\n        return res  \n    }\n\n    async executeQuery(){\n        if(this.executor && !this.executor.closed){\n            this.log(`Job ${this.jobName} is still running.`)\n            this.log(`Try to kill this job or wait it to finish`)\n            return\n        }\n        this.executor = new AsyncExecuter(this)\n        const res = await this.executor.run({})\n        if(!this.executor.closed){\n            this.executor.closed = true\n        }\n        return res\n    }\n\n    async cancelQuery() {\n       if(this.executor){\n          this.executor.killJob()\n       } \n    }\n\n    getAllText = () => {\n        return this.getAceEditor().getValue()\n    }\n\n    getSelection = () => {\n        return this.getEditorOp().getSelection()\n    }\n\n    appendToEditor = (str) => {\n        return this.getEditorOp().insertAfterCursor(str)\n    }\n\n    getEditorOp=()=>{\n        return new EditorOp(this.aceEditorRef.current)\n    }\n\n    getConsoleOp=()=>{\n        return new EditorOp(this.queryApp.messageBox.current) \n    }\n\n    getAceEditor = () => {\n        return this.getEditorOp().editor\n    }\n\n    getMessageBoxAceEditor = () => {\n        return this.getConsoleOp().editor\n    }\n\n    appendLog = (msg) => {\n        return this.getConsoleOp().append(msg)\n    }\n\n    getDashBoard = () => {\n        return this.queryApp.dash.current\n    }\n\n    getDisplay = () => {\n        return this.queryApp.display.current\n    }\n\n    enterLoading = (jobName) => {\n        this.commandGroup.current.setState({loading: true});\n        this.resourceProgressRef.current.enter({jobName: jobName})\n        this.jobProgressRef.enter({jobName: jobName})\n        //this.taskProgressRef.current.enter({jobName: jobName})\n    }\n\n    exitLoading = () => {\n        this.commandGroup.current.setState({loading: false});\n        this.jobProgressRef.exit()\n        this.resourceProgressRef.current.exit()\n        //this.taskProgressRef.current.exit()\n    }\n    etOver = (evt) => {\n        const et = this.queryApp.etRef.current\n        const eventName = et.getData(\"eventName\")\n        const popName = et.getData(\"popName\")\n        const processType = et.getData(\"processType\")\n        const pathAlias = et.getData(\"pathAlias\")\n        const tableHidden = et.getData(\"tableHidden\")\n        const pathHidden = et.getData(\"pathHidden\")\n        const outputTableHidden = et.getData(\"outputTableHidden\")\n        const outputTableAlias = et.getData(\"outputTableAlias\")\n        const tableAlias = et.getData(\"tableAlias\")\n\n        if (processType === \"direct\") {\n            this.appendToEditor(new ButtonToCommand().makeSQL(eventName))\n        } else {\n            et.setState({\n                etPop: true,\n                eventName: eventName,\n                popName: popName,\n                processType: processType,\n                pathAlias: pathAlias,\n                tableHidden: tableHidden,\n                pathHidden: pathHidden,\n                outputTableHidden: outputTableHidden,\n                outputTableAlias: outputTableAlias,\n                tableAlias: tableAlias\n            })\n        }\n\n    }\n\n    render() {\n        const self = this\n        return (\n            <div className=\"mlsql-editor-area\">\n\n                <div onDragOver={(evt) => evt.preventDefault()} onDrop={this.etOver}>\n                    <Resizable defaultSize={{height: \"500px\"}} onResize={()=>{this.aceEditorRef.current.editor.resize();}}><AceEditor\n                        ref={this.aceEditorRef}\n                        mode={this.language}\n                        theme=\"github\"\n                        width={\"100%\"}\n                        height={\"100%\"}\n                        onChange={this.onChange}\n                        name=\"mlsql_editor\"\n                        fontSize={16}\n                        showPrintMargin={true}\n                        showGutter={true}\n                        highlightActiveLine={true}\n                        editorProps={{\n                            $blockScrolling: Infinity\n                        }}\n                        setOptions={{\n                            enableBasicAutocompletion: true,\n                            enableLiveAutocompletion: true,\n                            enableSnippets: false,\n                            showLineNumbers: true,\n                            tabSize: 2,\n                            autoScrollEditorIntoView: true\n                        }}\n                    /></Resizable>\n                </div>\n\n                <CommandGroup ref={this.commandGroup} parent={this}/>            \n                <JobProgress ref={(et)=>{this.jobProgressRef=et}} parent={this}></JobProgress>\n                <TaskProgress ref={this.taskProgressRef} parent={this}></TaskProgress>                \n            </div>\n        )\n    }\n\n}\n\nclass CommandGroup extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {loading: false, timeout: \"-1\"}\n        this.parent = props.parent\n    }\n\n    onChange = (value) => {\n        this.setState({timeout: value})\n    }\n\n    render() {\n        return (\n            <div className=\"mslql-editor-buttons\">\n                <Button onClick={this.parent.executeQuery}\n                        loading={this.state.loading}>Run</Button>\n                <Button onClick={this.parent.cancelQuery}>Cancel</Button>      \n                <Button onClick={this.parent.executeSave}>Save</Button>                \n                Job Timeout:<Select\n                onChange={this.onChange}\n                style={{width: \"120px\"}}\n            >\n                <Option value=\"10000\">10s</Option>\n                <Option value=\"30000\">30s</Option>\n                <Option value=\"60000\">60s</Option>\n                <Option value=\"1800000\">30m</Option>\n                <Option value=\"7200000\">2h</Option>\n                <Option value=\"28800000\">8h</Option>\n                <Option value=\"-1\">unlimited</Option>\n            </Select>\n            <Divider type=\"vertical\"/>\n            Engine:<EngineSelectComp useEngine={(engine)=>{\n                this.parent.engineName = engine                \n            }}/>\n            </div>\n        )\n    }\n\n}\n\n\nclass TaskProgress extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {loading: false, percent: 0, successPercent: 0, mark: false}\n        this.parent = props.parent\n    }\n\n    enter = (params) => {\n        const self = this\n        this.setState({mark: true})\n\n        setTimeout(() => {\n            if (self.state.mark) {\n                self.setState({loading: true})\n                self.intervalTimer = setInterval(() => {\n\n                        if (self.taskCompute === \"loading\") {\n                            return\n                        }\n                        self.taskCompute = \"loading\"\n                        const api = new MLSQLAPI(BackendConfig.RUN_SCRIPT)\n                        assert(params.hasOwnProperty(\"jobName\"), \"jobName is required\")\n                        const jobName = params[\"jobName\"]\n                        api.runScript({}, `load _mlsql_.\\`jobs/${jobName}\\` as output;`, (jsonArray) => {\n                            self.taskCompute = \"loaded\"\n                            const _jsonObj = jsonArray[0]\n                            const jsonObj = {\n                                numTasks: 0,\n                                numActiveTasks: 0,\n                                numCompletedTasks: 0\n                            }\n                            _jsonObj[\"activeJobs\"].forEach((item) => {\n                                jsonObj[\"numTasks\"] += item[\"numTasks\"]\n                                jsonObj[\"numActiveTasks\"] += item[\"numActiveTasks\"]\n                                jsonObj[\"numCompletedTasks\"] += item[\"numCompletedTasks\"]\n                            })\n                            self.setState({\n                                percent: jsonObj.numActiveTasks / jsonObj.numTasks * 100,\n                                successPercent: jsonObj.numCompletedTasks / jsonObj.numTasks * 100,\n                                title: `Tasks (for all stages): Succeeded/Total:\\n${jsonObj.numCompletedTasks}/${jsonObj.numTasks}(${jsonObj.numActiveTasks} running)`\n                            })\n                        }, (str) => {\n                            self.taskCompute = \"loaded\"\n                            try {\n                                self.parent.appendLog(str)\n                            } catch (e) {\n                                console.log(e)\n                            }\n                        })\n\n                    }\n                    , 1000)\n            }\n\n        }, 1000)\n\n    }\n\n    exit = () => {\n        this.taskCompute = \"loaded\"\n        this.resourceCompute = \"loaded\"\n        this.setState({loading: false, percent: 0, successPercent: 0, mark: false})\n        if (this.intervalTimer) {\n            clearInterval(this.intervalTimer);\n        }\n    }\n\n    render() {\n        if (!this.state.loading) return <div></div>\n        return (\n            <div>{this.state.title}\n                <Progress percent={this.state.percent} successPercent={this.state.successPercent}/>\n            </div>\n        )\n    }\n\n}\n\nexport default MLSQLAceEditor\n\n","export const assert = (condition, message) => {\n    if (!condition) {\n        message = message || \"Assertion failed\";\n        if (typeof Error !== \"undefined\") {\n            throw new Error(message);\n        }\n        throw message; // Fallback\n    }\n}\n","import React from 'react'\nimport AceEditor from \"react-ace\";\nimport { debounce } from 'lodash'\n\n/**\n * onLoad(editor){\n  // Your editor options comes here\n   editor.on('change', (arg, activeEditor) => {\n      const aceEditor = activeEditor;\n      const newHeight = aceEditor.getSession().getScreenLength() *\n        (aceEditor.renderer.lineHeight + aceEditor.renderer.scrollBar.getWidth());\n       aceEditor.container.style.height = `${newHeight}px`;\n      aceEditor.resize();\n    });\n}\n */\nexport default class CodeBlock extends React.Component {\n\n    constructor(props) {\n        super(props)\n    }\n\n    originalEditor = () => {\n        return this.editor.editor\n    }\n\n    componentDidMount() {\n        this.originalEditor().container.style.lineHeight = 3\n    }\n    changeValue = debounce((value) => {\n        const { onChangeEditorValue } = this.props\n        onChangeEditorValue(value) \n        } , 500);\n\n    render() {\n        return (\n            <AceEditor\n                maxLines={Infinity}\n                width={\"100%\"}\n                ref={et => {\n                    this.editor = et\n                }}\n                value={this.props.initialCode}\n                mode=\"sql\"\n                theme=\"github\"\n                onChange={this.changeValue}\n            />\n        )\n    }\n}","import React from 'react'\n\nimport { Button, Space } from 'antd'\nimport { LoadingOutlined, CaretRightOutlined, MinusCircleOutlined, PlusCircleOutlined } from '@ant-design/icons';\nexport default class CommandGroup extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {isExecute: false}\n        this.executeUnit= props.executeUnit\n        this.notebook = props.executeUnit.notebook\n    }\n\n    evtExecute = () => {\n        this.setState({isExecute: true})\n        this.executeUnit.execute()\n    }\n\n    cancelExecute = () => {\n        this.setState({isExecute: false})\n    }\n\n    render() {\n        const {\n            onAddCell,\n            onRemoveCell,\n            disableDelete\n        } = this.props\n        return <div>\n            <Space>\n                {\n                    this.state.isExecute ? <span onClick={this.cancelExecute}><LoadingOutlined /></span> :\n                        <span onClick={this.evtExecute}><CaretRightOutlined /></span>\n                    \n                }\n                <Button type=\"text\" icon={<PlusCircleOutlined />} onClick={onAddCell}></Button>\n                <Button type=\"text\" disabled={disableDelete} icon={<MinusCircleOutlined />} onClick={onRemoveCell}></Button>\n            </Space>\n        </div>\n    }\n}","import {MLSQLAPI} from \"../../../service/MLSQLAPI\";\nimport * as BackendConfig from \"../../../service/BackendConfig\";\nimport * as HTTP from \"../../../service/HTTPMethod\";\n\nconst uuidv4 = require('uuid/v4');\n\nexport default class Engine {\n\n    /**\n     * @param {Number} timeout\n     */\n    constructor(timeout) {\n        this.timeout = timeout\n    }\n\n    /**\n     * @param {string} sql\n     * @param {(msg)=>{}} show_result\n     */\n    run = (sql, show_result, fail_result) => {\n        const jobName = uuidv4()\n        const api = new MLSQLAPI(BackendConfig.RUN_SCRIPT)\n\n        api.newRunScript({\n            jobName: jobName,\n            timeout: this.timeout\n        }, sql, show_result, fail_result)\n\n\n    }\n\n    /**\n     * @param {string} code\n     * @param {string} scriptId\n     * @param {(msg)=>{}} show_result\n     */\n    saveFile = (code, scriptId, show_result) => {\n        const api = new MLSQLAPI(BackendConfig.CREATE_SCRIPT_FILE)\n        api.request(HTTP.Method.POST, {\n            id: scriptId,\n            content: code\n        }, (ok) => {\n            if (ok.status != 200) {\n                ok.json((wow) => {\n                    show_result(wow[\"msg\"])\n                }, (jsonErr) => {\n                    show_result(jsonErr)\n                })\n            } else {\n                show_result(\"saved\")\n            }\n\n        }, (fail) => {\n            show_result(fail)\n        })\n    }\n}","import * as React from \"react\";\nimport {Table, Modal} from 'antd';\n\nconst ReactMarkdown = require('react-markdown')\n\n\nexport default class DataTable extends React.Component {\n\n    constructor(props) {\n        super(props)\n        const [keys, rows] = this.parseData(props.data || [], props.config || {})\n        this.state = {columns: keys, rows: rows, view: {enabled: false}}\n    }\n\n    setRender = (keyColumn, data, config) => {\n\n        const value = data[0][keyColumn.key]\n\n        if (config && config[\"render\"]) {\n            const render = this.state.config[\"render\"][keyColumn.key]\n            if (render) {\n                keyColumn[\"render\"] = render\n            }\n            return\n        }\n\n        try {\n            if (React.Component.isPrototypeOf(value.type)) {\n                keyColumn[\"render\"] = value => <span>{value}</span>\n                return\n            }\n        }\n        catch (e) {\n        }\n\n        if ((typeof value) === 'object') {\n            keyColumn[\"render\"] = value => <span>{JSON.stringify(value).substring(0, 300)}</span>\n            return\n        }\n        if ((typeof value) === 'array') {\n            keyColumn[\"render\"] = value => <span>{value.join(\",\").substring(0, 300)}</span>\n            return\n        }\n        if ((typeof value) === 'boolean') {\n            keyColumn[\"render\"] = value => <span>{value.toString()}</span>\n            return\n        }\n        if (keyColumn.key == \"fileSystem\" || keyColumn.key == \"message\" || keyColumn.key == \"info\") {\n            keyColumn[\"render\"] = value => <pre>{value.toString()}</pre>\n            return\n        }\n\n\n    }\n\n    parseData = (data, config) => {\n        let keys = []\n        let basket = {}\n        let rows = []\n        const self = this\n        //collect all keys\n        data.forEach(function (item) {\n            for (let key in item) {\n                if (!basket[key]) {\n                    const keyColumn = {\n                        title: key,\n                        dataIndex: key,\n                        key: key,\n                    }\n                    self.setRender(keyColumn, data)\n                    keys.push(keyColumn)\n                    basket[key] = true\n                }\n            }\n        })\n\n        // collect data\n        data.forEach(function (item, index) {\n            let new_item = {}\n            keys.forEach(function (key) {\n                new_item[key.key] = item[key.key]\n            })\n            new_item[\"key\"] = index\n            rows.push(new_item)\n        })\n        return [keys, rows]\n    }\n\n    refresh = (data, config) => {\n        // e.g. [{\"a\":1}]\n        const [keys, rows] = this.parseData(data, config)\n        this.setState({columns: keys, rows: rows, config: config})\n    }\n\n    rowDoubleClick = (row, index, event) => {\n        if (row.name === \"codeExample\" || row.name === \"doc\") {\n            this.setState({\n                view: {\n                    enabled: true,\n                    content: row.value\n                }\n            })\n        }\n    }\n\n    disablePreview = () => {\n        this.setState({\n            view: {\n                enabled: false\n            }\n        })\n    }\n\n    render() {\n        const self = this\n        return (<div>\n                <Table\n                    onRow={(row, index) => {\n                        return {\n                            onDoubleClick: (event) => {\n                                self.rowDoubleClick(row, index, event)\n\n                            }\n                        }\n                    }\n                    }\n\n                    columns={self.state.columns}\n                    dataSource={self.state.rows}/>\n                <Modal\n                    title={\"View\"}\n                    visible={self.state.view.enabled}\n                    onCancel={self.disablePreview}\n                    onOk={self.disablePreview}\n                    cancelText=\"Cancel\"\n                    OkText=\"Ok\"\n                >\n                    <ReactMarkdown source={self.state.view.content || \"\"}/>\n                </Modal>\n            </div>\n        )\n    }\n\n}","import React from 'react'\nimport DataTable from \"./DataTable\";\nimport MLSQLHTML, {MLSQLHTMLPanel} from \"../dash/MLSQLHTML\";\nimport AceEditor from \"react-ace\";\nimport {Collapse} from \"antd\";\n\nexport default class DisplayGroup extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {errorMsg: \"\"}\n    }\n\n\n    refresh = (displayData) => {\n        this.setState({displayData: displayData, errorMsg: \"\"})\n        if (this.displayTableRef) {\n            this.displayTableRef.refresh(this.state.displayData, {})\n        }\n\n        if (this.displayDashRef) {\n            const item = this.state.displayData[0]\n            this.displayDashRef.refresh(item)\n        }\n\n    }\n\n    fail = (msg) => {\n        this.setState({errorMsg: msg})\n        if (this.editor) {\n            this.editor.editor.setValue(msg)\n        }\n    }\n\n    displayDash = () => {\n        if (this.state.displayData && MLSQLHTML.isShouldRender(this.state.displayData)) {\n            const item = this.state.displayData[0]\n            return <MLSQLHTMLPanel data={item} ref={(et) => this.displayDashRef = et}></MLSQLHTMLPanel>\n        } else {\n            return <div></div>\n        }\n\n    }\n\n    displayError = () => {\n        if (this.state.errorMsg) {\n            return <div><AceEditor\n                maxLines={Infinity}\n                width={\"100%\"}\n                ref={et => {\n                    this.editor = et\n                }}\n                value={this.state.errorMsg}\n                mode=\"text\"\n                theme=\"ace/theme/textmate\"\n\n            /></div>\n        } else {\n            return <div></div>\n        }\n    }\n\n    displayTable = () => {\n        if (this.state.displayData) {\n            if (this.state.displayData && MLSQLHTML.isShouldRender(this.state.displayData)) {\n            } else {\n                return <>\n                    <Collapse style={{margin: \"20px 0px\", padding: \"0px 0px\"}} defaultActiveKey={\"1\"}>\n                        <Collapse.Panel header=\"Result\" key=\"1\">\n                            <DataTable data={this.state.displayData}\n                                       ref={(et) => this.displayTableRef = et}></DataTable>\n                        </Collapse.Panel>\n                    </Collapse>\n                </>\n            }\n        } else {\n            return <div></div>\n        }\n\n    }\n\n    render() {\n        return <div>\n            {this.displayError()}\n            {\n                this.displayTable()\n            }{this.displayDash()}</div>\n\n    }\n}","import React from 'react'\nimport CodeBlock from \"./CodeBlock\";\nimport CommandGroup from \"./CommandGroup\";\nimport Engine from \"./service/Engine\";\nimport DisplayGroup from \"./DisplayGroup\";\nimport './notebook.scss'\nexport default class ExecuteUnit extends React.Component {\n    constructor(props) {\n        super(props)\n        this.notebook = props.parent\n    }\n\n    execute = () => {\n        const sql = this.codeBlock.originalEditor().getValue()\n        const engine = new Engine(5 * 60 * 1000)\n        this.props.saveNoteBook()\n        engine.run(sql, (msg) => {\n            this.displayGroup.refresh(msg)\n            this.commandGroup.setState({isExecute: false})\n            // this.notebook.nextExecuteUnit()\n        }, msg => {\n            this.displayGroup.fail(msg)\n            this.commandGroup.setState({isExecute: false})\n        })\n    }\n\n    codeBlockIsEmpty = () => {\n        return this.getCodeStr() === \"\"\n    }\n\n    getCodeStr = () => {\n        return this.codeBlock.originalEditor().getValue()\n    }\n\n    render() {\n\n        const {\n            initialCode,\n            onAddCell,\n            onRemoveCell,\n            disableDelete\n        } = this.props\n        return <div className=\"mb5\">\n            <CodeBlock \n                initialCode={initialCode} \n                ref={et => { this.codeBlock = et }} \n                executeUnit={this}\n                onChangeEditorValue={this.props.onChangeEditorValue}\n            />\n            <CommandGroup \n            ref={et => {this.commandGroup = et}}\n            executeUnit={this}\n            onAddCell={onAddCell}\n            onRemoveCell={onRemoveCell}\n            disableDelete={disableDelete}/>\n            <DisplayGroup ref={et => this.displayGroup = et}/>\n\n        </div>\n    }\n}\n\n","import React from 'react'\nimport ExecuteUnit from \"./ExecuteUnit\";\nimport Engine from \"./service/Engine\";\nimport {cloneDeep} from 'lodash'\n\nconst CODE_SPLITTER = \"set notebooksplitter='notebooksplitter';\"\n\nexport default class NoteBook extends React.Component {\n    constructor(props) {\n        super(props)\n        this.executeUnitRefs = []\n        // this.executeUnits = [this.createNewExecuteUnit(\"\")]\n        this.state = {\n            executeUnits: this.executeUnits,\n            excuteList: [{id: '1', content: ''}]\n        }\n        this.engine = new Engine(5 * 60 * 1000)\n        this.addCell = this.addCell.bind(this)\n        this.removeCell = this.removeCell.bind(this);\n    }\n\n    saveNoteBook = () => {\n        const value = this.state.excuteList.map(v => v.content).join(CODE_SPLITTER)\n        this.engine.saveFile(value, this.scriptId, (msg) => {\n        })\n    }\n\n    addCell(index) {\n        const id = Math.max(...this.state.excuteList.map(v => v.id)) + 1\n        const newList = cloneDeep(this.state.excuteList)\n        newList.splice(index + 1, 0, {content: '', id})\n        this.setState({\n            excuteList: newList\n        })\n    }\n\n    removeCell(cell) {\n        const newList = this.state.excuteList.filter(v => v.id !== cell.id)\n        this.setState({\n            excuteList: newList\n        })\n    }\n\n    componentDidMount() {\n        if (this.props.parentCallback) {\n            this.props.parentCallback(this)\n        }\n    }\n\n    handleChangeEditorValue = (cell, value) => {\n        let newList = cloneDeep(this.state.excuteList)\n        const index = newList.findIndex(v => v.id === cell.id)\n        newList[index].content = value\n        this.setState({\n            excuteList: newList\n        })\n    }\n\n    text = (value, scriptId) => { // 初始化 ed\n        this.scriptId = scriptId\n        this.initialCode = value\n        if (value) {\n            const list = this.initialCode.split(CODE_SPLITTER).map((initialCode, index) => {\n                return {content: initialCode, id: index}\n            })\n            this.setState({excuteList: list})\n        }\n    }\n\n    render() {\n        const {excuteList} = this.state\n        return <div className=\"notebook\">\n            {\n                excuteList.map((v, i) => {\n                    return (<ExecuteUnit\n                        key={v.id}\n                        initialCode={v.content}\n                        id={v.id}\n                        onAddCell={() => this.addCell(i)}\n                        disableDelete={excuteList.length === 1}\n                        onRemoveCell={() => this.removeCell(v)}\n                        saveNoteBook={() => this.saveNoteBook(v)}\n                        onChangeEditorValue={(value) => this.handleChangeEditorValue(v, value)}\n                    />)\n                })\n            }\n        </div>\n    }\n}","import {ActionProxy} from '../backend_service/ActionProxy'\nconst uuidv4 = require('uuid/v4');\n\nexport class LogMonitor {\n    constructor(appendLog) {\n        this.appendLog = appendLog\n        this.log = {}\n    }\n    async cancelQueryLog() {\n        if (this.intervalTimer) {\n            clearInterval(this.intervalTimer)\n            this.intervalTimer = null\n        }\n    }\n\n    async queryLog() {\n        this.cancelQueryLog()\n        this.intervalTimer = setInterval(async () => {\n            const jobName = uuidv4()\n            const api = new ActionProxy()            \n            const res = await api.runScript(`load _mlsql_.\\`log/${this.log['offset'] || -1}\\` where filePath=\"engine_log\" as output;`, jobName, {})\n            const jsonObj = res.content[0]\n            if (jsonObj['value'].length > 0) {\n                this.appendLog(jsonObj['value'].map(item => {\n                    return item.split(\"__MMMMMM__\")[1]\n                }).join(\"\\n\"))\n            }\n            this.log['offset'] = jsonObj[\"offset\"]\n        }, 2000)\n    }\n}","import * as React from \"react\";\nimport brace from 'brace';\nimport 'brace/ext/searchbox';\nimport AceEditor from 'react-ace';\nimport 'brace/mode/sql';\nimport 'brace/theme/github';\nimport 'brace/ext/language_tools';\n\nimport '../MLSQLAceEditor.scss'\nimport { Button, Tooltip, Progress } from 'antd';\nimport { MLSQLAPI } from \"../../service/MLSQLAPI\";\nimport * as BackendConfig from \"../../service/BackendConfig\";\nimport * as HTTP from \"../../service/HTTPMethod\";\nimport { Select } from 'antd';\nimport { Resizable } from \"re-resizable\";\nimport {ActionProxy} from '../../backend_service/ActionProxy'\nimport { LogMonitor } from \"../../common/LogMonitor\";\n\nconst { Option } = Select;\n\nconst uuidv4 = require('uuid/v4');\n\n\nclass PythonACE extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.language = this.props.language || \"sql\"\n        this.queryApp = this.props.parent.queryApp\n\n        this.state = { value: \"\", loading: false }\n        \n        this.executeQuery = this.executeQuery.bind(this)\n        this.cancelQuery = this.cancelQuery.bind(this)\n        \n        this.logMonitor = new LogMonitor(this.appendLog)        \n        \n        this.log = {}\n    }\n\n    text = (value, scriptId) => {\n        this.setState({ value: value, scriptId: scriptId }, () => {\n            this.aceEditorRef.editor.setValue(value, 1)\n        })\n\n    }\n\n    componentDidMount() {\n        if (this.props.parentCallback) {\n            this.props.parentCallback(this)\n        }\n    }\n\n    onChange(newValue) {\n\n    }\n\n    executeSave = () => {\n        const api = new MLSQLAPI(BackendConfig.CREATE_SCRIPT_FILE)\n        const self = this\n\n        const messageBox = this.getMessageBoxAceEditor()\n\n        if (!self.state.scriptId) {\n            messageBox.setValue(\"no file are opened, cannot executeSave\")\n            return\n        }\n\n        api.request(HTTP.Method.POST, {\n            id: self.state.scriptId,\n            content: self.getAceEditor().getValue()\n        }, (ok) => {\n            if (ok.status != 200) {\n                ok.json((wow) => {\n                    self.appendLog(wow[\"msg\"])\n                }, (jsonErr) => {\n                    self.appendLog(jsonErr)\n                })\n            } else {\n                self.appendLog(\"saved\")\n            }\n\n        }, (fail) => {\n            self.appendLog(fail)\n        })\n\n    }\n\n    async executeQuery() {\n        this.commandGroup.setState({loading:true})\n        this.jobName = uuidv4()        \n        const api = new ActionProxy()\n        const self = this\n        self.getMessageBoxAceEditor().setValue(\"\")\n        self.getDisplay().update(JSON.parse(\"[]\"))\n\n        const select = self.getSelection()\n        let finalSQL = self.getAllText()\n\n\n        if (select !== '') {\n            finalSQL = select\n        }\n\n        const scriptId = self.state.scriptId\n        this.logMonitor.queryLog()\n        const res = await api.runScript(finalSQL, this.jobName, {\n            scriptId: scriptId,\n            runMode: \"python\",\n            executeMode: \"python\"\n        })        \n        if (res.status !== 200) {\n            this.logMonitor.cancelQueryLog()            \n            this.appendLog(res.content) \n            this.commandGroup.setState({loading:false})           \n            return\n        }\n        try {            \n            this.appendLog(res.content.join(\"\\n\"))\n        }catch(ex){\n            this.appendLog(res.content[\"msg\"])\n        }\n        this.logMonitor.cancelQueryLog()\n        this.commandGroup.setState({loading:false})\n    }\n\n    async cancelQuery() {\n        if (!this.jobName) return\n        const jobName = uuidv4()\n        const api = new ActionProxy()\n        const res = await api.runScript(\"!kill \" + this.jobName+\";\", jobName, {})                        \n        try {\n            this.appendLog(res.content[0]['description'])                \n        }catch(e){\n            this.appendLog(res.content)\n        }\n        \n        this.jobName = null\n        this.logMonitor.cancelQueryLog()\n    }\n\n    getAllText = () => {\n        return this.getAceEditor().getValue()\n    }\n\n    getSelection = () => {\n        let selectionRange = this.getAceEditor().getSelectionRange()\n        let content = this.getAceEditor().session.getTextRange(selectionRange);\n        return content\n    }\n\n    appendToEditor = (str) => {\n        const editor = this.getAceEditor()\n        const p = editor.getCursorPosition()\n        editor.session.insert(p, str)\n        editor.focus();\n    }\n\n    getAceEditor = () => {\n        return this.aceEditorRef.editor\n    }\n\n    getMessageBoxAceEditor = () => {\n        return this.queryApp.messageBox.current.editor\n    }\n\n    appendLog = (msg) => {\n        const editor = this.getMessageBoxAceEditor()\n        const session = editor.session\n        session.insert({\n            row: session.getLength(),\n            column: 0\n        }, \"\\n\" + msg)\n    }\n\n    getDashBoard = () => {\n        return this.queryApp.dash.current\n    }\n\n    getDisplay = () => {\n        return this.queryApp.display.current\n    }\n\n    render() {\n        const self = this\n        return (\n            <div className=\"mlsql-editor-area\">\n\n                <div onDragOver={(evt) => evt.preventDefault()} onDrop={this.etOver}>\n                    <Resizable defaultSize={{ height: \"500px\" }} onResize={() => { this.aceEditorRef.current.editor.resize(); }}><AceEditor\n                        ref={item => this.aceEditorRef=item}\n                        mode={this.language}\n                        theme=\"github\"\n                        width={\"100%\"}\n                        height={\"100%\"}\n                        onChange={this.onChange}\n                        name=\"mlsql_editor\"\n                        fontSize={16}\n                        showPrintMargin={true}\n                        showGutter={true}\n                        highlightActiveLine={true}\n                        editorProps={{\n                            $blockScrolling: Infinity\n                        }}\n                        setOptions={{\n                            enableBasicAutocompletion: true,\n                            enableLiveAutocompletion: true,\n                            enableSnippets: false,\n                            showLineNumbers: true,\n                            tabSize: 2,\n                            autoScrollEditorIntoView: true\n                        }}\n                    /></Resizable>\n                </div>\n\n                <CommandGroup ref={item => this.commandGroup=item} parent={this} />\n            </div>\n        )\n    }\n\n}\n\nclass CommandGroup extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = { loading: false, timeout: \"-1\" }\n        this.parent = props.parent\n    }\n\n    onChange = (value) => {\n        this.setState({ timeout: value })\n    }\n    \n\n    render() {\n        return (\n            <div className=\"mslql-editor-buttons\">\n                <Button onClick={this.parent.executeQuery}\n                    loading={this.state.loading}>Run</Button>\n                <Button onClick={this.parent.cancelQuery}>Cancel</Button>\n                <Button onClick={this.parent.executeSave}>Save</Button>\n\n            </div>\n        )\n    }\n\n}\n\n\nexport default PythonACE\n\n","import React from 'react'\nimport PythonACE from './PythonACE';\n\n\nexport default class PythonEditor extends React.Component {\n    constructor(props) {\n        super(props)    \n        this.queryApp = this.props.parent\n    }\n\n    addRef = (instance) => {  \n        if(instance){\n            this.editor = instance\n        }      \n    }\n    \n\n    componentDidMount() {\n        if (this.props.parentCallback) {\n            this.props.parentCallback(this)\n        }\n    }    \n\n    text = (value, scriptId) => {        \n        this.editor.text(value, scriptId)     \n    }\n    \n\n    render() {\n        return <div>\n            <PythonACE parent={this} ref={et => this.addRef(et)} language=\"python\"></PythonACE>\n        </div>\n    }\n}","import * as React from \"react\"\nimport {Tabs} from 'antd';\nimport MLSQLAceEditor from \"../MLSQLAceEditor\";\nimport NoteBook from \"../notebook/NoteBook\";\nimport PythonEditor from \"../python/PythonEditor\";\n\nconst TabPane = Tabs.TabPane;\n\nexport class TabEditor extends React.Component {\n    constructor(props) {\n        super(props);\n        this.parent = props.parent\n        this.myRefs = []\n        this.newTabIndex = 0;\n        const panes = [\n            {\n                title: 'MLSQL 1',\n                content: <MLSQLAceEditor parent={this.parent} parentCallback={(ref) => {\n                    this.pushRef({ref: ref, activeKey: \"newTab0\"})\n                }} activeKey='newTab0'/>,\n                key: 'newTab0'\n            },\n        ];\n        this.state = {\n            activeKey: panes[0].key,\n            panes,\n        };\n        this.newTabIndex++\n    }\n\n    pushRef = (ref) => {\n        this.myRefs.push(ref)\n    }\n\n    getCurrentEditor = () => {\n        const activeKey = this.state.activeKey;\n        let currentItem = null\n        this.myRefs.forEach(item => {\n            if (item.activeKey === activeKey) {\n                currentItem = item\n            }\n        })\n        return currentItem\n    }\n\n    onChange = (activeKey) => {\n\n        let currentItem = null\n\n        this.state.panes.forEach(item => {\n            if (item.key === activeKey) {\n                currentItem = item\n            }\n        })\n\n        if (currentItem && !currentItem.title.endsWith(\".mlsql\")) {\n            this.parent.setState({displayEditor: \"normal\"})\n        } else if(currentItem && !currentItem.title.endsWith(\".nb\")) {\n            this.parent.setState({displayEditor: \"notebook\"})\n        }else {\n            this.parent.setState({displayEditor: \"pythoneditor\"})\n        }\n\n        this.setState({activeKey});\n    }\n\n    onEdit = (targetKey, action) => {        \n        this[action](targetKey);\n    }\n\n    addFull = (tabInfo, callback) => {    \n        const { name: tabName, id } = tabInfo\n        const editor = (activeKey) => {\n            if (tabName.endsWith(\".mlsql\")) {\n                return <MLSQLAceEditor parent={this.parent} parentCallback={(ref) => {\n                    this.pushRef({ref: ref, activeKey: activeKey})\n                    if (callback) {\n                        callback({ref: ref, activeKey: activeKey})\n                    }\n                }} activeKey={activeKey}/>\n            } else if(tabName.endsWith(\".nb\")) {\n                return <NoteBook id={id} name={tabName} parent={this.parent} parentCallback={(ref) => {\n                    this.pushRef({ref: ref, activeKey: activeKey})\n                    if (callback) {\n                        callback({ref: ref, activeKey: activeKey})\n                    }\n                }} activeKey={activeKey}/>\n            }else if(tabName.endsWith(\".py\")) {\n                return <PythonEditor parent={this.parent} parentCallback={(ref) => {\n                    this.pushRef({ref: ref, activeKey: activeKey})\n                    if (callback) {\n                        callback({ref: ref, activeKey: activeKey})\n                    }\n                }} activeKey={activeKey}/>\n            }\n        }\n\n        const panes = this.state.panes;\n        const activeKey = `newTab${this.newTabIndex++}`;\n        panes.push({\n            title: tabName || 'MLSQL ' + this.newTabIndex,\n            content: editor(activeKey),\n            key: activeKey,\n            id\n        });\n        this.setState({panes, activeKey});\n    }\n\n    add = () => {\n        this.addFull('MLSQL ' + (this.newTabIndex+1),(params)=>{})\n    }\n\n    getPaneIndexByActiveKey = (targetKey) => {\n        let lastIndex;\n        this.state.panes.forEach((pane, i) => {\n            if (pane.key === targetKey) {\n                lastIndex = i - 1;\n            }\n        });\n        return lastIndex\n    }\n\n    remove = (targetKey) => {\n        let activeKey = this.state.activeKey;\n        let lastIndex = this.getPaneIndexByActiveKey(targetKey)\n\n        const panes = this.state.panes.filter(pane => pane.key !== targetKey);\n        if (panes.length && activeKey === targetKey) {\n            if (lastIndex >= 0) {\n                activeKey = panes[lastIndex].key;\n            } else {\n                activeKey = panes[0].key;\n            }\n        }\n        const editorRefList = this.myRefs.filter((item) => item.activeKey === targetKey)\n        this.myRefs = this.myRefs.filter((item) => item.activeKey !== targetKey)\n        this.parent.closeEditor(editorRefList[0])\n\n        this.setState({panes, activeKey});\n    }\n\n    render() {\n        return (\n            <Tabs\n                onChange={this.onChange}\n                activeKey={this.state.activeKey}\n                type=\"editable-card\"\n                onEdit={this.onEdit}\n            >\n                {this.state.panes.map(pane => <TabPane tab={pane.title} key={pane.key}\n                                                       closable={pane.closable}>{pane.content}</TabPane>)}\n            </Tabs>\n        );\n    }\n}","import * as React from \"react\";\nimport {Input} from \"antd\";\n\nconst InputGroup = Input.Group;\n\nexport class ETLoadParams extends React.Component {\n    constructor(props) {\n        super(props)\n        this.etPopLoad = props.parent\n        this.state = {}\n    }\n\n    render() {\n        return <div>\n            <span>parameters:</span>\n            <InputGroup compact={true}>\n                {this.state.dataForRender}\n            </InputGroup>\n        </div>\n    }\n}","const uuidv4 = require(\"uuid/v4\")\nexport default class Tools {\n    static getTempTableName = () => {\n        return (uuidv4() + \"\").replace(/-/g, \"\")\n    }\n    static getJobName = () => {\n        return uuidv4() + \"\"\n    }\n\n    static escapeQuote = (str)=>{\n        if(!str) return str\n        return str.replace(/[\\\"\"]/g, '\\\\\"')\n    }\n\n    static quote = (str)=>{\n        if(!str) return str\n        return `\"${Tools.escapeQuote(str)}\"`\n    }\n\n    static unQuote = (str) => {\n        if(typeof str !== \"string\") return str\n        if (str.startsWith(\"\\\"\") && str.endsWith(\"\\\"\")) {\n            return str.slice(1, str.length - 1)\n        }\n        if (str.startsWith(\"'\") && str.endsWith(\"'\")) {\n            return str.slice(1, str.length - 1)\n        }\n        if (str.startsWith(\"'''\") && str.endsWith(\"'''\")) {\n            return str.slice(3, str.length - 3)\n        }\n        return str\n    }\n\n    static visitDown = (tree, visit) => {\n        visit(tree)\n        if (tree.children) {\n            tree.children.map(item => {\n                Tools.visitDown(item, visit)\n            })\n        }\n    }\n    static visitUp = (tree, visit) => {\n        if (tree.children) {\n            tree.children.map(item => {\n                Tools.visitUp(item, visit)\n            })\n        }\n        visit(tree)\n    }\n\n    static robotFetchParam = () => {\n        return {\n            queryType: \"robot\",\n            fetchType: \"take\",\n            includeSchema: true,\n            outputSize: 200\n        }\n    }\n\n    static keyPath(key,data,func){\n        let keyQuote = key\n        func(keyQuote)\n        if(typeof data === \"object\"){            \n            Object.keys(data).forEach(k=>{                 \n                Tools.keyPath(`${keyQuote}['${k}']`,data[k],func)\n            })            \n        }       \n    }\n\n    static robotFetchParamWithCollect = () => {\n        return {\n            queryType: \"robot\",\n            includeSchema: true\n        }\n    }\n\n    static getField = (v) => {\n        if (v.startsWith(\"`\") && v.endsWith(\"`\")) return v\n        return `\\`${v}\\``\n    }    \n\n    static distinct = (arrays, field) => {\n        if(!field){\n         return [...new Set(arrays)]\n        }\n        const tempF = {}\n        return arrays.filter(item => {\n            if (item[field] in tempF) {\n                return false\n            } else {\n                tempF[item[field]] = item[field]\n                return true\n            }\n        })\n    }\n    static fastCompareObject = (x, y) => {\n        return JSON.stringify(x) === JSON.stringify(y)\n    }\n    static deepCompareObject = (arg1, arg2) => {\n        var i, l, leftChain, rightChain;\n\n        function compare2Objects(x, y) {\n            var p;\n\n            // remember that NaN === NaN returns false\n            // and isNaN(undefined) returns true\n            if (isNaN(x) && isNaN(y) && typeof x === 'number' && typeof y === 'number') {\n                return true;\n            }\n\n            // Compare primitives and functions.     \n            // Check if both arguments link to the same object.\n            // Especially useful on the step where we compare prototypes\n            if (x === y) {\n                return true;\n            }\n\n            // Works in case when functions are created in constructor.\n            // Comparing dates is a common scenario. Another built-ins?\n            // We can even handle functions passed across iframes\n            if ((typeof x === 'function' && typeof y === 'function') ||\n                (x instanceof Date && y instanceof Date) ||\n                (x instanceof RegExp && y instanceof RegExp) ||\n                (x instanceof String && y instanceof String) ||\n                (x instanceof Number && y instanceof Number)) {\n                return x.toString() === y.toString();\n            }\n\n            // At last checking prototypes as good as we can\n            if (!(x instanceof Object && y instanceof Object)) {\n                return false;\n            }\n\n            if (x.isPrototypeOf(y) || y.isPrototypeOf(x)) {\n                return false;\n            }\n\n            if (x.constructor !== y.constructor) {\n                return false;\n            }\n\n            if (x.prototype !== y.prototype) {\n                return false;\n            }\n\n            // Check for infinitive linking loops\n            if (leftChain.indexOf(x) > -1 || rightChain.indexOf(y) > -1) {\n                return false;\n            }\n\n            // Quick checking of one object being a subset of another.\n            // todo: cache the structure of arguments[0] for performance\n            for (p in y) {\n                if (y.hasOwnProperty(p) !== x.hasOwnProperty(p)) {\n                    return false;\n                }\n                else if (typeof y[p] !== typeof x[p]) {\n                    return false;\n                }\n            }\n\n            for (p in x) {\n                if (y.hasOwnProperty(p) !== x.hasOwnProperty(p)) {\n                    return false;\n                }\n                else if (typeof y[p] !== typeof x[p]) {\n                    return false;\n                }\n\n                switch (typeof (x[p])) {\n                    case 'object':\n                    case 'function':\n\n                        leftChain.push(x);\n                        rightChain.push(y);\n\n                        if (!compare2Objects(x[p], y[p])) {\n                            return false;\n                        }\n\n                        leftChain.pop();\n                        rightChain.pop();\n                        break;\n\n                    default:\n                        if (x[p] !== y[p]) {\n                            return false;\n                        }\n                        break;\n                }\n            }\n\n            return true;\n        }\n\n        return compare2Objects(arg1, arg2)\n    }\n}","import * as React from \"react\";\nimport {MLSQLAPI} from \"../../service/MLSQLAPI\";\nimport {RUN_SCRIPT} from \"../../service/BackendConfig\";\nimport {\n    Select, Form, Icon, Input, Button, Checkbox, Col, Row\n} from 'antd';\nimport {ETLoadParams} from \"./ETLoadParams\";\nimport { ActionProxy } from \"../../backend_service/ActionProxy\";\nimport Tools from \"../../common/Tools\";\n\nconst InputGroup = Input.Group;\nconst Option = Select.Option;\n\n\nexport class ETPopLoad extends React.Component {\n    constructor(props) {\n        super(props)\n        this.etpop = props.parent\n        this.data = {params:{}}\n        this.state = {datasourcesRender: []}\n        this.loadParamsRef = React.createRef()\n    }\n\n\n    componentDidMount = async () => {\n        const self = this\n        const client = new ActionProxy()\n        const res = await client.runScript(\"load _mlsql_.`datasources` as output;\",Tools.getJobName(),Tools.robotFetchParamWithCollect())\n        const data = Tools.distinct(res.content.data,\"name\")\n        const datasourcesRender = []\n        data.forEach(item => {\n            datasourcesRender.push(<Option key={item.name} value={item.name}>{item.name}</Option>)\n        })\n        this.setState({datasourcesRender: datasourcesRender})\n    }\n\n    params = (evt) => {\n        this.data.params[evt.target.getAttribute(\"name\")] = evt.target.value\n    }\n\n\n    sourceType = (value, evt) => {\n        this.data.sourceTypeV = value\n        const self = this\n        const api = new MLSQLAPI(RUN_SCRIPT)\n        api.runScript({}, `load _mlsql_.\\`datasources/params/${value}\\` as output;`, (data) => {\n            const dataForRender = []\n            data.forEach(item => {\n                dataForRender.push(<Row key={`row-${item.param}`}>\n                    <Col>\n                        <Input key={`input-${item.param}`} style={{marginBottom: \"10px\"}} name={item.param} onChange={self.params} type=\"text\"\n                               addonBefore={item.param}\n                               placeholder={item.description}/>\n                    </Col>\n                </Row>)\n            })\n            self.loadParamsRef.current.setState({dataForRender: dataForRender})\n        }, fail => {\n\n        })\n    }\n\n    path = (evt) => {\n        this.data.pathV = evt.target.value\n    }\n\n    tableName = (evt) => {\n        this.data.tableNameV = evt.target.value\n    }\n\n    makeMLSQL = () => {\n        const self = this\n        let paramsArray = []\n        for (let k in this.data.params) {\n            let v = this.data.params[k]\n            if(v){\n                let rv = \"\\\"\" + v + \"\\\"\"\n                if (k === \"code\" || k === \"fitParam.[group].code\") {\n                    rv = \"'''\" + v + \"'''\"\n                }\n                paramsArray.push(k.replace(/\\[group\\]/g, '0') + \"=\" + rv)\n            }            \n        }\n\n        let whereStr = \"\"\n        if (paramsArray.length > 0) {\n            whereStr = \"where\"\n        }\n        return `load ${self.data.sourceTypeV}.\\`${self.data.pathV}\\` ${whereStr} ${paramsArray.join(\"and\\\\n \")} as ${self.data.tableNameV};`\n    }\n\n    render() {\n        return <div>\n            <InputGroup compact={true}>\n                <Row>\n                    <Col>\n                        soureType:<Select\n                        onChange={this.sourceType}\n                        showSearch\n                        style={{width: 200}}\n                        placeholder=\"Choose DataSource type\"\n                        optionFilterProp=\"children\"\n                        filterOption={(input, option) => option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\n                    >{this.state.datasourcesRender}\n                    </Select>\n                    </Col>\n                </Row>\n            </InputGroup>\n            <br/>\n            {this.props.ignorePath? <div></div> : <InputGroup compact={true}>\n                <Row>\n                    <Col>\n                        <Input onChange={this.path} type=\"text\" label=\"Path\" addonBefore=\"Path\"\n                               placeholder=\"File path or tableName\"/>\n                    </Col>\n                </Row>\n            </InputGroup>}\n            <br/>\n             {\n                 this.props.ignoreTableName? <div></div>: <InputGroup compact={true}>\n                 <Row>\n                     <Col>\n                         <Input type=\"text\" onChange={this.tableName} label=\"tableName\" addonBefore=\"tableName\"\n                                placeholder=\"tableName\"/>\n                     </Col>\n                 </Row>\n             </InputGroup>\n             }\n            <br/>\n            <ETLoadParams parent={this} ref={this.loadParamsRef}/>\n        </div>\n    }\n}\n","import * as React from \"react\";\nimport {MLSQLAPI} from \"../../service/MLSQLAPI\";\nimport {RUN_SCRIPT} from \"../../service/BackendConfig\";\nimport {\n    Select, Form, Icon, Input, Button, Checkbox, Col, Row\n} from 'antd';\n\nconst InputGroup = Input.Group;\nconst Option = Select.Option;\nconst {TextArea} = Input;\n\n\nexport class ETPopAlgorithm extends React.Component {\n    constructor(props) {\n        super(props)\n        this.etpop = props.parent\n        this.name = props.name\n        this.data = {params: {}}\n        this.state = {dataForRender: []}\n    }\n\n    renderParam = (item) => {\n        if (item.param === \"keepVersion\" && item.param === \"evaluateTable\") {\n            return null\n        }\n        if (item.param === \"code\" || item.param === \"fitParam.[group].code\") {\n            return <Row><Col>{item.param}:<TextArea style={{marginBottom: \"10px\"}} name={item.param}\n                                                    onChange={this.params}\n                                                    type=\"text\" rows={10}/></Col></Row>\n        }\n        return <Row>\n            <Col>\n                <Input style={{marginBottom: \"10px\"}} name={item.param} onChange={this.params} type=\"text\"\n                       addonBefore={item.param}\n                       placeholder={item.description}/>\n            </Col>\n        </Row>\n    }\n\n    componentDidMount() {\n        const self = this\n        const api = new MLSQLAPI(RUN_SCRIPT)\n\n        api.runScript({}, `load modelParams.\\`${self.name}\\` as output;`, (data) => {\n            const dataForRender = []\n            data.forEach(item => {\n                const temp = this.renderParam(item)\n                if (temp !== null) {\n                    dataForRender.push(temp)\n                    dataForRender.push(<br/>)\n                }\n\n            })\n            self.setState({dataForRender: dataForRender})\n        }, fail => {\n\n        })\n    }\n\n    params = (evt) => {\n        this.data.params[evt.target.getAttribute(\"name\")] = evt.target.value\n    }\n\n    path = (evt) => {\n        this.data.pathV = evt.target.value\n    }\n\n    tableName = (evt) => {\n        this.data.tableNameV = evt.target.value\n    }\n\n    makeMLSQL = () => {\n        const self = this\n        let paramsArray = []\n        for (let k in this.data.params) {\n            let v = this.data.params[k]\n            paramsArray.push(k.replace(/\\[group\\]/g, '0') + \"=\" + \"\\\"\" + v + \"\\\"\")\n        }\n\n        if (paramsArray.length == 0) {\n            paramsArray.push(\"keepVersion=\\\"true\\\"\")\n        }\n\n        return `train ${this.data.tableNameV} as ${this.name}.\\`${this.data.pathV}\\` where \n${paramsArray.join(\" and\\n \")};`\n    }\n\n    render() {\n        return <div>\n            <span>Training data and model path:</span>\n            <InputGroup compact={true}>\n                <Row>\n                    <Col>\n                        <Input type=\"text\" onChange={this.tableName} size={\"large\"} addonBefore=\"tableName\"\n                               placeholder=\"the table of training data\"/>\n                    </Col>\n                </Row>\n            </InputGroup>\n            <br/>\n            <InputGroup compact={true}>\n                <Row>\n                    <Col>\n                        <Input onChange={this.path} type=\"text\" size={\"large\"} addonBefore=\"Model save path\"\n                               placeholder=\"the location you save you model\"/>\n                    </Col>\n                </Row>\n            </InputGroup>\n            <br/>\n            <span>Algorithm parameters:</span>\n            <InputGroup compact={true}>\n                {this.state.dataForRender}\n            </InputGroup>\n\n        </div>\n    }\n}\n","import * as React from \"react\";\nimport {MLSQLAPI} from \"../../service/MLSQLAPI\";\nimport {RUN_SCRIPT} from \"../../service/BackendConfig\";\nimport {\n    Select, Form, Icon, Input, Button, Checkbox, Col, Row\n} from 'antd';\n\nconst InputGroup = Input.Group;\nconst Option = Select.Option;\n\n\nexport class ETPopSave extends React.Component {\n    constructor(props) {\n        super(props)\n        this.etpop = props.parent\n        this.data = {}\n        this.state = {datasourcesRender: []}\n    }\n\n    componentDidMount() {\n        const self = this\n        const api = new MLSQLAPI(RUN_SCRIPT)\n\n        api.runScript({}, \"load _mlsql_.`datasources` as output;\", (data) => {\n            const datasourcesRender = []\n            data.forEach(item => {\n                datasourcesRender.push(<Option key={item.name} value={item.name}>{item.name}</Option>)\n            })\n            self.setState({datasourcesRender: datasourcesRender})\n        }, fail => {\n\n        })\n    }\n\n    sourceType = (value, evt) => {\n        this.data.sourceTypeV = value\n    }\n\n    saveMode = (value, evt) => {\n        this.data.saveModeV = value\n    }\n\n    path = (evt) => {\n        this.data.pathV = evt.target.value\n    }\n\n    tableName = (evt) => {\n        this.data.tableNameV = evt.target.value\n    }\n\n    partitionBy = (evt) => {\n        this.data.partitionByV = evt.target.value\n    }\n\n    fileNum = (evt) => {\n        this.data.fileNumV = evt.target.value\n    }\n\n    makeMLSQL = () => {\n        const self = this\n        let partitionByStr = \"\"\n        if (this.data.partitionByV) {\n            partitionByStr = \"partitionBy \" + this.data.partitionByV\n        }\n\n        let fileNumStr = `key=\"value\"`\n        if (this.data.fileNumV) {\n            fileNumStr = `fileNum=\"${this.data.fileNumV }\"`\n        }\n\n        return `save ${self.data.saveModeV} ${self.data.tableNameV} as ${self.data.sourceTypeV}.\\`${self.data.pathV}\\` \\n where ${fileNumStr} ${partitionByStr};`\n    }\n\n    render() {\n        return <div>\n            <InputGroup compact={true}>\n                <Row>\n                    <Col>\n                        soureType:<Select\n                        onChange={this.sourceType}\n                        showSearch\n                        style={{width: 200}}\n                        placeholder=\"Choose DataSource type\"\n                        optionFilterProp=\"children\"\n                        filterOption={(input, option) => option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\n                    >{this.state.datasourcesRender}\n                    </Select>\n                    </Col>\n                </Row>\n            </InputGroup>\n            <br/>\n            <InputGroup compact={true}>\n                <Row>\n                    <Col>\n                        SaveMode:<Select\n                        onChange={this.saveMode}\n                        showSearch\n                        style={{width: 200}}\n                        placeholder=\"Choose save mode type\"\n                        optionFilterProp=\"children\"\n                        filterOption={(input, option) => option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\n                    >\n                        <Option key={\"overwrite\"} value={\"overwrite\"}>overwrite</Option>\n                        <Option key={\"append\"} value={\"append\"}>append</Option>\n                        <Option key={\"errorIfExists\"} value={\"errorIfExists\"}>errorIfExists</Option>\n                        <Option key={\"ignore\"} value={\"ignore\"}>ignore</Option>\n                    </Select>\n                    </Col>\n                </Row>\n            </InputGroup>\n            <br/>\n            <InputGroup compact={true}>\n                <Row>\n                    <Col>\n                        <Input type=\"text\" onChange={this.tableName} label=\"tableName\" addonBefore=\"tableName\"\n                               placeholder=\"the tableName will be saved\"/>\n                    </Col>\n                </Row>\n            </InputGroup>\n            <br/>\n\n            <InputGroup compact={true}>\n                <Row>\n                    <Col>\n                        <Input onChange={this.path} type=\"text\" addonBefore=\"Target Path\"\n                               placeholder=\"File path or tableName\"/>\n                    </Col>\n                </Row>\n            </InputGroup>\n            <br/>\n            <InputGroup compact={true}>\n                <Row>\n                    <Col>\n                        <Input type=\"text\" onChange={this.partitionBy} addonBefore=\"partitionBy\"\n                               placeholder=\"partitionBy\"/>\n                    </Col>\n                </Row>\n            </InputGroup>\n            <br/>\n            <InputGroup compact={true}>\n                <Row>\n                    <Col>\n                        <Input type=\"text\" onChange={this.fileNum} addonBefore=\"fileNum\"\n                               placeholder=\"fileNum\"/>\n                    </Col>\n                </Row>\n            </InputGroup>\n            <br/>\n\n\n        </div>\n    }\n}\n","import * as React from \"react\";\nimport {MLSQLAPI} from \"../../service/MLSQLAPI\";\nimport {RUN_SCRIPT} from \"../../service/BackendConfig\";\nimport {\n    Select, Form, Icon, Input, Button, Checkbox, Col, Row\n} from 'antd';\n\nconst InputGroup = Input.Group;\nconst Option = Select.Option;\nconst {TextArea} = Input;\n\n\nexport default class ETBaseTool extends React.Component {\n    constructor(props) {\n        super(props)\n        this.etpop = props.parent\n        this.name = props.name\n        this.data = {params: {}}\n        this.state = {\n            dataForRender: [],\n            tableHidden: props.tableHidden,\n            pathAlias: props.pathAlias,\n            pathHidden: props.pathHidden,\n            outputTableHidden: props.outputTableHidden,\n            outputTableAlias: props.outputTableAlias,\n            tableAlias: props.tableAlias\n        }\n    }\n\n    renderParam = (item) => {\n        if (item.param === \"keepVersion\" || item.param === \"evaluateTable\") {\n            return null\n        }\n        if (item.param === \"code\" || item.param === \"fitParam.[group].code\") {\n            return <Row><Col>{item.param}:<TextArea style={{marginBottom: \"10px\"}} name={item.param}\n                                                    onChange={this.params}\n                                                    type=\"text\" rows={10}/></Col></Row>\n        }\n        return <Row key={item.param}>\n            <Col>\n                <Input style={{marginBottom: \"10px\"}} name={item.param} onChange={this.params} type=\"text\"\n                       addonBefore={item.param}\n                       placeholder={item.description}/>\n            </Col>\n        </Row>\n    }\n\n    componentDidMount() {\n        const self = this\n        const api = new MLSQLAPI(RUN_SCRIPT)\n\n        api.runScript({}, `load modelParams.\\`${self.name}\\` as output;`, (data) => {\n            const dataForRender = []\n            data.forEach(item => {\n                const temp = this.renderParam(item)\n                if (temp !== null) {\n                    dataForRender.push(temp)\n                    dataForRender.push(<br/>)\n                }\n\n            })\n            self.setState({dataForRender: dataForRender})\n        }, fail => {\n\n        })\n    }\n\n    params = (evt) => {\n        this.data.params[evt.target.getAttribute(\"name\")] = evt.target.value\n    }\n\n    path = (evt) => {\n        this.data.pathV = evt.target.value\n    }\n\n    tableName = (evt) => {\n        this.data.tableNameV = evt.target.value\n    }\n\n    outputTableName = (evt) => {\n        this.data.outputTableNameV = evt.target.value\n    }\n\n    _makeMLSQL() {\n        const self = this\n        let paramsArray = []\n        for (let k in this.data.params) {\n            let v = this.data.params[k]\n            let rv = \"\\\"\" + v + \"\\\"\"\n            if (k === \"code\" || k === \"fitParam.[group].code\") {\n                rv = \"'''\" + v + \"'''\"\n            }\n            paramsArray.push(k.replace(/\\[group\\]/g, '0') + \"=\" + rv)\n        }\n\n        let whereStr = \"\"\n        if (paramsArray.length > 0) {\n            whereStr = \"where\"\n        }\n\n        let asStr = \"\"\n\n        if (this.data.outputTableNameV) {\n            asStr = `as ${this.data.outputTableNameV}`\n        }\n\n        //run command as DownloadExt.`` where from=\"test2\" and to=\"/tmp/jack\";\n        return `run ${this.data.tableNameV || \"command\"} as ${this.name}.\\`${this.data.pathV || \"\"}\\` ${whereStr} ${paramsArray.join(\"and\\n \")} ${asStr};`\n    }\n\n    showTableName = () => {\n        if (this.state.tableHidden !== \"true\") {\n            return <InputGroup compact={true}>\n                <Row>\n                    <Col>\n                        <Input type=\"text\" onChange={this.tableName} size={\"large\"}\n                               addonBefore={this.state.tableAlias ? this.state.tableAlias : \"Input table\"}\n                               placeholder=\"\"/>\n                    </Col>\n                </Row>\n            </InputGroup>\n        }\n        return null\n    }\n\n    showOutputTableName = () => {\n        if (this.state.outputTableHidden !== \"true\") {\n            return <InputGroup compact={true}>\n                <Row>\n                    <Col>\n                        <Input type=\"text\" onChange={this.outputTableName} size={\"large\"}\n                               addonBefore={this.state.outputTableAlias ? this.state.outputTableAlias : \"Output table\"}\n                               placeholder=\"\"/>\n                    </Col>\n                </Row>\n            </InputGroup>\n        }\n        return null\n    }\n\n    pathNameForRender = () => {\n        if (this.state.pathAlias) {\n            return this.state.pathAlias\n        } else {\n            return \"Save path\"\n        }\n    }\n    showPathName = () => {\n        if (this.state.pathHidden !== \"true\") {\n            return <InputGroup compact={true}>\n                <Row>\n                    <Col>\n                        <Input onChange={this.path} type=\"text\" size={\"large\"} addonBefore={this.pathNameForRender()}\n                               placeholder=\"\"/>\n                    </Col>\n                </Row>\n            </InputGroup>\n        }\n        return \"\"\n    }\n\n    _render() {\n        return <div>\n            {this.showTableName()}\n            <br/>\n            {this.showOutputTableName()}\n            <br/>\n            {this.showPathName()}\n            <br/>\n            {this.state.dataForRender.length == 0 ? \"\" : <span>Parameters:</span>}\n            <InputGroup compact={true}>\n                {this.state.dataForRender}\n            </InputGroup>\n\n        </div>\n    }\n}\n","import * as React from \"react\";\nimport ETBaseTool from \"./ETBaseTool\";\n\n\nexport class ETPopTool extends ETBaseTool {\n    constructor(props) {\n        super(props)\n    }\n\n\n    makeMLSQL = () => {\n        return super._makeMLSQL()\n    }\n\n\n    render() {\n        return super._render()\n    }\n}\n","import * as React from \"react\";\nimport {MLSQLAPI} from \"../../service/MLSQLAPI\";\nimport {RUN_SCRIPT} from \"../../service/BackendConfig\";\nimport {\n    Select, Form, Icon, Input, Button, Checkbox, Col, Row\n} from 'antd';\nimport {ETPopTool} from \"./ETPopTool\";\n\nconst InputGroup = Input.Group;\nconst Option = Select.Option;\n\n\nexport class ETPopDownload extends ETPopTool {\n\n    makeMLSQL = () => {\n        const self = this\n        let paramsArray = []\n        for (let k in this.data.params) {\n            let v = this.data.params[k]\n            paramsArray.push(k.replace(/\\[group\\]/g, '0') + \"=\" + \"\\\"\" + v + \"\\\"\")\n        }\n\n        if (paramsArray.length == 0) {\n            paramsArray.push(\"keepVersion=\\\"true\\\"\")\n        }\n        //run command as DownloadExt.`` where from=\"test2\" and to=\"/tmp/jack\";\n        return `run command as ${this.name}.\\`\\` where \n${paramsArray.join(\" and\\n \")};`\n    }\n\n    render() {\n        return <div>\n\n            <InputGroup compact={true}>\n                {this.state.dataForRender}\n            </InputGroup>\n\n        </div>\n    }\n}\n","import * as React from \"react\";\nimport brace from 'brace';\nimport 'brace/ext/searchbox';\nimport AceEditor from 'react-ace';\nimport 'brace/mode/scala';\nimport 'brace/mode/python';\nimport 'brace/mode/java';\nimport 'brace/theme/github';\nimport 'brace/ext/language_tools'\nimport {\n    Select, Form, Icon, Input, Button, Checkbox, Col, Row\n} from 'antd';\nimport Switch from \"../../../node_modules/antd/lib/switch\";\n\nconst Option = Select.Option;\nconst {TextArea} = Input;\n\nexport class ETPopScriptUDF extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.etpop = props.parent\n        this.name = props.name\n        this.data = {params: {}}\n        this.state = {dataForRender: []}\n        this.codeRef = React.createRef()\n        this.codeCheckRef = React.createRef()\n    }\n\n    udfName = (evt) => {\n        this.data.udfNameV = evt.target.value\n    }\n\n    dataType = (evt) => {\n        this.data.dataTypeV = evt.target.value\n    }\n\n    udfType = (value) => {\n        this.udfTypeV = value\n    }\n\n    code = (newValue) => {\n        this.codeV = newValue\n    }\n\n\n    componentDidMount() {\n\n    }\n\n    langSelect = (value) => {\n        this.lang = value\n        this.codeCheckRef.current.checked = false\n        this.setState({dataType: false})\n        if (this.lang === \"python\") {\n            this.setState({dataType: true})\n        }\n        this.setState({codeLang: value})\n\n\n    }\n\n    setCodeExample = (checked) => {\n        if (checked) {\n            this.codeRef.current.editor.setValue(this.codeExample())\n        } else {\n            this.codeRef.current.editor.setValue(\"\")\n        }\n\n    }\n\n    codeExample = () => {\n        const lang = this.state.codeLang || \"scala\"\n        if (lang === \"scala\") {\n            return `def apply(a:Double,b:Double)={\n   a + b\n}`\n        }\n\n        if (lang === \"python\") {\n            return `def apply(self,m):\n    return m`\n        }\n\n        if (lang === \"java\") {\n            return `import java.util.HashMap;\nimport java.util.Map;\npublic class UDF {\n  public Map<String, Integer[]> apply(String s) {\n    Map<String, Integer[]> m = new HashMap<>();\n    Integer[] arr = {1};\n    m.put(s, arr);\n    return m;\n  }\n}`\n        }\n        return null\n    }\n\n    showDataType = () => {\n        if (this.state.dataType) {\n            return <Row>\n                <Col>\n                    dataType:<TextArea style={{marginBottom: \"10px\"}} name={\"dataType\"} rows={10}\n                                       onChange={this.dataType}\n                                       type=\"text\"\n                                       addonBefore={\"dataType\"}\n                                       placeholder={`This is not required when lang is scala\nAs we know python is not strongly typed language, so\nwe should manually spcify the return type.\nmap(string,string) means a map with key is string type,value also is string type.\narray(string) means a array with string type element.\nnested is support e.g. array(array(map(string,array(string))))\n\n`}/>\n                </Col>\n            </Row>\n\n        }\n        return null\n    }\n\n    showCode = () => {\n        return <div><Row>\n            <Col>\n                code:<AceEditor ref={this.codeRef}\n                                mode={this.state.codeLang || \"scala\"}\n                                theme=\"github\"\n                                width={\"400px\"}\n                                height={\"300px\"}\n                                name=\"code\"\n                                fontSize={16}\n                                showPrintMargin={true}\n                                showGutter={true}\n                                highlightActiveLine={true}\n                                onChange={this.code}\n                                editorProps={{\n                                    $blockScrolling: Infinity\n                                }}\n                                setOptions={{\n                                    enableBasicAutocompletion: true,\n                                    enableLiveAutocompletion: true,\n                                    enableSnippets: false,\n                                    showLineNumbers: true,\n                                    tabSize: 2,\n                                }}\n            />\n            </Col>\n        </Row>\n            <Row>\n                <Col>\n                    <Col span={8}>\n                        Show CodeExample:<Switch ref={this.codeCheckRef} onChange={this.setCodeExample}/>\n                    </Col>\n                </Col>\n            </Row></div>\n    }\n\n    makeMLSQL = () => {\n        const self = this\n        let paramsArray = []\n        paramsArray.push(`lang=\"${this.lang}\"`)\n        paramsArray.push(`code='''${this.codeV}'''`)\n        paramsArray.push(`udfType=\"${this.udfTypeV}\"`)\n        if (this.dataTypeV) {\n            paramsArray.push(`dataType='''${this.dataTypeV}'''`)\n        }\n        return `register ScriptUDF.\\`\\` as ${this.data.udfNameV} where \n${paramsArray.join(\"\\nand \")};`\n    }\n\n    render() {\n        return <div>\n\n            <Row>\n                <Col>\n                    <Input onChange={this.udfName} type=\"text\" size={\"large\"} addonBefore=\"UDF Name\"\n                           placeholder=\"the name of udf\"/>\n                </Col>\n            </Row>\n            <br/>\n\n            <Row>\n                <Col span={4}>\n                    <span>udfType:</span>\n                </Col>\n                <Col span={20}>\n                    <Select\n                        showSearch\n                        onChange={this.udfType}\n                        style={{width: 200}}\n                        placeholder=\"Select udf type\"\n                        optionFilterProp=\"children\"\n                        filterOption={(input, option) => option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\n                    >\n                        <Option value=\"udf\">udf</Option>\n                        <Option value=\"udaf\">udaf</Option>\n                    </Select>\n                </Col>\n            </Row>\n            <br/>\n            <Row>\n                <Col span={4}>\n                    <span>Lang:</span>\n                </Col>\n                <Col span={20}>\n                    <Select\n                        showSearch\n                        style={{width: 200}}\n                        placeholder=\"Select language type\"\n                        optionFilterProp=\"children\"\n                        onChange={this.langSelect}\n                        filterOption={(input, option) => option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\n                    >\n                        <Option value=\"java\">java</Option>\n                        <Option value=\"scala\">scala</Option>\n                        <Option value=\"python\">python</Option>\n                    </Select>\n                </Col>\n            </Row>\n            <br/>\n            {this.showDataType()}\n            <br/>\n            {this.showCode()}\n            <br/>\n            <Row>\n                <Col>\n                    <Input style={{marginBottom: \"10px\"}} name={\"methodName\"} onChange={this.params} type=\"text\"\n                           addonBefore={\"methodName\"}\n                           placeholder={\"methodName\"}/>\n                </Col>\n            </Row>\n\n\n        </div>\n    }\n}\n","import * as React from \"react\";\nimport {MLSQLAPI} from \"../../service/MLSQLAPI\";\nimport {RUN_SCRIPT} from \"../../service/BackendConfig\";\nimport {\n    Select, Form, Icon, Input, Button, Checkbox, Col, Row\n} from 'antd';\n\nconst InputGroup = Input.Group;\nconst Option = Select.Option;\n\n\nexport class ETExample extends React.Component {\n    constructor(props) {\n        super(props)\n        this.etpop = props.parent\n        this.name = props.name\n        this.data = {params: {}}\n        this.state = {\n            dataForRender: [],\n            tableHidden: props.tableHidden,\n            pathAlias: props.pathAlias,\n            pathHidden: props.pathHidden\n        }\n    }\n\n    componentDidMount() {\n        const self = this\n        const api = new MLSQLAPI(RUN_SCRIPT)\n\n        api.runScript({}, `load model.\\`list\\` as output;`, (data) => {\n            const dataForRender = []\n            data.forEach(item => {\n                dataForRender.push(<Option key={item.name} value={item.name}>{item.name}</Option>)\n            })\n            self.setState({dataForRender: dataForRender})\n        }, fail => {\n\n        })\n    }\n\n    etName = (value) => {\n        this.etName = value\n    }\n    makeMLSQL = () => {\n        return `load modelExample.\\`${this.etName}\\` as output;`\n    }\n\n    render() {\n        return <div>\n            <Row>\n                <Col>\n                    ET:<Select\n                    onChange={this.etName}\n                    showSearch\n                    style={{width: 200}}\n                    placeholder=\"Choose DataSource type\"\n                    optionFilterProp=\"children\"\n                    filterOption={(input, option) => option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\n                >{this.state.dataForRender}\n                </Select>\n                </Col>\n            </Row>\n        </div>\n    }\n}\n","import * as React from \"react\";\nimport {MLSQLAPI} from \"../../service/MLSQLAPI\";\nimport {RUN_SCRIPT} from \"../../service/BackendConfig\";\nimport {\n    Select, Form, Icon, Input, Button, Checkbox, Col, Row\n} from 'antd';\nimport {ETLoadParams} from \"./ETLoadParams\";\nimport {ETPopTool} from \"./ETPopTool\";\n\nconst InputGroup = Input.Group;\nconst Option = Select.Option;\n\n\nexport class ETRegister extends ETPopTool {\n\n    componentDidMount() {\n        const self = this\n        const api = new MLSQLAPI(RUN_SCRIPT)\n\n        api.runScript({}, `load model.\\`list\\` as output;`, (data) => {\n            const dataForRender = []\n            data.forEach(item => {\n                dataForRender.push(<Option key={item.name} value={item.name}>{item.name}</Option>)\n            })\n            self.setState({dataForRender: dataForRender})\n        }, fail => {\n\n        })\n    }\n\n    makeMLSQL = () => {\n        const self = this\n        return `register ${self.data.sourceTypeV}.\\`${self.data.pathV}\\` as ${self.data.outputTableNameV};`\n    }\n\n    etName = (value) => {\n        this.data.sourceTypeV = value\n    }\n\n    render() {\n        return <div>\n            {this.showTableName()}\n            <br/>\n            {this.showOutputTableName()}\n            <br/>\n            {this.showPathName()}\n            <br/>\n            <Row>\n                <Col>\n                    ET:<Select\n                    onChange={this.etName}\n                    showSearch\n                    style={{width: 200}}\n                    placeholder=\"Choose DataSource type\"\n                    optionFilterProp=\"children\"\n                    filterOption={(input, option) => option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\n                >{this.state.dataForRender}\n                </Select>\n                </Col>\n            </Row>\n\n        </div>\n    }\n\n\n}\n","import * as React from \"react\";\nimport {Col, Input, Row, Select} from \"antd\";\nimport ETBaseTool from \"./ETBaseTool\";\n\nconst InputGroup = Input.Group;\n\nexport default class ETStringIndex extends ETBaseTool {\n\n    constructor(props) {\n        super(props)\n    }\n\n    makeMLSQL = () => {\n\n        let asStr = \"\"\n\n        if (this.data.outputTableNameV) {\n            asStr = `as ${this.data.outputTableNameV}`\n        }\n\n        const sqlTrain = super._makeMLSQL().replace(asStr, \"\")\n\n        const sqlBatchPredict = `predict ${this.data.tableNameV} as ${this.name}.\\`${this.data.pathV || \"\"}\\` ${asStr};`\n\n        return (`${sqlTrain}\n        ${sqlBatchPredict}\n        register ${this.name}.\\`${this.data.pathV || \"\"}\\` as ${this.data.functionNameV}; \n        `).stripMargin()\n    }\n\n    functionName = (evt) => {\n        this.data.functionNameV = evt.target.value\n    }\n\n    render() {\n        return <div>\n            {this.showTableName()}\n            <br/>\n\n            {this.showOutputTableName()}\n            <br/>\n            {this.showPathName()}\n            <br/>\n            <InputGroup compact={true}>\n                <Row>\n                    <Col>\n                        <Input onChange={this.functionName} type=\"text\" size={\"large\"} addonBefore={\"functionName\"}\n                               placeholder=\"A function you can use to convert String to number or number to String\"/>\n                    </Col>\n                </Row>\n            </InputGroup>\n            <br/>\n            {this.state.dataForRender.length == 0 ? \"\" : <span>Parameters:</span>}\n            <InputGroup compact={true}>\n                {this.state.dataForRender}\n            </InputGroup>\n\n        </div>\n    }\n}","import ETBaseTool from \"./ETBaseTool\";\nimport * as React from \"react\";\n\nexport class ETDownloadFile extends ETBaseTool {\n\n    constructor(props) {\n        super(props)\n    }\n\n    makeMLSQL = () => {\n        const url = `/api_v1/public/file/download?fileName=${encodeURIComponent(this.data.pathV)}`\n        const link = document.createElement('a');\n        link.href = url;\n        link.target = \"_blank\"\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n        return \"\"\n    }\n\n    componentDidMount() {\n    }\n\n    render() {\n        return super._render()\n    }\n}","import * as React from \"react\";\nimport {MLSQLAPI} from \"../../service/MLSQLAPI\";\nimport {RUN_SCRIPT} from \"../../service/BackendConfig\";\nimport {\n    Select, Form, Icon, Input, Button, Checkbox, Col, Row\n} from 'antd';\n\nconst InputGroup = Input.Group;\nconst Option = Select.Option;\n\n\nexport class ETStreamProgress extends React.Component {\n    constructor(props) {\n        super(props)\n        this.etpop = props.parent\n        this.name = props.name\n        this.data = {params: {}}\n        this.state = {\n            dataForRender: [],\n            tableHidden: props.tableHidden,\n            pathAlias: props.pathAlias,\n            pathHidden: props.pathHidden\n        }\n    }\n\n    componentDidMount() {\n        const self = this\n        const api = new MLSQLAPI(RUN_SCRIPT)\n\n        api.runScript({}, `load _mlsql_.\\`jobs\\` as output;`, (data) => {\n\n            const dataForRender = data.filter(item => {\n                return item.jobType === \"stream\"\n            }).map(item => {\n                return <Option key={item.jobName} value={item.jobName}>{item.jobName}</Option>\n            })\n\n            self.setState({dataForRender: dataForRender})\n        }, fail => {\n\n        })\n    }\n\n    etName = (value) => {\n        this.etName = value\n    }\n    makeMLSQL = () => {\n        return `load _mlsql_.\\`progress/${this.etName}\\` as output;`\n    }\n\n    render() {\n        return <div>\n            <Row>\n                <Col>\n                    Stream Jobs:<Select\n                    onChange={this.etName}\n                    showSearch\n                    style={{width: 200}}\n                    placeholder=\"Choose Stream Name\"\n                    optionFilterProp=\"children\"\n                    filterOption={(input, option) => option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\n                >{this.state.dataForRender}\n                </Select>\n                </Col>\n            </Row>\n        </div>\n    }\n}\n","import * as React from \"react\";\nimport Modal from \"../../../node_modules/antd/lib/modal/Modal\";\nimport {ETPopLoad} from \"./ETPopLoad\";\nimport {ETPopAlgorithm} from \"./ETPopAlgorithm\";\nimport {ETPopSave} from \"./ETPopSave\";\nimport {ETPopTool} from \"./ETPopTool\";\nimport {ETPopDownload} from \"./ETPopDownload\";\nimport {ETPopScriptUDF} from \"./ETPopScriptUDF\";\nimport {ETExample} from \"./ETExample\";\nimport {ETRegister} from \"./ETRegister\";\nimport ETStringIndex from \"./ETStringIndex\";\nimport {ETDownloadFile} from \"./ETDownloadFile\";\nimport {ETStreamProgress} from \"./ETStreamProgress\";\n\nexport class ETPop extends React.Component {\n    constructor(props) {\n        super(props)\n        this.et = props.parent\n        this.popChild = React.createRef()\n        this.state = {etModalVisible: true, title: props.title}\n        this.data = {}\n    }\n\n    disableEtModalVisible = () => {\n        this.et.setState({etPop: false, etModalVisible: false})\n    }\n    enableEtModalVisible = () => {\n        const sql = this.popChild.current.makeMLSQL()\n        this.et.makeMLSQL(sql)\n        this.et.setState({etPop: false, etModalVisible: false})\n    }\n\n    renderContent = () => {\n        if (this.et.state.eventName === \"load\") {\n            return <ETPopLoad parent={this} ref={this.popChild}/>\n        }\n        if (this.et.state.eventName === \"save\") {\n            return <ETPopSave name={this.et.state.eventName} ref={this.popChild}/>\n        }\n\n        if (this.et.state.eventName === \"DownloadExt\") {\n            return <ETPopDownload name={this.et.state.eventName} ref={this.popChild}/>\n        }\n\n        if (this.et.state.eventName === \"StringIndex\") {\n            return <ETStringIndex name={this.et.state.eventName} ref={this.popChild}/>\n        }\n\n        if (this.et.state.eventName === \"DownloadFile\") {\n            return <ETDownloadFile name={this.et.state.eventName} ref={this.popChild} {...this.et.state}/>\n        }\n\n        if (this.et.state.eventName === \"ETExample\") {\n            return <ETExample name={this.et.state.eventName} ref={this.popChild}/>\n        }\n\n        if (this.et.state.eventName === \"ETStreamProgress\") {\n            return <ETStreamProgress name={this.et.state.eventName} ref={this.popChild}/>\n        }\n\n        if (this.et.state.eventName === \"ScriptUDF\") {\n            return <ETPopScriptUDF name={this.et.state.eventName} ref={this.popChild}/>\n        }\n\n        if (this.et.state.eventName === \"register\") {\n            return <ETRegister name={this.et.state.eventName} ref={this.popChild} {...this.et.state}/>\n        }\n\n        if (this.et.state.processType === \"tool\") {\n            return <ETPopTool name={this.et.state.eventName} ref={this.popChild} {...this.et.state}/>\n        }\n\n        return <ETPopAlgorithm name={this.et.state.eventName} ref={this.popChild}/>\n    }\n\n\n    render() {\n        return (\n            <div>\n                <Modal\n                    title={this.state.title}\n                    visible={this.state.etModalVisible}\n                    onCancel={this.disableEtModalVisible}\n                    onOk={this.enableEtModalVisible}\n                    okText=\"Ok\"\n                    cancelText=\"Cancel\"\n                >\n                    {this.renderContent()}\n                </Modal>\n            </div>\n        )\n    }\n}","import * as React from \"react\";\nimport {Collapse, Tabs} from 'antd';\nimport {Card, Col, Row} from 'antd';\nimport {ETPop} from \"./ETPop\";\nimport Tag from \"../../../node_modules/antd/lib/tag\";\n\n\nconst Panel = Collapse.Panel;\nconst TabPane = Tabs.TabPane;\n\nexport class MLSQLETQuick extends React.Component {\n    constructor(props) {\n        super(props)\n        this.queryApp = props.parent\n        this.state = {}\n        this.itemData = {}\n    }\n\n    componentDidMount() {\n\n    }\n\n    setData = (k, v) => {\n        this.itemData[k] = v\n    }\n\n    getData = (k) => {\n        return this.itemData[k]\n    }\n\n    onDragStart = (evt) => {\n        const processType = evt.target.getAttribute(\"processtype\")\n        this.setData(\"eventName\", evt.target.getAttribute(\"name\"));\n        this.setData(\"popName\", evt.target.getAttribute(\"help\"));\n        this.setData(\"processType\", processType);\n        this.setData(\"pathAlias\", evt.target.getAttribute(\"pathalias\") || \"\");\n        this.setData(\"outputTableAlias\", evt.target.getAttribute(\"outputtablealias\") || \"\");\n        this.setData(\"tableAlias\", evt.target.getAttribute(\"tablealias\") || \"\");\n        this.setData(\"tableHidden\", evt.target.getAttribute(\"tablehidden\") || false);\n        this.setData(\"pathHidden\", evt.target.getAttribute(\"pathhidden\") || false);\n        this.setData(\"outputTableHidden\", evt.target.getAttribute(\"outputtablehidden\") || false);\n\n\n    }\n\n    makeMLSQL = (sql) => {\n        this.queryApp.getCurrentEditor().ref.appendToEditor(sql)\n    }\n\n\n    renderPop = () => {\n        if (this.state.etPop) {\n            return <ETPop parent={this} title={this.state.popName}/>\n        }\n        return null\n    }\n\n\n    etDoubleClick = (evt) => {\n        this.onDragStart(evt)\n        this.queryApp.getCurrentEditor().ref.etOver(evt)\n    }\n\n    render() {\n        return (\n            <div>\n                <Collapse style={{margin: \"0px 0px\", padding: \"0px 0px\"}}>\n                    <Panel header=\"Quick Menu\" key=\"1\">\n                        <Row gutter={16}>\n                            <Col span={8}>\n                                <Card title={\"Load/Save Data\"}>\n\n                                    <Tag tyle={{marginBottom: \"10px\"}} title=\"Load/Save Data\"\n                                         onDragStart={this.onDragStart} name={\"load\"}\n                                         help={\"Load file/db as table\"}\n                                         draggable={true} color=\"magenta\" onDoubleClick={this.etDoubleClick}>Load\n                                        data</Tag>\n\n                                    <Tag tyle={{marginBottom: \"10px\"}} title=\"Save Data\" onDragStart={this.onDragStart}\n                                         name={\"save\"}\n                                         help={\"Save table into file/db \"}\n                                         draggable={true} color=\"magenta\" onDoubleClick={this.etDoubleClick}>Save data</Tag>\n                                </Card>\n                            </Col>\n                            <Col span={8}>\n                                <Card title=\"Algorithms\">\n                                    <Tag tyle={{marginBottom: \"10px\"}} onDragStart={this.onDragStart}\n                                         name={\"TfIdfInPlace\"}\n                                         help={\"Use TfIdfInPlace vectorize text\"}\n                                         draggable={true} color=\"magenta\" onDoubleClick={this.etDoubleClick}>TfIdf</Tag>\n\n                                    <Tag tyle={{marginBottom: \"10px\"}} onDragStart={this.onDragStart}\n                                         name={\"Word2VecInPlace\"}\n                                         help={\"Use Word2VecInPlace vectorize text\"}\n                                         draggable={true} color=\"magenta\" onDoubleClick={this.etDoubleClick}>Word2vec</Tag>\n\n                                    <Tag tyle={{marginBottom: \"10px\"}} onDragStart={this.onDragStart} onDoubleClick={this.etDoubleClick}\n                                         name={\"RandomForest\"}\n                                         help={\"Use RandomForest to train a model\"}\n                                         draggable={true} color=\"magenta\">RandomForest</Tag>\n\n                                    <Tag style={{marginBottom: \"10px\"}} onDragStart={this.onDragStart} onDoubleClick={this.etDoubleClick}\n                                         name={\"PythonAlg\"}\n                                         help={\"Run python lib to train\"}\n                                         draggable={true} color=\"magenta\">Python Algorithm</Tag>\n\n                                    <Tag style={{marginBottom: \"10px\"}} onDragStart={this.onDragStart} onDoubleClick={this.etDoubleClick}\n                                         name={\"BigDLClassifyExt\"}\n                                         help={\"Use BigDL to develop deep learning algorithm\"}\n                                         draggable={true} color=\"magenta\">Deep Learning</Tag>\n\n                                    <Tag style={{marginBottom: \"10px\"}} onDragStart={this.onDragStart} onDoubleClick={this.etDoubleClick}\n                                         name={\"NaiveBayes\"}\n                                         help={\"Use NaiveBayes\"}\n                                         draggable={true} color=\"magenta\">NaiveBayes</Tag>\n                                </Card>\n                            </Col>\n\n                            <Col span={8}>\n                                <Card title=\"Python\">\n                                    <Tag style={{marginBottom: \"10px\"}} onDragStart={this.onDragStart} onDoubleClick={this.etDoubleClick}\n                                         name={\"PythonEnvExt\"} processtype={\"tool\"}\n                                         help={\"Create Python Env\"}\n                                         pathalias={\"Temp directory\"} tablehidden={\"true\"} pathhidden={\"false\"}\n                                         outputtablehidden={\"true\"}\n                                         draggable={true} color=\"magenta\">Create Python Env</Tag>\n\n                                    <Tag style={{marginBottom: \"10px\"}} onDragStart={this.onDragStart} onDoubleClick={this.etDoubleClick}\n                                         name={\"PythonParallelExt\"} processtype={\"tool\"}\n                                         help={\"Run python project\"}\n                                         pathalias={\"Temp directory\"} tablehidden={\"true\"} pathhidden={\"false\"}\n                                         outputtablehidden={\"true\"}\n                                         draggable={true} color=\"magenta\">Run python project</Tag>\n                                </Card>\n                            </Col>\n\n                        </Row>\n                        <br/>\n                        <Row gutter={16}>\n                            <Col span={8}>\n                                <Card title=\"Register model as Function\">\n                                    <Tag onDragStart={this.onDragStart} name={\"ScriptUDF\"} processtype={\"tool\"} onDoubleClick={this.etDoubleClick}\n                                         help={\"Use ScriptUDF create udf\"}\n                                         draggable={true} color=\"magenta\">Create UDF</Tag>\n\n                                    <Tag onDragStart={this.onDragStart} onDoubleClick={this.etDoubleClick}\n                                         name={\"register\"}\n                                         help={\"Register model to function \"}\n                                         pathalias={\"Model saved path\"}\n                                         outputtablealias={\"Function name\"}\n                                         tablealias={\"Function name\"}\n                                         tablehidden={\"true\"}\n                                         pathhidden={\"false\"}\n                                         outputtablehidden={\"false\"}\n                                         draggable={true} color=\"magenta\">Register Model As Function</Tag>\n                                </Card>\n                            </Col>\n                            <Col span={8}>\n                                <Card title=\"Jobs\">\n                                    <Tag style={{marginBottom: \"10px\"}} onDragStart={this.onDragStart} name={\"JobList\"} onDoubleClick={this.etDoubleClick}\n                                         processtype={\"direct\"}\n                                         draggable={true} color=\"magenta\">Show jobs</Tag>\n                                    <Tag style={{marginBottom: \"10px\"}} onDragStart={this.onDragStart} name={\"Kill\"} onDoubleClick={this.etDoubleClick}\n                                         processtype={\"tool\"}\n                                         pathalias={\"groupId or jobName\"} tablehidden={\"true\"}\n                                         help={\"Kill your job\"}\n                                         draggable={true} color=\"magenta\">Kill job</Tag>\n\n                                    <Tag style={{marginBottom: \"10px\"}} onDragStart={this.onDragStart} onDoubleClick={this.etDoubleClick}\n                                         name={\"ETStreamProgress\"} processtype={\"\"}\n                                         help={\"Show Progress of Stream\"}\n                                         draggable={true} color=\"magenta\">Show Stream Job Progress</Tag>\n                                </Card>\n                            </Col>\n                            <Col span={8}>\n                                <Card title=\"Tools\">\n                                    <Tag style={{marginBottom: \"10px\"}} onDragStart={this.onDragStart} onDoubleClick={this.etDoubleClick}\n                                         name={\"DownloadExt\"} processtype={\"tool\"}\n                                         help={\"Use DownloadExt to download files you have uploaded\"}\n                                         draggable={true} color=\"magenta\">Download uploaded file</Tag>\n                                    <Tag style={{marginBottom: \"10px\"}} onDragStart={this.onDragStart} onDoubleClick={this.etDoubleClick}\n                                         name={\"ImageLoaderExt\"} processtype={\"tool\"}\n                                         help={\"Use ImageLoaderExt to load images\"}\n                                         pathalias={\"\"} tablehidden={\"true\"} pathhidden={\"true\"}\n                                         outputtablehidden={\"false\"}\n                                         draggable={true} color=\"magenta\">Load images</Tag>\n\n                                    <Tag style={{marginBottom: \"10px\"}} onDragStart={this.onDragStart} onDoubleClick={this.etDoubleClick}\n                                         name={\"ConnectMySQL\"} processtype={\"direct\"}\n                                         help={\"\"}\n                                         draggable={true} color=\"magenta\">Connect MySQL</Tag>\n                                    <Tag style={{marginBottom: \"10px\"}} onDragStart={this.onDragStart} onDoubleClick={this.etDoubleClick} name={\"JDBC\"}\n                                         processtype={\"tool\"}\n                                         pathalias={\"DB name in connect\"} tablehidden={\"false\"}\n                                         help={\"Run DLL on MySQL\"}\n                                         draggable={true} color=\"magenta\">MySQL DDL</Tag>\n                                    <Tag style={{marginBottom: \"10px\"}} onDragStart={this.onDragStart} onDoubleClick={this.etDoubleClick}\n                                         name={\"TreeBuildExt\"} processtype={\"tool\"}\n                                         pathalias={\"\"} tablehidden={\"false\"} pathhidden={\"true\"}\n                                         help={\"Build tree from parent-child\"}\n                                         draggable={true} color=\"magenta\">Parent-Child</Tag>\n\n                                    <Tag style={{marginBottom: \"10px\"}} onDragStart={this.onDragStart} onDoubleClick={this.etDoubleClick}\n                                         name={\"ETExample\"} processtype={\"\"}\n                                         help={\"Show Example of ET\"}\n                                         draggable={true} color=\"magenta\">Show ET Example</Tag>\n\n\n                                    <Tag style={{marginBottom: \"10px\"}} onDragStart={this.onDragStart} onDoubleClick={this.etDoubleClick}\n                                         name={\"RepartitionExt\"} processtype={\"tool\"}\n                                         help={\"Change Table Partition Num\"}\n                                         pathalias={\"\"} tablehidden={\"false\"} pathhidden={\"true\"}\n                                         outputtablehidden={\"false\"}\n                                         draggable={true} color=\"magenta\">Repartition table</Tag>\n                                    <Tag style={{marginBottom: \"10px\"}} onDragStart={this.onDragStart} onDoubleClick={this.etDoubleClick}\n                                         name={\"SendMessage\"} processtype={\"tool\"}\n                                         help={\"Send email\"}\n                                         pathalias={\"\"} tablehidden={\"false\"} pathhidden={\"true\"}\n                                         outputtablehidden={\"true\"}\n                                         draggable={true} color=\"magenta\">Send Mail</Tag>\n\n                                    <Tag style={{marginBottom: \"10px\"}} onDragStart={this.onDragStart} onDoubleClick={this.etDoubleClick}\n                                         name={\"CacheExt\"} processtype={\"tool\"}\n                                         help={\"Cache table\"}\n                                         pathalias={\"\"} tablehidden={\"false\"} pathhidden={\"true\"}\n                                         outputtablehidden={\"true\"}\n                                         draggable={true} color=\"magenta\">Cache Table</Tag>\n\n                                    <Tag style={{marginBottom: \"10px\"}} onDragStart={this.onDragStart} onDoubleClick={this.etDoubleClick}\n                                         name={\"StringIndex\"} processtype={\"tool\"}\n                                         help={\"Convert String to number\"}\n                                         pathalias={\"Mapping path\"} tablehidden={\"false\"} pathhidden={\"false\"}\n                                         outputtablehidden={\"true\"}\n                                         draggable={true} color=\"magenta\">Convert String to number</Tag>\n\n                                    <Tag style={{marginBottom: \"10px\"}} onDragStart={this.onDragStart} onDoubleClick={this.etDoubleClick}\n                                         name={\"DownloadFile\"} processtype={\"tool\"}\n                                         help={\"Download File\"}\n                                         pathalias={\"Target file\"} tablehidden={\"true\"} pathhidden={\"false\"}\n                                         outputtablehidden={\"true\"}\n                                         draggable={true} color=\"magenta\">Download File to computer</Tag>\n                                    <Tag style={{marginBottom: \"10px\"}} onDragStart={this.onDragStart} onDoubleClick={this.etDoubleClick}\n                                         name={\"ShowResource\"}\n                                         processtype={\"direct\"}\n                                         draggable={true} color=\"magenta\">Cluster Resource</Tag>\n\n\n                                </Card>\n                            </Col>\n                        </Row>\n                    </Panel>\n                </Collapse>\n                {this.renderPop()}\n            </div>\n\n        )\n    }\n}\n","import * as React from \"react\";\nimport { Tree ,Spin} from 'antd';\nimport EngineService from \"../service/EngineService\";\nimport {TableOutlined} from '@ant-design/icons'\n\nconst { TreeNode, DirectoryTree } = Tree;\nexport default class DeltaLakeTree extends React.Component{\n    constructor(props) {\n        super(props)\n        this.state={dbs:{},loading:false} \n        \n    }\n\n    async reload(){\n      this.setState({loading:true})\n      const res = await EngineService.tablesInDeltaLake()\n      if(res.status===200){\n           const dbs = {}\n           res.content.forEach(item => {\n              if(!dbs[item.database]){\n                dbs[item.database] = [item.table] \n              }else {\n                dbs[item.database].push(item.table)  \n              }\n           })\n           this.setState({dbs})\n       }\n       this.setState({loading:false})\n    }\n\n    show(){    \n        return Object.entries(this.state.dbs).map(([key,value])=>{                   \n            return <TreeNode title={key} key={key}>\n               {value.map(item=>{                   \n                   return <TreeNode icon={<TableOutlined />} title={item} key={`${key}.${item}`} isLeaf />\n               })} \n            </TreeNode>\n        })\n    }\n\n    async componentDidMount(){\n       await this.reload()\n    }\n    \n    render(){\n      return (\n        <Spin tip=\"Loading...\" spinning={this.state.loading}>\n        <DirectoryTree  >\n        {this.show()}\n        </DirectoryTree>\n     </Spin>\n        \n        \n      )\n    }\n} ","import * as React from \"react\";\nimport { Tree ,Spin} from 'antd';\nimport EngineService from \"../service/EngineService\";\n\nconst { TreeNode, DirectoryTree } = Tree;\nexport default class FileSystemTree extends React.Component{\n    constructor(props) {\n        super(props)\n        this.state={root:[],loading:false} \n        \n    }\n\n    getFileList = async(path)=> {\n      const res = await EngineService.ls(path)        \n      if(res.status===200 && !res.content[0]._corrupt_record){           \n           const root = res.content.map(item => {               \n               item[\"is_dir\"] = this.isDir(item)\n               item[\"key\"] = item.path\n               item[\"title\"] = item.path.split(\"/\").slice(-1)[0]\n               item[\"isLeaf\"] = !item.is_dir\n               return item\n           })\n           return root\n       }\n       return []\n    }\n    \n    isDir=(item)=>{\n      return item.permission.startsWith(\"d\")\n    }\n    \n     onLoadData = async (treeNode)=> {\n      treeNode.props.dataRef.children = await this.getFileList(treeNode.props.dataRef.path)\n      this.setState({root:[...this.state.root]})\n    }\n\n    renderTreeNodes = data =>{\n      return data.map(item=>{\n        if(item.children){\n          return <TreeNode title={item.title} key={item.key} isLeaf={item.isLeaf}  dataRef={item}>\n            {this.renderTreeNodes(item.children)}\n          </TreeNode>\n        }\n        return <TreeNode title={item.title} key={item.key} isLeaf={item.isLeaf} dataRef={item} />;\n      })\n    }\n\n    async reload(){      \n       this.setState({loading:true})\n       const root = await this.getFileList(\"/\")\n       this.setState({loading:false,root})\n    }\n\n    async componentDidMount(){\n       await this.reload()\n    }\n    \n    render(){\n      return (\n        <div>\n          <Spin tip=\"Loading...\" spinning={this.state.loading}>\n         <DirectoryTree loadData={this.onLoadData} >\n            {this.renderTreeNodes(this.state.root)}\n        </DirectoryTree>\n        </Spin>\n        </div>\n        \n        \n      )\n    }\n} ","const { SetStateActionHandler, SetStateAction } = require(\"./actions/SetStateAction\");\n\nconst CommonHandlers = {\n    setState: SetStateActionHandler,        \n}\nconst CommonActions = {\n    setState: SetStateAction,        \n}\n\nexport  {CommonHandlers,CommonActions}","import ActionMaker from \"../../ActionMaker\"\nimport { ActionProxy } from \"../../../backend_service/ActionProxy\"\nimport RemoteAction from \"../../../backend_service/RemoteAction\"\n\nexport const {handler:OpenScriptFileActionHandler,action:OpenScriptFileAction} = ActionMaker.buildHandler(async (action)=>{\n    const client = new ActionProxy()\n    const {node,consoleApp} = action.data\n    if(!node.isDir){\n        const res =  await client.get(RemoteAction.SCRIPT_FILE_GET,{id:node.id})\n        if(res.status!==200){\n            return {data:{\n                error: `Fail to get file ${node.label}. Reason: ${res.content}`                \n            }}\n        }\n        const scriptFile = res.content\n        consoleApp.openExistsOrNewEditor({id: node.id, content: scriptFile.content, name: scriptFile.name})\n      }\n    return {data:{}}\n})","import ActionMaker from \"../../ActionMaker\"\nimport { ActionProxy } from \"../../../backend_service/ActionProxy\"\nimport RemoteAction from \"../../../backend_service/RemoteAction\"\nimport Tools from \"../../../common/Tools\"\n\nexport const { handler: CreateFileActionHandler, action: CreateFileAction } = ActionMaker.buildHandler(async (action) => {\n    const client = new ActionProxy()\n    const { createType, consoleApp,form,scriptContent=\"\"} = action.data\n    const {fileName} = form.getFieldValue()\n    \n    if(!fileName){\n        return {data:{\n            createFileError: \"Please input the file name\"\n        }}\n    }\n\n    const { node } = action.__state\n    \n    let isDir = false\n    switch (createType) {\n        case \"file\": \n            isDir = false\n            if(!fileName.endsWith(\".mlsql\") \n            && !fileName.endsWith(\".nb\") \n            && !fileName.endsWith(\".py\")){\n                return {\n                    data: {                        \n                        createFileError: \"fileName should end with .mlsql or .nb or .py\"\n                    }\n                }\n            }\n            break;\n        case \"folder\":\n            isDir = true\n            break;\n    }\n\n    const saveParams = {\n        fileName: fileName,\n        isDir: isDir,\n        content: scriptContent,        \n        parentId: node.id\n    }\n\n    const res = await client.post(RemoteAction.SAVE_SCRIPT_FILE,saveParams)\n    \n    return {\n        data: {\n            ...action.data,\n            reloading: Tools.getJobName()\n        }\n    }\n})","import { ActionProxy } from \"../../../backend_service/ActionProxy\"\nimport RemoteAction from \"../../../backend_service/RemoteAction\"\nimport ActionMaker from \"../../ActionMaker\"\n\nexport const {handler:ExpandActionHandler,action:ExpandAction} = ActionMaker.buildHandler(async (action)=>{\n    const {expandedKeys} = action.data\n    const {expandedKeys:oldExpandedKeys} = action.__state\n    const newExpanedKeys = expandedKeys.filter(item=>!oldExpandedKeys.includes(item))\n    const newNoExpanedKeys = oldExpandedKeys.filter(item=>!expandedKeys.includes(item))\n    const client = new ActionProxy()      \n    console.log(newExpanedKeys,newNoExpanedKeys)\n    newExpanedKeys.forEach(async element => {    \n        await client.post(RemoteAction.SAVE_SCRIPT_FILE,{\n            id: element,isExpanded:true \n        })\n    });\n\n    newNoExpanedKeys.forEach(async element => {        \n        await client.post(RemoteAction.SAVE_SCRIPT_FILE,{\n            id: element,isExpanded:false \n        })\n    });\n\n    return {        \n        data: {\n            expandedKeys\n        }\n    }\n})","import ActionMaker from \"../../ActionMaker\"\nimport { ActionProxy } from \"../../../backend_service/ActionProxy\"\nimport RemoteAction from \"../../../backend_service/RemoteAction\"\nimport Tools from \"../../../common/Tools\"\n\nexport const { handler: DeleteFileActionHandler, action: DeleteFileAction } = ActionMaker.buildHandler(async (action) => {\n    const { node } = action.data\n    await ActionProxy.client.post(RemoteAction.SCRIPT_FILE_REMOVE, {\n        id: node.id\n    })\n    return {\n        data: {\n            ...action.data,\n            reloading: Tools.getTempTableName()\n        }\n    }\n})","import ActionMaker from \"../../ActionMaker\"\nimport { ActionProxy } from \"../../../backend_service/ActionProxy\"\nimport RemoteAction from \"../../../backend_service/RemoteAction\"\n\nexport const {handler:PublishAnalysisPluginActionHandler,action:PublishAnalysisPluginAction} = ActionMaker.buildHandler(async (action)=>{\n    const client = new ActionProxy()\n    const {node,consoleApp} = action.data\n    if(!node.isDir){\n        const res =  await client.post(RemoteAction.ANALYSIS_PLUGIN_PUBLISH,{id:node.id})\n        if(res.status!==200){\n            return {data:{\n                error: `Fail to publish file ${node.label}. Reason: ${res.content}`                \n            }}\n        }                \n    }\n    // consoleApp.\n    return {data:{}}\n})","import ActionMaker from \"../../ActionMaker\"\nimport { ActionProxy } from \"../../../backend_service/ActionProxy\"\nimport RemoteAction from \"../../../backend_service/RemoteAction\"\n\nexport const {handler:SharePublicHandler,action:SharePublicAction} = ActionMaker.buildHandler(async (action)=>{\n    const client = new ActionProxy()\n    const {node,_} = action.data\n    const res =  await client.post(RemoteAction.SCRIPT_SHARE_PUBLIC,{id:node.id})\n    if(res.status!==200){\n        return {data:{\n                error: `Fail to share ${node.label}. Reason: ${res.content}`\n            }}\n    }\n    return {data:{}}\n})","import { CommonHandlers,CommonActions} from '../../analysis/common/CommonHandlers'\nimport { OpenScriptFileActionHandler, OpenScriptFileAction } from './OpenScriptFileAction'\nimport { CreateFileActionHandler, CreateFileAction } from './CreateFileAction'\nimport { ExpandAction, ExpandActionHandler } from './ExpandAction'\nimport { DeleteFileActionHandler, DeleteFileAction } from './DeleteFileAction'\nimport { PublishAnalysisPluginAction, PublishAnalysisPluginActionHandler } from './PublishAnalysisPluginAction'\nimport {SharePublicAction, SharePublicHandler} from \"./SharePublicAction\";\nclass ScriptTreeActionNames {\n    static openScriptFile=\"openScriptFile\"\n    static createScriptFile=\"createScriptFile\"\n    static deleteScriptFile=\"deleteScriptFile\"\n    static publishPlugin=\"publishPlugin\"\n    static sharePublic=\"publishPlugin\"\n    static expand=\"expand\"\n}\nconst ScriptTreeHandlers = {\n    ...CommonHandlers,\n    [ScriptTreeActionNames.openScriptFile]:OpenScriptFileActionHandler,\n    [ScriptTreeActionNames.createScriptFile]:CreateFileActionHandler,\n    [ScriptTreeActionNames.expand]:ExpandActionHandler,\n    [ScriptTreeActionNames.deleteScriptFile]:DeleteFileActionHandler,\n    [ScriptTreeActionNames.publishPlugin]:PublishAnalysisPluginActionHandler,\n    [ScriptTreeActionNames.sharePublic]:SharePublicHandler,\n}\nconst ScriptTreeActions = {\n    ...CommonActions,\n    [ScriptTreeActionNames.openScriptFile]:OpenScriptFileAction,\n    [ScriptTreeActionNames.createScriptFile]:CreateFileAction,\n    [ScriptTreeActionNames.expand]:ExpandAction,\n    [ScriptTreeActionNames.deleteScriptFile]:DeleteFileAction,\n    [ScriptTreeActionNames.publishPlugin]:PublishAnalysisPluginAction,\n    [ScriptTreeActionNames.sharePublic]:SharePublicAction,\n}\n\nfunction ScriptTreeReducer(state, action) {\nreturn ScriptTreeActions[action.type](state, action.data)    \n}\nexport { ScriptTreeActionNames, ScriptTreeReducer, ScriptTreeHandlers }","import React, { useState, useCallback, useEffect } from 'react';\nimport { Tree, Spin,Menu,Dropdown } from 'antd';\nimport { DownOutlined, FileOutlined, FolderOutlined } from '@ant-design/icons';\nimport { ContextMenu, MenuItem, ContextMenuTrigger } from \"react-contextmenu\";\nclass MLSQLTreeNodeBuilder {\n\n    /**\n     *\n     * Usage:\n     *\n     * convert flat array to tree structure\n     *\n     * input data：\n     * [{\"id\":1,\"icon\":null,\"label\":null,\"parentId\":0},\n     * {\"id\":2,\"icon\":\"document\",\"label\":\"jack\",\"parentId\":0},\n     * {\"id\":3,\"icon\":\"document\",\"label\":\"dafe\",\"parentId\":0}\n     * ]\n     *\n     * output:\n     *\n     * @param {[{id:number,icon:string,label:string,parentId:number,childNodes:[]}]} list\n     */\n    build = (list) => {\n\n        let tempMap = {}, node, roots = [], i;\n        for (i = 0; i < list.length; i += 1) {\n            tempMap[list[i].id] = i;\n            list[i].childNodes = [];\n        }\n        for (i = 0; i < list.length; i += 1) {\n            node = list[i];\n            if (node.parentId !== 0) {\n                try {\n                    list[tempMap[node.parentId]].childNodes.push(node);\n                } catch (e) {\n                    console.log(node)\n                    console.log(tempMap[node.parentId])\n                }\n\n            } else {\n                roots.push(node);\n            }\n        }\n        return roots;\n    }\n\n    convert = (item) => {\n        if (item[\"childNodes\"] && item[\"childNodes\"].length > 0) {\n            item[\"children\"] = item[\"childNodes\"]\n            item[\"children\"].map((cn) => {\n                return this.convert(cn)\n            })\n        }\n        item[\"id\"] = String(item[\"id\"])\n        item[\"key\"] = item[\"id\"]\n        // item[\"title\"] = <span className=\"react-contextmenu-trigger\"><ContextMenuTrigger  id=\"scriptTreeContextMenu\">{item.label}</ContextMenuTrigger></span>\n        item[\"title\"] = <span>{item.label}</span>\n        item[\"isLeaf\"] = !item[\"isDir\"]\n        item[\"isExpand\"] = !item[\"isExpanded\"]\n        if (item[\"isDir\"]) {\n            item[\"icon\"] = <FolderOutlined />\n        } else {\n            item[\"icon\"] = <FileOutlined />\n        }\n\n        return item\n    }\n\n\n}\n\nexport default MLSQLTreeNodeBuilder","import React, { useState, useCallback, useEffect } from 'react';\n\nimport styled from 'styled-components'\nimport { Spin } from 'antd';\n\nconst SpinBoxW = styled.div`\n  width: 100%; \n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin: 30px 30px;\n`\nfunction SpinBox(){\n    return <SpinBoxW>\n        <Spin tip=\"Loading....\"/>\n    </SpinBoxW>\n}\n\nexport default SpinBox","import React, { useState, useCallback, useEffect } from 'react';\n\nconst useContextMenu = ({contextMenuRef,dispacher,onRender})=>{ \n    \n    const [rightClickNodeTreeItem, setRightClickNodeTreeItem] = useState(undefined)    \n    \n    const onRightClick = useCallback((params) => {        \n        const { event, node } = params\n        \n        let clickX =  event.clientX\n        let clickY = event.clientY                                      \n        const click = (evt) => {  \n            if(!contextMenuRef.current) return\n            const wasOutside =  !contextMenuRef.current.contains(evt.target)            \n            if (wasOutside) {\n                setRightClickNodeTreeItem(undefined)                \n            }\n        }\n        document.addEventListener('click', click);\n    \n        const scroll = () => {\n            setRightClickNodeTreeItem(undefined) \n        }\n        document.addEventListener('scroll', scroll);\n    \n        setRightClickNodeTreeItem({\n            pageX: clickX,\n            pageY: clickY,\n            id: node.id || node.key\n        })\n        return () => {\n            document.removeEventListener('click',click);\n            document.removeEventListener('scroll',scroll);\n        }\n    },[setRightClickNodeTreeItem])\n\n    const ui = useCallback(()=>{\n        if (!rightClickNodeTreeItem) {\n            return \n        }\n        const { pageX, pageY, id } = { ...rightClickNodeTreeItem };    \n        const tmpStyle = {\n            zIndex: 10000,\n            position: \"fixed\",\n            left: `${pageX}px`,\n            top: `${pageY}px`,\n            borderRadius: \"3px\",\n            boxShadow: \"0 0 0 1px rgba(16, 22, 26, 0.1), 0 2px 4px rgba(16, 22, 26, 0.2), 0 8px 24px rgba(16, 22, 26, 0.2)\"\n        };   \n        return <div ref={contextMenuRef} style={tmpStyle}>{onRender({rightClickNodeTreeItem,setRightClickNodeTreeItem,dispacher})}</div>\n    },[rightClickNodeTreeItem])\n    return {onRightClick,ui}\n}\n\nexport {useContextMenu}","import React, {useRef, useCallback, useEffect} from 'react';\nimport {Popconfirm, Tree, Modal, Menu, Form, Input} from 'antd';\nimport {useReducerAsync} from 'use-reducer-async'\nimport {\n    DownOutlined,\n    ShareAltOutlined,\n    FolderOutlined,\n    DeleteOutlined,\n    FileAddOutlined,\n    FolderAddOutlined\n} from '@ant-design/icons';\nimport {ScriptTreeReducer, ScriptTreeHandlers, ScriptTreeActionNames} from './actions/ScriptTreeReducer';\nimport {ActionProxy} from '../../backend_service/ActionProxy';\nimport RemoteAction from '../../backend_service/RemoteAction';\nimport MLSQLTreeNodeBuilder from '../../service/MLSQLTreeBuilder';\nimport SpinBox from '../SpinBox'\nimport {useContextMenuCallback, useContextMenu} from './pages/ContextMenu';\nimport Tools from '../../common/Tools';\nimport AlertBox from '../AlertBox'\nimport {FormattedMessage} from 'react-intl'\n\nconst {DirectoryTree} = Tree\n\n\nconst initState = {\n    nodes: [],\n    error: undefined,\n    createFileError: undefined,\n    createType: undefined,\n    createTitle: undefined,\n    operateModal: false,\n    reloading: undefined,\n    loading: true,\n    expandedKeys: []\n\n}\n\nconst ScriptTreeContext = React.createContext()\n\nfunction ScriptTree(props) {\n    const {consoleApp} = props\n    const [state, dispacher] = useReducerAsync(ScriptTreeReducer, initState, ScriptTreeHandlers)\n    const {\n        loading,\n        nodes,\n        error, createFileError,\n        createType,\n        operateModal,\n        createTitle,\n        reloading,\n        expandedKeys\n    } = state\n    const client = new ActionProxy()\n    const contextMenuRef = useRef()\n    const [form] = Form.useForm()\n\n    useEffect(() => {\n        const getList = async () => {\n            const shares = await client.get(RemoteAction.SCRIPT_SHARE_PUBLIC, {})\n            if (shares.status !== 200) {\n                return\n            }\n            const res = await client.get(RemoteAction.SCRIPT_FILE_LIST, {})\n            if (res.status !== 200) {\n                return\n            }\n\n            const builder = new MLSQLTreeNodeBuilder()\n\n            const treeRes = builder.build(res.content).sort((a, b) => {\n                return b.id - a.id\n            })\n\n            shares.content.map(item => {\n                item[0].parentId = 0\n                item[0].label = <span style={{color: \"green\"}}>{item[0].label + \"(shared by others)\"}</span>\n                const node = builder.build(item)\n                treeRes[0].childNodes = treeRes[0].childNodes.concat(node[0])\n                return item\n            })\n\n            const treeData = treeRes.map(item => {\n                return builder.convert(item)\n            })\n\n            Tools.visitDown(treeData[0], (item) => {\n                if (item.isExpanded) {\n                    expandedKeys.push(item.id)\n                }\n            })\n\n            dispacher({\n                type: \"setState\",\n                data: {\n                    nodes: treeData,\n                    loading: false,\n                    expandedKeys\n                }\n            })\n        }\n\n        getList()\n    }, [reloading])\n\n    const onRender = ({rightClickNodeTreeItem, setRightClickNodeTreeItem, dispacher}) => {\n        const {id} = rightClickNodeTreeItem\n        let target = undefined\n\n        Tools.visitDown(nodes[0], (item) => {\n            if (item.id === id) {\n                target = item\n            }\n        })\n        if (id === nodes[0].id) {\n            return <Menu>\n                <Menu.Item icon={<FolderAddOutlined/>} onClick={\n                    () => {\n                        dispacher({\n                            type: \"setState\",\n                            data: {\n                                node: target,\n                                createType: \"folder\",\n                                createTitle: \"Create Project\",\n                                operateModal: true\n                            }\n                        })\n                    }\n                }>Create Project</Menu.Item>\n            </Menu>\n        }\n\n        if (!target.isDir) {\n            return <Menu>\n                <Menu.Item onClick={() => {\n                    dispacher({\n                        type: ScriptTreeActionNames.publishPlugin,\n                        data: {\n                            node: target\n                        }\n                    })\n                    setRightClickNodeTreeItem(undefined)\n                }} key={0}>Publish As Plugin To Analysis</Menu.Item>\n                <Menu.Item onClick={() => {\n                    dispacher({\n                        type: ScriptTreeActionNames.deleteScriptFile,\n                        data: {\n                            node: target\n                        }\n                    })\n                    setRightClickNodeTreeItem(undefined)\n                }} key={1}>Delete</Menu.Item>\n            </Menu>\n        }\n\n        return <Menu>\n            {target.parentId == nodes[0].id && <Menu.Item icon={<ShareAltOutlined/>} onClick={() => {\n                dispacher({\n                    type: ScriptTreeActionNames.sharePublic,\n                    data: {\n                        node: target\n                    }\n                })\n                setRightClickNodeTreeItem(undefined)\n            }} key={0}>Share Public</Menu.Item>\n            }\n            <Menu.Item icon={<FileAddOutlined/>} onClick={() => {\n                dispacher({\n                    type: \"setState\",\n                    data: {\n                        node: target,\n                        createType: \"file\",\n                        createTitle: \"Create File\",\n                        operateModal: true\n                    }\n                })\n                setRightClickNodeTreeItem(undefined)\n            }} key={1}>Create Script</Menu.Item>\n            <Menu.Item icon={<FolderAddOutlined/>} onClick={() => {\n                dispacher({\n                    type: \"setState\",\n                    data: {\n                        node: target,\n                        createType: \"folder\",\n                        createTitle: \"Create Folder\",\n                        operateModal: true\n                    }\n                })\n                setRightClickNodeTreeItem(undefined)\n            }} key={2}>Create Folder</Menu.Item>\n            <Menu.Item icon={<DeleteOutlined/>} onClick={() => {\n                dispacher({\n                    type: ScriptTreeActionNames.deleteScriptFile,\n                    data: {\n                        node: target,\n                    }\n                })\n                setRightClickNodeTreeItem(undefined)\n            }} key={3}>Delete</Menu.Item>\n        </Menu>\n    }\n    const {onRightClick: popContextMenu, ui: contextMenu} = useContextMenu({contextMenuRef, dispacher, onRender})\n\n    return (\n        <ScriptTreeContext.Provider value={{dispacher}}>\n            {contextMenu()}\n            <Modal\n                title={createTitle}\n                visible={operateModal}\n                onCancel={() => {\n                    dispacher({\n                        type: \"setState\",\n                        data: {operateModal: false}\n                    })\n                }}\n                onOk={() => {\n                    dispacher({\n                        type: ScriptTreeActionNames.createScriptFile,\n                        data: {\n                            operateModal: false,\n                            consoleApp, createType,\n                            form\n                        }\n                    })\n                }}\n                cancelText=\"Cancel\"\n                OkText=\"Ok\"\n            >\n                {\n                    createFileError && <AlertBox message={createFileError}></AlertBox>\n                }\n                <Form form={form}>\n                    <Form.Item name=\"fileName\" label=\"File Name\">\n                        <Input/>\n                    </Form.Item>\n                </Form>\n            </Modal>\n            {error && <AlertBox message={error}></AlertBox>}\n            {loading && <SpinBox></SpinBox>}\n            {!loading &&\n            <DirectoryTree height={700}\n                           onExpand={(expandedKeys) => {\n                               dispacher({\n                                   type: ScriptTreeActionNames.expand,\n                                   data: {expandedKeys}\n                               })\n                           }}\n                           onDoubleClick={(evt, node) => {\n                               dispacher({\n                                   type: ScriptTreeActionNames.openScriptFile,\n                                   data: {consoleApp, node}\n                               })\n                           }}\n                           defaultExpandedKeys={expandedKeys}\n                           expandAction=\"click\"\n                           onRightClick={popContextMenu}\n                           switcherIcon={<DownOutlined/>}\n                           treeData={nodes}></DirectoryTree>}\n\n        </ScriptTreeContext.Provider>\n    )\n}\n\nexport {ScriptTree, ScriptTreeContext}","import * as React from \"react\";\nimport { Tabs } from 'antd';\nimport DeltaLakeTree from \"../detla_lake/DeltaLakeTree\";\nimport FileSystemTree from \"../file_system/FileSystemTree\";\nimport \"../../v1/analysis/leftview.scss\"\nimport { ScriptTree } from \"../script_console/ScriptTree\";\nconst { TabPane } = Tabs;\nexport default class LeftTreePane extends React.Component {\n    constructor(props){\n        super(props)\n        this.queryApp = props.parent\n    }\n    render(){\n       return <Tabs defaultActiveKey=\"1\" style={{maxWidth:\"350px\"}} onTabClick={(key)=>{\n        if(key===\"2\"){                            \n            if(this.deltaLakeTreeRef){\n                this.deltaLakeTreeRef.reload()\n            }\n        }\n        // if(key===\"3\"){                            \n        //     if(this.fileSystemTreeRef){\n        //         this.fileSystemTreeRef.reload()\n        //     }\n        // }                        \n        }}>\n        <TabPane tab=\"Script\" key=\"1\">\n       <div className=\"leftview-box\">\n           <ScriptTree consoleApp = {this.queryApp}></ScriptTree> \n       </div>\n       </TabPane>       \n       <TabPane tab=\"DeltaLake\" key=\"2\">\n       <div className=\"leftview-box\">\n           <DeltaLakeTree ref={(et)=> this.deltaLakeTreeRef = et} ></DeltaLakeTree>\n       </div>\n       </TabPane>\n       <TabPane tab=\"FileSystem\" key=\"3\">\n       <div className=\"leftview-box\">\n           <FileSystemTree ref={(et)=> this.fileSystemTreeRef = et}></FileSystemTree>\n       </div>\n       </TabPane> \n         \n     </Tabs>\n    }\n}","import React, {Component} from 'react';\nimport './MLSQLQueryApp.scss'\nimport AceEditor from \"react-ace\";\nimport {MLSQLQueryDisplay} from \"./MLSQLQueryDisplay\";\nimport {MLSQLDash} from \"./query/MLSQLDash\";\nimport {TabEditor} from \"./editor/TabEditor\";\nimport {MLSQLETQuick} from \"./et/MLSQLETQuick\";\nimport {Resizable} from \"re-resizable\";\nimport LeftTreePane from '../v1/async_execute/LeftTreePane';\nimport '../v1/analysis/workshop.scss'\nclass MLSQLQueryApp extends Component {\n\n    constructor(props) {\n        super(props);\n        // create a ref to store the textInput DOM element\n        this.state = {\n            sqlContent: \"\",\n            displayEditor: \"normal\"\n        }\n        \n        this.editorGroup = React.createRef()\n        this.messageBox = React.createRef()\n        this.display = React.createRef()\n        this.dash = React.createRef()\n        this.etRef = React.createRef()\n        \n\n        // key is script id\n        // value is editor ref\n        this.fileToEditorMap = {}\n\n    }\n\n    openExistsOrNewEditor = (script) => {\n        const self = this\n        if (this.fileToEditorMap.hasOwnProperty(script.id)) {\n            const editorRef = this.fileToEditorMap[script.id]\n            editorRef.ref.text(script.content, script.id)\n            this.editorGroup.current.onChange(editorRef.activeKey)\n            \n        } else {\n            this.editorGroup.current.addFull(script, (editorRef) => {\n                editorRef.ref.text(script.content, script.id)\n                self.fileToEditorMap[script.id] = editorRef\n            })\n\n        }\n\n        if (script.name.endsWith(\".nb\")) {\n            self.setState({displayEditor: \"notebook\"})\n        }else if (script.name.endsWith(\".py\")) {\n            self.setState({displayEditor: \"pythoneditor\"})\n        } else {\n            self.setState({displayEditor: \"normal\"})\n        }\n    }\n\n    closeEditor = (editorRef) => {\n        const tempFileToEditorMap = Object.keys(this.fileToEditorMap).filter(key => {\n            return this.fileToEditorMap[key].activeKey !== editorRef.activeKey\n        }).reduce((pre, key) => {\n            pre[key] = this.fileToEditorMap[key]\n            return pre\n        }, {})\n        this.fileToEditorMap = tempFileToEditorMap\n    }\n\n    getCurrentEditor = () => {\n        return this.editorGroup.current.getCurrentEditor()\n    }\n\n\n    setData = (data) => {\n        this.queryResData = data\n        this.dash.current.refresh()\n    }\n\n    tableAndDash = () => {\n        if (this.state.displayEditor !== \"notebook\" || this.state.displayEditor !== \"pythoneditor\") {\n            return <div>\n                <Resizable defaultSize={{height: \"300px\"}} onResize={() => {\n                    this.messageBox.current.editor.resize();\n                }}>\n                    <AceEditor\n                        height={\"100%\"}\n                        width={\"100%\"}\n                        ref={this.messageBox}\n                        mode=\"text\"\n                        theme=\"github\"\n                        name=\"message_box\"\n                    />\n                </Resizable>\n\n                <div>\n                    <MLSQLDash ref={this.dash} parent={this}/>\n                </div>\n                <div className=\"mlsql-query-display\">\n                    <MLSQLQueryDisplay ref={this.display} parent={this}/></div>\n            </div>\n        }\n\n    }\n\n\n    render() {\n        return (\n            <div className=\"ws-app\">\n\n               <div className=\"ws-left-pane\">\n               <Resizable  style={{ paddingRight: \"30px\", borderRight: \"solid\" }}>\n                <LeftTreePane  ref={(et)=>this.leftTreePaneRef = et} parent={this}></LeftTreePane>\n               </Resizable>\n                   \n               </div>\n                <div className=\"ws-right-pane\">\n                    <div style={{marginBottom: \"10px\"}}>\n                        <MLSQLETQuick ref={this.etRef} parent={this}/>\n                    </div>\n                    <TabEditor ref={this.editorGroup} parent={this}/>\n                    {this.tableAndDash()}\n                </div>\n\n            </div>\n        )\n    }\n}\n\nexport default MLSQLQueryApp","let mix = (superclass) => new MixinBuilder(superclass);\n\nclass MixinBuilder {\n  constructor(superclass) {\n    this.superclass = superclass;\n  }\n\n  with(...mixins) { \n    return mixins.reduce((c, mixin) => mixin(c), this.superclass);\n  }\n}\n\nexport default mix\n","import AnalysisWorkshop from \"./workshop\"\n\nexport const NewSessionOp = superclass=> class extends(superclass){\n      \n      toggleNewSession = ()=>{\n        this.setState({showNewSession:!this.state.showNewSession})\n      }\n      \n      showNewSession = (evt)=>{\n        if(!evt.node.props['table']){\n          return\n        }\n        const currentTable = {table: evt.node.props['table'],db: evt.node.props['db']}\n        this.setState({showNewSession:true,currentTable})\n      }\n    \n      currentTableName = ()=>{\n          if(!this.state.currentTable){\n              return \"\"\n          }\n        return this.state.currentTable.db + \".\" + this.state.currentTable.table\n      }\n    \n      showTable = async (prefix)=>{      \n          this.setState({showNewSession:false})           \n          const {db,table} = this.state.currentTable\n          //AnalysisWorkshop.workshop.newSession(prefix,db,table)\n          this.workshop.newSession(prefix,db,table)                   \n      }\n}","import * as React from \"react\";\nimport { Form, Spin, Input, Modal,Tree } from 'antd';\nimport FileSystemTree from \"../file_system/FileSystemTree\";\nimport mix from \"../../common/mixin\"\nimport { NewSessionOp } from \"./NewSessionOp\";\nimport { ETPopLoad } from \"../../components/et/ETPopLoad\";\nconst { TreeNode, DirectoryTree } = Tree;\n\nexport default class AFileSystemTree extends mix(FileSystemTree).with(NewSessionOp) {\n    constructor(props) {\n        super(props)\n        this.workshop = props.parent.workshop        \n    }\n    \n    showNewSession = (evt)=>{\n        const currentTable = {table: evt.node.props.dataRef['path'],db: \"\"}\n        this.setState({showNewSession:true,currentTable})\n    }\n\n    showTable = async (prefix,tp,options)=>{\n        this.setState({showNewSession:false})        \n        const {db,table} = this.state.currentTable\n        this.workshop.newSession(prefix,tp,table,options)        \n    }\n\n    render = () => {\n        return <div>\n            <Modal\n                title={`Open Table: [${this.currentTableName()}]?`}\n                visible={this.state.showNewSession}\n                onCancel={this.toggleNewSession}\n                onOk={() => { this.showTable(\"file\",this.loadPopRef.data.sourceTypeV,this.loadPopRef.data.params) }}\n                cancelText=\"Cancel\"\n                OkText=\"Ok\">\n                    <ETPopLoad key={this.currentTableName()} ignorePath={true} ignoreTableName={true} ref={et=>this.loadPopRef=et}  parent={this}></ETPopLoad>\n                 </Modal>\n            <Spin tip=\"Loading...\" spinning={this.state.loading}>\n                <DirectoryTree height={700} loadData={this.onLoadData} expandAction=\"doubleClick\" onRightClick={this.showNewSession}>\n                    {this.renderTreeNodes(this.state.root)}\n                </DirectoryTree>\n            </Spin>\n        </div>\n    }\n}","import * as React from \"react\";\nimport { Tree, Spin, Menu, Modal } from 'antd';\nimport {TableOutlined} from '@ant-design/icons'\nimport DeltaLakeTree from \"../detla_lake/DeltaLakeTree\";\nimport mix from \"../../common/mixin\"\nimport { NewSessionOp } from \"./NewSessionOp\";\nconst { TreeNode, DirectoryTree } = Tree;\nexport default class ADeltaLakeTree extends mix(DeltaLakeTree).with(NewSessionOp) {\n    constructor(props) {\n        super(props)\n        this.workshop = props.parent.workshop        \n    }\n    tableClick = (evt) => {\n        this.setState({\n            rightClickNodeTreeItem: {\n                pageX: evt.event.pageX,\n                pageY: evt.event.pageY,\n                table: evt.node.props['table'],\n                db: evt.node.props['db']\n            }\n        })\n    }\n    show() {\n        return Object.entries(this.state.dbs).map(([key, value]) => {\n            return <TreeNode title={key} key={key}>\n                {value.map(item => {\n                    return <TreeNode icon={<TableOutlined />} title={item} table={item} db={key} key={`${key}.${item}`} isLeaf />\n                })}\n            </TreeNode>\n        })\n    }        \n\n    render() {\n\n        return (\n            <div>\n                 <Modal  \n                    title={`Open Table`}\n                    visible={this.state.showNewSession}\n                    onCancel={this.toggleNewSession}\n                    onOk={()=>{this.showTable(\"delta\")}}\n                    cancelText=\"Cancel\"                     \n                    OkText=\"Ok\">                    \n                   {`Open  ${this.currentTableName()}]?`}\n                 </Modal>                \n                <Spin tip=\"Loading...\" spinning={this.state.loading}>\n                    <DirectoryTree onRightClick={this.showNewSession}>\n                        {this.show()}\n                    </DirectoryTree>\n                </Spin>\n            </div>\n\n\n        )\n    }\n}","import ActionMaker from \"../../../ActionMaker\"\nimport EngineService from \"../../../service/EngineService\"\n\nexport const { handler: LoadActionHandler, action: LoadAction } = ActionMaker.buildHandler(async (action) => {\n    const res = await EngineService.tablesInWorkshop()\n    if (res.status === 200) {\n        const dbs = {}\n        res.content.forEach(item => {\n            if (!dbs[item.sessionId]) {\n                dbs[item.sessionId] = [item.tableName]\n            } else {\n                dbs[item.sessionId].push(item.tableName)\n            }\n        })\n        return {\n            data: {\n                dbs,...action.data\n            }\n        }\n    }\n\n    return {\n        data: {...action.data}\n    }\n})","import ActionMaker from \"../../../ActionMaker\"\n\nexport const {handler:OpenActionHandler,action:OpenAction} = ActionMaker.buildHandler(async (action)=>{\n    const {openTable,workshop} = action.data    \n    workshop.newSession(\"temp\",\"\",openTable)                     \n    return {        \n        data: {}\n    }\n})","import ActionMaker from \"../../../ActionMaker\"\nimport { ActionProxy } from \"../../../../backend_service/ActionProxy\"\nimport RemoteAction from \"../../../../backend_service/RemoteAction\"\nimport Tools from \"../../../../common/Tools\"\n\nexport const {handler:DeleteActionHandler,action:DeleteAction} = ActionMaker.buildHandler(async (action)=>{\n    const {id} = action.data\n    const proxy = new ActionProxy()\n    await proxy.get(RemoteAction.ANALYSIS_TABLE_DELETE,{tableName:id})\n    return {        \n        data: {\n            reloading: Tools.getJobName()           \n        }\n    }\n})","import ActionMaker from \"../../../ActionMaker\"\nimport { ActionProxy } from \"../../../../backend_service/ActionProxy\"\nimport Tools from \"../../../../common/Tools\"\n\nexport const { handler: ExportToActionHandler, action: ExportToAction } = ActionMaker.buildHandler(async (action) => {\n    const { targetPath, workshop } = action.data\n    const { exportTable } = action.__state\n    const { name: openTable, type } = exportTable\n\n    const { sql, tableName } = await workshop.buildLoadSQL(\"temp\", \"\", openTable)\n\n    const runSql = (name) => {\n        proxy.runScript(`\n             ${sql}\n             save ignore ${tableName} as ${name}.\\`${targetPath}\\`;\n            `, Tools.getJobName(), { async: true })\n    }\n    const proxy = new ActionProxy()\n    switch (type) {\n        case \"hive\":\n            runSql(\"hive\")\n            break\n        case \"file\":\n            runSql(\"parquet\")\n            break\n        case \"delta\":\n            runSql(\"delta\")\n            break\n\n    }\n\n    return {\n        data: {\n            ...action.data\n        }\n    }\n})","import { CommonHandlers,CommonActions} from '../../common/CommonHandlers'\nimport { LoadActionHandler, LoadAction } from './LoadAction'\nimport { OpenActionHandler, OpenAction } from './OpenAction'\nimport { DeleteActionHandler, DeleteAction } from './DeleteAction'\nimport { ExportToActionHandler, ExportToAction } from './ExportToAction'\nclass WorkshopTablesActionNames {\n    static LOAD = \"load\"\n    static OPEN = \"open\"\n    static DELETE = \"delete\"\n    static EXPORT_TO = \"exportTo\"\n}\nconst WorkshopTablesHandlers = {\n    ...CommonHandlers,\n    [WorkshopTablesActionNames.LOAD]:LoadActionHandler,\n    [WorkshopTablesActionNames.OPEN]:OpenActionHandler,\n    [WorkshopTablesActionNames.DELETE]:DeleteActionHandler,\n    [WorkshopTablesActionNames.EXPORT_TO]:ExportToActionHandler,\n\n}\nconst WorkshopTablesActions = {\n    ...CommonActions,\n    [WorkshopTablesActionNames.LOAD]:LoadAction,\n    [WorkshopTablesActionNames.OPEN]:OpenAction,\n    [WorkshopTablesActionNames.DELETE]:DeleteAction,\n    [WorkshopTablesActionNames.EXPORT_TO]:ExportToAction,\n}\n\nfunction WorkshopTablesReducer(state, action) {\nreturn WorkshopTablesActions[action.type](state, action.data)    \n}\nexport { WorkshopTablesActionNames, WorkshopTablesReducer, WorkshopTablesHandlers }","import React, { useState, useRef, useEffect } from 'react';\nimport { Tree, Spin, Menu, Form, Modal, Input } from 'antd';\nimport { useReducerAsync } from 'use-reducer-async'\nimport { WorkshopTablesReducer, WorkshopTablesHandlers, WorkshopTablesActionNames } from './actions/WorkshopTablesReducer';\nimport { TableOutlined, DeleteOutlined, CloudUploadOutlined, FolderOpenOutlined, ContainerOutlined } from '@ant-design/icons'\nimport { useContextMenu } from '../../script_console/pages/ContextMenu';\nconst { TreeNode, DirectoryTree } = Tree;\nconst { SubMenu } = Menu;\n\nconst initState = {\n    dbs: {},\n    loading: false,\n    openTable: undefined,\n    confirm: false,\n    reloading: undefined,\n\n    exportTo: false,\n    exportTable: {\n        name: undefined,\n        type: undefined\n    }\n\n}\n\nconst WorkshopTablesContext = React.createContext()\n\nfunction WorkshopTables(props) {\n    const { workshop, reload: externalReload } = props\n    const [state, dispacher] = useReducerAsync(WorkshopTablesReducer, initState, WorkshopTablesHandlers)\n    const { dbs, loading, openTable, confirm, reloading,\n        exportTo, exportTable\n    } = state\n    const contextMenuRef = useRef()\n\n    const [exportForm] = Form.useForm()\n\n    const onRender = ({ rightClickNodeTreeItem, setRightClickNodeTreeItem, dispacher }) => {\n        const { id } = rightClickNodeTreeItem\n\n        return <Menu >\n            <Menu.Item icon={<FolderOpenOutlined />} onClick={() => {\n                dispacher({\n                    type: WorkshopTablesActionNames.OPEN,\n                    data: {\n                        openTable: id,\n                        workshop\n                    }\n                })\n                dispacher({\n                    type: \"setState\",\n                    data: {\n                        confirm: false\n                    }\n                })\n                setRightClickNodeTreeItem(undefined)\n            }} key={1}>Open Table</Menu.Item>\n\n            <SubMenu icon={<ContainerOutlined />} title=\"Export\">\n                <Menu.Item icon={<CloudUploadOutlined />} onClick={() => {\n                    dispacher({\n                        type: \"setState\",\n                        data: {\n                            exportTable: {\n                                name: id,\n                                type: \"hive\"\n                            },\n                            exportTo: true,\n                            workshop\n\n                        }\n                    })\n                    setRightClickNodeTreeItem(undefined)\n                }} key={1.1}>to Hive</Menu.Item>\n                <Menu.Item icon={<CloudUploadOutlined />} onClick={() => {\n                    dispacher({\n                        type: \"setState\",\n                        data: {\n                            exportTable: {\n                                name: id,\n                                type: \"delta\"\n                            },\n                            exportTo: true,\n\n                        }\n                    })\n                    setRightClickNodeTreeItem(undefined)\n                }} key={1.2}>to Delta</Menu.Item>\n                <Menu.Item icon={<CloudUploadOutlined />} onClick={() => {\n                    dispacher({\n                        type: \"setState\",\n                        data: {\n                            exportTable: {\n                                name: id,\n                                type: \"file\"\n                            },\n                            exportTo: true,\n                        }\n                    })\n                    setRightClickNodeTreeItem(undefined)\n                }} key={1.3}>to FileSystem</Menu.Item>\n            </SubMenu>\n\n            <Menu.Item onClick={() => {\n                dispacher({\n                    type: WorkshopTablesActionNames.DELETE,\n                    data: {\n                        id\n                    }\n                })\n                setRightClickNodeTreeItem(undefined)\n            }} key={2} icon={<DeleteOutlined />}>Delete</Menu.Item>\n        </Menu>\n    }\n    const { onRightClick: popContextMenu, ui: contextMenu } = useContextMenu({ contextMenuRef, dispacher, onRender })\n\n    useEffect(() => {\n        dispacher({\n            type: \"setState\",\n            data: { loading: true }\n        })\n        dispacher({\n            type: WorkshopTablesActionNames.LOAD,\n            data: {\n                loading: false\n            }\n        })\n    }, [reloading, externalReload])\n    return (\n        <WorkshopTablesContext.Provider value={{ dispacher }}>\n            <Modal\n                title={`Export to ${exportTable.type}`}\n                visible={exportTo}\n                onCancel={() => {\n                    dispacher({\n                        type: \"setState\",\n                        data: {\n                            exportTo: false\n                        }\n                    })\n                }}\n                onOk={() => {\n                    const { targetPath } = exportForm.getFieldsValue()\n                    exportForm.resetFields()\n                    dispacher({\n                        type: WorkshopTablesActionNames.EXPORT_TO,\n                        data: { exportTo: false, targetPath, workshop }\n                    })\n                }}\n                cancelText=\"Cancel\"\n                OkText=\"Ok\">\n                <Form form={exportForm}>\n                    <Form.Item rules={[\n                        {\n                            required: true,\n                            message: 'Target is required.',\n                        },\n                    ]}\n                        label=\"Target\"\n                        name=\"targetPath\">\n                        <Input />\n                    </Form.Item>\n                </Form>\n            </Modal>\n            <Modal\n                title={`Open Table`}\n                visible={confirm}\n                onCancel={() => {\n                    dispacher({\n                        type: \"setState\",\n                        data: {\n                            confirm: false\n                        }\n                    })\n                }}\n                onOk={() => {\n                    dispacher({\n                        type: \"dispatch\",\n                        data: { openTable }\n                    })\n                }}\n                cancelText=\"Cancel\"\n                OkText=\"Ok\">\n                {`Open ${openTable}?`}\n            </Modal>\n            <Spin tip=\"Loading...\" spinning={loading}>\n                {contextMenu()}\n                <DirectoryTree height={700} onDoubleClick={(evt, node) => {\n                    dispacher({\n                        type: WorkshopTablesActionNames.OPEN,\n                        data: {\n                            openTable: node.id,\n                            workshop\n                        }\n                    })\n                    dispacher({\n                        type: \"setState\",\n                        data: {\n                            confirm: false\n                        }\n                    })\n                }} onRightClick={popContextMenu}>\n                    {\n                        Object.entries(dbs).flatMap(([key, value]) => {\n                            return value.map(item => {\n                                return <TreeNode icon={<TableOutlined />} id={item} table={item} db={key} title={item} key={item} isLeaf />\n                            })\n                        })\n                    }\n                </DirectoryTree>\n            </Spin>\n        </WorkshopTablesContext.Provider>\n    )\n}\nexport { WorkshopTables, WorkshopTablesContext }","import * as React from \"react\";\nimport ActionMaker from \"../../../ActionMaker\"\nimport { ActionProxy } from \"../../../../backend_service/ActionProxy\"\nimport Tools from \"../../../../common/Tools\"\nimport { TableOutlined } from '@ant-design/icons'\n\nexport const { handler: LoadActionHandler, action: LoadAction } = ActionMaker.buildHandler(async (action) => {\n    const {dbName,node} = action.data\n    const proxy = new ActionProxy()\n    if(!dbName){        \n        let res = await proxy.runScript(`!profiler sql \"show databases\";`,Tools.getJobName(),Tools.robotFetchParam())                      \n        // res = {status:200,content:{ \"schema\":{\"type\":\"struct\",\"fields\":[{\"name\":\"databaseName\",\"type\":\"string\",\"nullable\":false,\"metadata\":{}}]},\"data\": [{\"databaseName\":\"adl\"}]}}\n        if (res.status === 200) {        \n            const dbs  = res.content.data.map(item=>{                \n                item[\"key\"] = item.databaseName || item.namespace\n                item[\"title\"] = item.key\n                item[\"isLeaf\"] = false\n                item[\"children\"] = []\n                return item\n            })\n            return {\n                data: {\n                    dbs,...action.data\n                }\n            }\n        }\n    }\n\n    if(dbName){\n        await proxy.runScript(`!profiler sql \"use ${dbName}\";`,Tools.getJobName(),Tools.robotFetchParam())    \n        let res = await proxy.runScript(`!profiler sql \"show tables\";`,Tools.getJobName(),Tools.robotFetchParam())                             \n        // res = {status:200,content:{ \"schema\":{\"type\":\"struct\",\"fields\":[{\"name\":\"database\",\"type\":\"string\",\"nullable\":false,\"metadata\":{}},{\"name\":\"tableName\",\"type\":\"string\",\"nullable\":false,\"metadata\":{}},{\"name\":\"isTemporary\",\"type\":\"boolean\",\"nullable\":false,\"metadata\":{}}]},\"data\": [{\"database\":\"adl\",\"tableName\":\"after_sale_df\",\"isTemporary\":false},{\"database\":\"adl\",\"tableName\":\"app_awake_di\",\"isTemporary\":false},{\"database\":\"adl\",\"tableName\":\"app_daily_active_user_com_di\",\"isTemporary\":false}]}}\n        if (res.status === 200) {        \n            const tables  = res.content.data.filter(item=>{\n                const db = item.database || item.namespace\n                return db === dbName\n            }).map(item=>{\n                item[\"key\"] = `${dbName}.${item.tableName}`\n                item[\"title\"] = item.tableName\n                item[\"isLeaf\"] = true\n                item[\"icon\"]=<TableOutlined />\n                return item\n            }) \n            const {dbs} = action.__state\n            const newdbs = dbs.map(db => {\n                if(db.key===dbName){\n                    db.children = tables\n                }\n                return db\n            });            \n            return {\n                data: {...action.data,dbs:newdbs}\n            }\n        }\n    }\n    \n\n    return {\n        data: {...action.data}\n    }\n})","import ActionMaker from \"../../../ActionMaker\"\nimport Tools from \"../../../../common/Tools\"\n\nexport const { handler: OpenActionHandler, action: OpenAction } = ActionMaker.buildHandler(async (action) => {\n    const { openTable, workshop, partitionValues,partitionColumn} = action.data\n    const [db, table] = openTable.split(\".\")\n\n    const { tableRandom, tableStart, tableEnd } = partitionValues\n    const partitionColumnName = partitionColumn && Tools.getField(partitionColumn)\n    if (partitionColumn && tableRandom) {\n        const inStr = partitionColumnName +\" in (\" + tableRandom.map(item=>`\"${Tools.escapeQuote(item)}\"`).join(\",\") + \")\"\n        workshop.newSession(\"hive\", db, table,{__where__: inStr})\n    }\n    else if (partitionColumn && tableStart && tableEnd) {\n        const con = `${partitionColumnName} >= ${Tools.quote(tableStart)} and ${Tools.quote(tableEnd)} >= ${partitionColumnName}  `\n        workshop.newSession(\"hive\", db, table,{__where__: con})\n    }else {\n        workshop.newSession(\"hive\", db, table) \n    }\n    return {\n        data: {}\n    }\n})","import React, { useState, useRef, useEffect, useCallback } from 'react';\nimport ActionMaker from \"../../../ActionMaker\"\nimport Tools from '../../../../common/Tools';\n\nconst loop = (data, searchValue) =>\n    data.map(item => {\n        const index = item.title.indexOf(searchValue);\n        const beforeStr = item.title.substr(0, index);\n        const afterStr = item.title.substr(index + searchValue.length);\n        const title =\n            index > -1 ? (\n                <span>\n                    {beforeStr}\n                    <span className=\"site-tree-search-value\">{searchValue}</span>\n                    {afterStr}\n                </span>\n            ) : (\n                    <span>{item.title}</span>\n                );\n\n        if (item.children) {\n            return { ...item, title, children: loop(item.children, searchValue) }\n        }\n\n        return { ...item, title }\n    });\n\nexport const { handler: SearchActionHandler, action: SearchAction } = ActionMaker.buildHandler(async (action) => {\n    const { dbs } = action.__state\n    const { searchValue } = action.data\n    if (!searchValue) {\n        return {\n            data: {\n                expandedKeys: [], search_dbs: dbs\n            }\n        }\n    }\n\n    let showKeys = []\n    let expandedKeys = dbs\n        .flatMap(item => {            \n            const wow = item.children?.map(sub => {\n                if (sub.title.indexOf(searchValue) > -1) {\n                    return item.key\n                }\n                return null\n            }).filter(item => item) || []\n\n            if(item.title.indexOf(searchValue) > -1){                  \n                showKeys.push(item.key)\n            }\n            return wow\n        })\n   \n    expandedKeys = Tools.distinct(expandedKeys)    \n    const search_dbs = loop(dbs, searchValue).filter(item => {\n        return expandedKeys.includes(item.key) || showKeys.includes(item.key)\n    })\n    return {\n        data: {\n            expandedKeys, search_dbs\n        }\n    }\n})","import { CommonHandlers,CommonActions} from '../../common/CommonHandlers'\nimport { LoadActionHandler,LoadAction } from './LoadAction'\nimport { OpenAction, OpenActionHandler } from './OpenAction'\nimport { SearchAction, SearchActionHandler } from './SearchAction'\nclass HiveTablesActionNames {\n    static LOAD = \"load\"\n    static OPEN = \"open\"\n    static SEARCH = \"search\"\n}\nconst HiveTablesHandlers = {\n    ...CommonHandlers,\n    [HiveTablesActionNames.LOAD]:LoadActionHandler,\n    [HiveTablesActionNames.OPEN]: OpenActionHandler,\n    [HiveTablesActionNames.SEARCH]: SearchActionHandler\n}\nconst HiveTablesActions = {\n    ...CommonActions,\n    [HiveTablesActionNames.LOAD]:LoadAction,\n    [HiveTablesActionNames.OPEN]: OpenAction,\n    [HiveTablesActionNames.SEARCH]: SearchAction\n}\n\nfunction HiveTablesReducer(state, action) {\nreturn HiveTablesActions[action.type](state, action.data)    \n}\nexport { HiveTablesActionNames, HiveTablesReducer, HiveTablesHandlers }","import React, { useState, useRef, useEffect, useCallback } from 'react';\nimport { Tree, Spin, Menu, Input, Modal } from 'antd';\nimport { useReducerAsync } from 'use-reducer-async'\nimport { HiveTablesReducer, HiveTablesHandlers, HiveTablesActionNames } from './actions/HiveTablesReducer';\nimport { TableOutlined, DeleteOutlined, FolderOpenOutlined } from '@ant-design/icons'\nimport { useContextMenu } from '../../script_console/pages/ContextMenu';\nimport AnalysisWorkshop from '../workshop';\nimport { FormattedMessage } from 'react-intl';\nimport { usePartitionSelect } from './pages/usePartitionSelect';\nconst { TreeNode, DirectoryTree } = Tree;\n\nconst initState = {\n    dbs: [],\n    loading: false,\n    openTable: undefined,\n    confirm: false,\n    reloading: undefined,\n    expandedKeys: []\n}\n\nconst HiveTablesContext = React.createContext()\n\nfunction HiveTables(props) {\n    const workshop = AnalysisWorkshop.workshop\n    const { reload: externalReload } = props\n    const [state, dispacher] = useReducerAsync(HiveTablesReducer, initState, HiveTablesHandlers)\n    const { dbs, loading, openTable, confirm, reloading,\n        search_dbs, expandedKeys\n    } = state\n\n    const { ui: PartitionSelect,\n        form: partitionForm,\n        setOpenTable: setOpenTableForPartition,\n        setError: setPartitionError,\n        partitionColumn,noPartition\n    } = usePartitionSelect()\n    const contextMenuRef = useRef()\n\n    const onRender = ({ rightClickNodeTreeItem, setRightClickNodeTreeItem, dispacher }) => {\n        const { id } = rightClickNodeTreeItem\n        console.log(id)\n        return <Menu >\n            <Menu.Item icon={<FolderOpenOutlined />} onClick={() => {\n                dispacher({\n                    type: \"setState\",\n                    data: {\n                        confirm: true,\n                        openTable: id\n                    }\n                })\n                setRightClickNodeTreeItem(undefined)\n            }} key={1}>Open Table</Menu.Item>\n        </Menu>\n    }\n    const { onRightClick: popContextMenu, ui: contextMenu } = useContextMenu({ contextMenuRef, dispacher, onRender })\n\n    useEffect(() => {\n        dispacher({\n            type: \"setState\",\n            data: { loading: true }\n        })\n        dispacher({\n            type: HiveTablesActionNames.LOAD,\n            data: {\n                loading: false\n            }\n        })\n    }, [reloading, externalReload])\n\n    useEffect(() => {\n        setOpenTableForPartition(openTable)\n    }, [setOpenTableForPartition, openTable])\n\n    return (\n        <HiveTablesContext.Provider value={{ dispacher }}>\n            <Modal\n                title={<FormattedMessage id=\"analysis_range\" />}\n                visible={confirm}\n                onCancel={() => {\n                    dispacher({\n                        type: \"setState\",\n                        data: {\n                            confirm: false\n                        }\n                    })\n                    partitionForm.resetFields()\n                }}\n                onOk={() => {\n                    const partitionValues = partitionForm.getFieldsValue()\n                    if (!noPartition && !partitionValues.tableRandom && !(partitionValues.tableStart && partitionValues.tableEnd)) {\n                        setPartitionError(\"Partitions is required.\")\n                        return\n                    }\n                    dispacher({\n                        type: HiveTablesActionNames.OPEN,\n                        data: {\n                            openTable,\n                            workshop,\n                            partitionValues,\n                            partitionColumn\n                        }\n                    })\n                    dispacher({\n                        type: \"setState\",\n                        data: {\n                            confirm: false\n                        }\n                    })\n                    partitionForm.resetFields()\n                }}\n                cancelText=\"Cancel\"\n                OkText=\"Ok\">\n                <PartitionSelect />\n            </Modal>\n            <Spin tip=\"Loading...\" spinning={loading}>\n                {contextMenu()}\n                <Input style={{ marginBottom: 8 }} placeholder=\"Search\" onChange={\n                    (e) => {\n                        dispacher({\n                            type: HiveTablesActionNames.SEARCH,\n                            data: { searchValue: e.target.value }\n                        })\n                    }\n                } />\n                <DirectoryTree height={700}\n                    expandedKeys={expandedKeys}\n                    treeData={search_dbs || dbs}\n                    loadData={\n                        async (node) => {\n                            dispacher({\n                                type: \"setState\",\n                                data: { loading: true }\n                            })\n                            dispacher({\n                                type: HiveTablesActionNames.LOAD,\n                                data: { dbName: node.key, node, loading: false }\n                            })\n                        }\n                    } expandAction=\"click\" onExpand={(expandedKeys) => {\n                        dispacher({\n                            type: \"setState\",\n                            data: { expandedKeys }\n                        })\n                    }} onDoubleClick={(evt, node) => {\n                        if (!node.isLeaf) {\n                            return\n                        }\n                        dispacher({\n                            type: \"setState\",\n                            data: {\n                                confirm: true,\n                                openTable: node.key\n                            }\n                        })\n                    }} onRightClick={({ event, node }) => {\n                        if (node.isLeaf) {\n                            popContextMenu({ event, node })\n                        }\n                    }}>\n                </DirectoryTree>\n            </Spin>\n        </HiveTablesContext.Provider>\n    )\n}\nexport { HiveTables, HiveTablesContext }","import React, { useState, useCallback, useEffect } from 'react';\nimport { Spin, Form, Divider, Select, Alert } from 'antd';\nimport { ActionProxy } from '../../../../backend_service/ActionProxy';\nimport { FormattedMessage } from 'react-intl';\nimport Tools from '../../../../common/Tools';\n\nfunction usePartitionSelect() {\n\n    const [openTable, setOpenTable] = useState(\"\")\n    const [loading, setLoading] = useState(false)\n    const [data, setData] = useState([])\n    const [error, setError] = useState(undefined)\n    const [partitionColumn, setPartitionColumn] = useState(undefined)\n    const [noPartition, setNoPartition] = useState(false)\n    const [form] = Form.useForm()\n    const proxy = new ActionProxy()\n\n    useEffect(() => {\n        const fetch = async () => {\n            if (!openTable) return\n            const [db, table] = openTable.split(\".\")\n            setLoading(true)\n            \n            const res = await proxy.runScript(`!profiler sql 'show partitions ${db}.${table}';`,\n              Tools.getJobName(),Tools.robotFetchParam()\n            )\n            if (res.status === 200) {\n                const data = res.content.data.map(item => {\n                    //dt=2020-08-03/hour=12                    \n                    const [column, value] = item.partition.split(\"/\")[0].split(\"=\")\n                    if (!partitionColumn) {\n                        setPartitionColumn(column)\n                    }\n                    return { column, value }\n                })\n                setData(data)\n                setNoPartition(false)\n                if (data.length === 0) {\n                    setNoPartition(true)\n                }\n                // if (false) {\n                //     setData([{ column: \"hp_stat_date\", value: \"2017-01-02\" }])\n                //     setPartitionColumn(\"hp_stat_date\")\n                //     setNoPartition(false)\n                // }\n\n            }else {\n                setData([])\n                setNoPartition(true)                \n            }\n            setLoading(false)\n        }\n        fetch()\n    }, [openTable])\n\n    const options = data.reverse().map(item => {\n        return <Select.Option value={item.value}>{item.value}</Select.Option>\n    })\n    const ui = () => {\n        return <>\n            <Spin spinning={loading}>\n                {error && <Alert style={{ marginBottom: \"30px\" }} type=\"error\" message={error} />}\n                {\n                    noPartition && <FormattedMessage id=\"no_partition_msg\" />\n                }\n                {\n                    !noPartition && <Form form={form}>\n                        <Form.Item name=\"tableStart\" label={<FormattedMessage id=\"table_start\" />}>\n                            <Select showSearch>\n                                {options}\n                            </Select>\n                        </Form.Item>\n                        <Form.Item name=\"tableEnd\" label={<FormattedMessage id=\"table_end\" />}>\n                            <Select showSearch>\n                                {options}\n                            </Select>\n                        </Form.Item>\n\n                        <Divider />\n                        <Form.Item name=\"tableRandom\" label={<FormattedMessage id=\"table_random\" />}>\n                            <Select mode=\"tags\">\n                                {options}\n                            </Select>\n                        </Form.Item>\n                    </Form>\n                }\n            </Spin>\n        </>\n    }\n    return { ui, form, setOpenTable, setError, partitionColumn, noPartition }\n}\nexport { usePartitionSelect }","import ActionMaker from \"../../../ActionMaker\"\nimport { ActionProxy } from \"../../../../backend_service/ActionProxy\"\nimport RemoteAction from \"../../../../backend_service/RemoteAction\"\nimport Tools from \"../../../../common/Tools\"\n\nexport const {handler:OpenMySQLTableActionHandler,action:OpenMySQLTableAction} = ActionMaker.buildHandler(async (action)=>{\n    const {partitionValues,openTable,partitionNumValue,workshop} = action.data\n    const [db,table] = openTable.split(\".\")\n    const {partitionColumn,lowerBound,upperBound} = partitionValues\n    const proxy = new ActionProxy()\n    \n    const connectRes = await proxy.get(RemoteAction.DS_MYSQL_CONNECT,{name:db}) \n    const tempTable = Tools.getTempTableName()\n    let whereBlock = \"\"\n    if(partitionColumn){         \n        whereBlock = `where partitionColumn=\"${partitionColumn}\" \n        and lowerBound=\"${lowerBound}\" \n        and upperBound=\"${upperBound}\"\n        and numPartitions=\"${partitionNumValue}\"\n        `\n    }\n\n    const sql = `\n      ${connectRes.content.connect}\n      load jdbc.\\`${openTable}\\` ${whereBlock} as ${tempTable};    \n    `\n    workshop.newSession(\"jdbc\", db, table,{__sql__: sql,__tableName__:tempTable})               \n\n    return {        \n        data: {\n            ...action.data\n        }\n    }\n})","import { CommonHandlers,CommonActions} from '../../common/CommonHandlers'\nimport { OpenMySQLTableActionHandler, OpenMySQLTableAction } from './OpenMySQLTableAction'\nclass MysqlTreeActionNames {\n    static OPEN = \"open\"\n}\nconst MysqlTreeHandlers = {\n    ...CommonHandlers,\n    [MysqlTreeActionNames.OPEN]:OpenMySQLTableActionHandler\n}\nconst MysqlTreeActions = {\n    ...CommonActions,\n    [MysqlTreeActionNames.OPEN]:OpenMySQLTableAction\n}\n\nfunction MysqlTreeReducer(state, action) {\nreturn MysqlTreeActions[action.type](state, action.data)    \n}\nexport { MysqlTreeActionNames, MysqlTreeReducer, MysqlTreeHandlers }","import React, { useState, useCallback, useEffect } from 'react';\nimport { Slider, InputNumber, Row, Col } from 'antd';\n\n\n\nfunction useIntegerStep(props) {\n    const [value,setValue] = useState(props.initialValue || 10)\n    const ui =  ()=>(\n        <Row>\n        <Col span={12}>\n          <Slider\n            min={props.min||10}\n            max={props.max||300}\n            onChange={(value)=>{setValue(value)}}\n            value={value}\n          />\n        </Col>\n        <Col span={4}>\n          <InputNumber\n            min={props.min||10}\n            max={props.max||300}\n            style={{ margin: '0 16px' }}\n            value={value}\n            onChange={(value)=>{setValue(value)}}\n          />\n        </Col>\n      </Row> \n    )\n    return {ui,value}\n}\nexport {useIntegerStep}","import React, { useState, useCallback, useEffect } from 'react';\nimport { Spin, Form, Divider, Select, Alert, Input } from 'antd';\nimport { ActionProxy } from '../../../../backend_service/ActionProxy';\nimport { FormattedMessage } from 'react-intl';\nimport { useIntegerStep } from '../../common/pages/useIntegerStep';\nimport Tools from '../../../../common/Tools';\nimport RemoteAction from '../../../../backend_service/RemoteAction';\n\nfunction useMySQLPartition() {\n\n    const [openTable, setOpenTable] = useState(\"\")\n    const [loading, setLoading] = useState(false)\n    const [data, setData] = useState([])\n    const [error, setError] = useState(\"\")\n    const [column, setColumn] = useState(\"\")\n    const [form] = Form.useForm()\n    const proxy = new ActionProxy()\n\n    const { ui: partitionNumUI, value: partitionNumValue } = useIntegerStep({\n        initialValue: 10,\n        min: 2,\n        max: 100\n    })\n\n    useEffect(() => {\n        if (openTable) {\n            const [db, table] = openTable.split(\".\")\n            const tempTable = Tools.getTempTableName()\n            const fetch = async () => {                 \n                const res = await proxy.runScript(`                \n                load jdbc.\\`${openTable}\\` as ${tempTable};\n                !desc ${tempTable};\n               `, Tools.getJobName(), {...Tools.robotFetchParam(),__connect__:db})\n               if(res.status===200){\n                  setData(res.content.data)\n               }else {\n                   setData([])\n               }\n            }\n            fetch()\n        }\n    }, [openTable])\n\n   useEffect(()=>{\n       if(column){\n         const fetch = async ()=>{\n             const [db, table] = openTable.split(\".\")\n\n             const res = await proxy.get(RemoteAction.DS_MYSQL_COLUMN_INFO,{\n                dbName:db,tableName:table, columnName:column\n             }) \n             if(res.status === 200){                 \n                 form.setFieldsValue({\n                    lowerBound: res.content.min,\n                    upperBound: res.content.max\n                 })\n             } \n         }\n         fetch()\n       }\n   },[column,openTable])\n\n    //\n    const options = data.filter(item=>item.data_type !== \"string\").map(item => {\n        return <Select.Option value={item.col_name}>{item.col_name}</Select.Option>\n    })\n    const ui = () => {\n        if(options.length === 0){\n            return <><FormattedMessage id=\"no_mysql_parallel\"/></>\n        }\n        return <>\n            <Spin spinning={loading}>\n                {error && <Alert style={{ marginBottom: \"30px\" }} type=\"error\" message={error} />}\n                <Form form={form}>\n                    <Form.Item name=\"partitionColumn\" label={<FormattedMessage id=\"partitionColumn\" />}>\n                        <Select onChange = {(value)=>{                            \n                            setColumn(value) \n                        }}>\n                            {options}\n                        </Select>\n                    </Form.Item>\n                    <Form.Item name=\"lowerBound\" label={<FormattedMessage id=\"lowerBound\" />}>\n                        <Input />\n                    </Form.Item>\n\n                    <Divider />\n                    <Form.Item name=\"upperBound\" label={<FormattedMessage id=\"upperBound\" />}>\n                        <Input />\n                    </Form.Item>\n                    <Form.Item name=\"numPartitions\" label={<FormattedMessage id=\"numPartitions\" />}>\n                        {partitionNumUI()}\n                    </Form.Item>\n                </Form>\n            </Spin>\n        </>\n    }\n    return { ui, form, setOpenTable, setError,partitionNumValue }\n}\nexport { useMySQLPartition }","import React, {  useRef, useEffect } from 'react';\nimport { useReducerAsync } from 'use-reducer-async'\nimport { MysqlTreeReducer, MysqlTreeHandlers, MysqlTreeActionNames } from '../actions/MysqlTreeReducer';\nimport { useContextMenu } from '../../../script_console/pages/ContextMenu';\nimport { Menu,Spin,Tree,Modal } from 'antd';\nimport { ActionProxy } from '../../../../backend_service/ActionProxy';\nimport RemoteAction from '../../../../backend_service/RemoteAction';\nimport { FolderOpenOutlined, TableOutlined } from '@ant-design/icons';\nimport { useMySQLPartition } from './useMySQLPartition';\nimport AnalysisWorkshop from '../../workshop';\nimport { FormattedMessage } from 'react-intl';\n\nconst {DirectoryTree} = Tree\nconst initState = {\n    dbs: [],    \n    loading:false,\n    confirm:false,\n    openTable: undefined,\n    error: undefined     \n}\n\nconst MysqlTreeContext = React.createContext()\n\nfunction MysqlTree() {\n    const workshop = AnalysisWorkshop.workshop\n    const [state, dispacher] = useReducerAsync(MysqlTreeReducer, initState, MysqlTreeHandlers)\n    const {dbs,loading,confirm,openTable,error} = state\n\n    const {ui:PartitionUI,form:partitionForm,setOpenTable,setError:setPartitionError,partitionNumValue} = useMySQLPartition()\n\n    const contextMenuRef = useRef()\n\n    const onRender = ({ rightClickNodeTreeItem, setRightClickNodeTreeItem, dispacher }) => {\n        const { id } = rightClickNodeTreeItem        \n        return <Menu >\n            <Menu.Item icon={<FolderOpenOutlined />} onClick={() => {\n                dispacher({\n                    type: \"setState\",\n                    data: {\n                        confirm: true,\n                        openTable: id\n                    }\n                })\n                setRightClickNodeTreeItem(undefined)\n            }} key={1}>Open Table</Menu.Item>\n        </Menu>\n    }\n    const { onRightClick: popContextMenu, ui: contextMenu } = useContextMenu({ contextMenuRef, dispacher, onRender })\n\n    useEffect(() => {\n        const fetch = async () => {\n            dispacher({\n                type: \"setState\",\n                data: { loading: true }\n            })\n            const proxy = new ActionProxy()\n            const res = await proxy.get(RemoteAction.DS_MYSQL_DBS, {})\n            if (res.status === 200) {\n                const treeData = res.content.data.map(item=>{\n                    item.key = item.name\n                    item.title = item.name\n                    item.isLeaf = false\n                    item.children = item.tables.map(table=>{\n                        return {\n                            id: `${item.name}.${table.name}`,\n                            key: `${item.name}.${table.name}`,\n                            title: table.name + (!table.options.indexer?\"\":\"(已被索引)\"),\n                            isLeaf: true,\n                            icon: <TableOutlined/>\n                        }\n                    })\n                    return item\n                })\n                dispacher({\n                    type: \"setState\",\n                    data: { dbs: treeData}\n                })                \n            }\n\n            dispacher({ \n                type: \"setState\",               \n                data: { loading:false}\n            }) \n        }\n        fetch()\n    }, [])\n\n    useEffect(()=>{\n        setOpenTable(openTable)\n    },[openTable,setOpenTable])\n   \n\n    return (\n        <div className=\"leftview-box\">\n        <MysqlTreeContext.Provider value={{ dispacher }}> \n        <Modal\n                title={<FormattedMessage id=\"mysql_parallel\" />}\n                visible={confirm}\n                onCancel={() => {\n                    dispacher({\n                        type: \"setState\",\n                        data: {\n                            confirm: false\n                        }\n                    })\n                    partitionForm.resetFields()\n                }}\n                onOk={() => {\n                    const partitionValues = partitionForm.getFieldsValue()\n                    const {partitionColumn,lowerBound,upperBound} = partitionValues\n                    if(partitionColumn){\n                        if(!lowerBound || !upperBound && partitionNumValue){\n                            setPartitionError(\"lowerBound/upperBound/partitionNumValue should not be empty.\")\n                            return\n                        }\n                    }\n                    \n                    dispacher({\n                        type: MysqlTreeActionNames.OPEN,\n                        data: {\n                            openTable,\n                            workshop,\n                            partitionValues,\n                            partitionNumValue                            \n                        }\n                    })\n                    dispacher({\n                        type: \"setState\",\n                        data: {\n                            confirm: false\n                        }\n                    })\n                    partitionForm.resetFields()\n                }}\n                cancelText=\"Cancel\"\n                OkText=\"Ok\">\n                <PartitionUI />\n            </Modal>           \n           <Spin tip=\"Loading...\" spinning={loading}>\n                {contextMenu()}                \n                <DirectoryTree height={700}                   \n                    treeData={dbs}\n                    expandAction=\"click\" \n                    onDoubleClick={(evt, node) => {\n                        if (!node.isLeaf) {\n                            return\n                        }                        \n                        dispacher({\n                            type: \"setState\",\n                            data: {\n                                confirm: true,\n                                openTable: node.key\n                            }\n                        })\n                    }} onRightClick={({ event, node }) => {\n                        if (node.isLeaf) {\n                            popContextMenu({ event, node })\n                        }\n                    }}>\n                </DirectoryTree>\n            </Spin>  \n        </MysqlTreeContext.Provider>\n        </div>\n    )\n}\nexport { MysqlTree, MysqlTreeContext }","import * as React from \"react\";\nimport { Tabs } from 'antd';\nimport AFileSystemTree from \"./AFileSystemTree\";\nimport ADeltaLakeTree from \"./ADeltaLakeTree\";\nimport \"./leftview.scss\"\nimport { FormattedMessage } from 'react-intl'\nimport { WorkshopTables } from \"./workshop_tables/WorkshopTables\";\nimport { HiveTables } from \"./hive/HiveTables\";\nimport { ActionProxy } from \"../../backend_service/ActionProxy\";\nimport RemoteAction from \"../../backend_service/RemoteAction\";\nimport { MysqlTree } from \"./datasource/pages/MysqlTree\";\n\nconst { TabPane } = Tabs;\nexport default class LeftView extends React.Component {\n    constructor(props) {\n        super(props)\n        this.workshop = props.parent\n        this.state = {\n            reloaWorkshop: undefined\n        }\n    }\n\n    render() {\n        return <Tabs defaultActiveKey=\"1\" onTabClick={(key) => {\n            if (key === \"3\") {\n                if (this.deltaLakeTreeRef) {\n                    this.deltaLakeTreeRef.reload()\n                }\n            }\n            if (key === \"4\") {\n                if (this.fileSystemTreeRef) {\n                    this.fileSystemTreeRef.reload()\n                }\n            }\n        }}>\n            <TabPane tab={<FormattedMessage id=\"table_workshop\" />} key=\"1\">\n                <div className=\"leftview-box\" >\n                    <WorkshopTables reload={this.state.reloaWorkshop} workshop={this.workshop}></WorkshopTables>\n                </div>\n            </TabPane>\n\n            <TabPane tab={<FormattedMessage id=\"hive\" />} key=\"2\">\n                <div className=\"leftview-box\" >\n                    <HiveTables />\n                </div>\n            </TabPane>\n\n            <TabPane tab={<FormattedMessage id=\"delta_lake\" />} key=\"3\">\n                <div className=\"leftview-box\" >\n                    <ADeltaLakeTree ref={(et) => this.deltaLakeTreeRef = et} parent={this}></ADeltaLakeTree>\n                </div>\n            </TabPane>\n            <TabPane tab={<FormattedMessage id=\"file_system\" />} key=\"4\">\n                <div className=\"leftview-box\">\n                    <AFileSystemTree ref={(et) => this.fileSystemTreeRef = et} parent={this}></AFileSystemTree>\n                </div>\n            </TabPane>\n            <TabPane tab={<FormattedMessage id=\"mysql\" />} key=\"5\">\n                <MysqlTree />\n            </TabPane>\n        </Tabs>\n    }\n}","import Tools from '../../common/Tools';\nimport EngineService from '../service/EngineService';\n\nconst uuidv4 = require('uuid/v4');\nexport const WorkshopOp = (superclass) => class extends superclass {\n\n    newSession = async (prefix, db, table, options) => {\n        this.showTable(prefix, db, table, options)\n        return this\n    }\n\n    buildLoadSQL = async (prefix, db, table, options) => {\n        let tableName = Tools.getTempTableName()\n\n        let dbPrefix = `${db}.`\n\n        if (!db) {\n            dbPrefix = \"\"\n        }\n\n        let whereBlock = \"where \"\n        if (options) {\n            whereBlock = whereBlock + Object.keys(options).\n                filter(k => \n                    k !== \"__where__\" \n                    && k !== \"__sql__\"\n                    && k !== \"__tableName__\"\n                    ).\n                map(k => {\n                    const v = options[k]\n                    return `${k.replace(/\\[group\\]/g, '0')}='''${v}'''`\n                }).join(\" and \")\n            if (whereBlock === \"where \") {\n                whereBlock = \"\"\n            }\n        } else whereBlock = \"\"\n\n        // let sql = `select * from ${dbPrefix}${table} as ${tableName};`\n        let sql = `load ${prefix}.\\`${db}.${table}\\` ${whereBlock} as ${tableName};`\n\n        if (prefix === \"delta\") {\n            sql = `load delta.\\`${db}.${table}\\` ${whereBlock} as ${tableName};`\n        }\n\n        if(prefix === \"jdbc\"){\n            sql = options.__sql__ || `load jdbc.\\`${db}.${table}\\` ${whereBlock} as ${tableName};` \n            tableName = options.__tableName__ || tableName\n        }\n\n        if (prefix === \"temp\") {\n            const res = await EngineService.tableInfo(table)\n            const tableInfo = res.content\n            if (tableInfo.status === 200) {\n                sql = `load parquet.\\`/__persisted__/${tableInfo.tableName}\\`  as ${Tools.getField(tableInfo.tableName)};\n                select * from ${Tools.getField(tableInfo.tableName)} as ${tableName};`\n            } else {\n                sql = `${tableInfo.content} \n                select * from ${Tools.getField(tableInfo.tableName)} as ${tableName};`\n            }\n        }\n\n        if (prefix === \"file\") {\n            sql = `load ${db}.\\`${table}\\` ${whereBlock}  as ${tableName};`\n        }\n\n        if (prefix === \"hive\") {\n            let _whereBlock = \"where \"\n            if (options && options.__where__) {\n                _whereBlock = _whereBlock + options.__where__\n            } else _whereBlock = \"\"\n\n            const tempTableName = Tools.getTempTableName()\n            sql = `load hive.\\`${db}.${table}\\` ${whereBlock} as ${tempTableName};`\n            sql = sql + `select * from ${tempTableName} ${_whereBlock} as ${tableName};`\n        }\n\n        return { sql, tableName }\n    }\n    showTable = async (prefix, db, table, options) => {\n\n        //an new session,clear the sqls\n        this.sqls = []\n\n        const { tableName, sql } = await this.buildLoadSQL(prefix, db, table, options)\n\n        this.sqls.push({ tableName, sql })\n        this.setState({ loadingTable: true })\n\n        const res = await this.client.runScript(\n            sql,\n            Tools.getJobName(),\n            Tools.robotFetchParam())\n        this.setState({ loadingTable: false })\n        if (res.status !== 200) {\n            this.toggleMessage(`Fail to load ${tableName}: ${res.content}`)\n            return\n        }\n        const { schema, data } = res.content\n        this.setCurrentTable(\"\", \"\", tableName, schema, data)\n        this.sessionId = Tools.getJobName()\n        this.setState({ sessionId: this.sessionId })\n    }\n\n    setCurrentTable = (prefix, db, table, schema, data) => {\n        this.currentTable = { prefix, db, table, schema, data }\n        this.updateDisplay(data, schema)\n    }\n\n}","import Tools from \"../../common/Tools\"\nimport RemoteAction from \"../../backend_service/RemoteAction\"\n\nexport const WorkshopAutoSql = (superclass) => class extends superclass {\n   getLastApplyTable = () => {\n      return this.sqls[this.sqls.length - 1]\n   }\n\n   rollback = async (params) => {\n      if (this.sqls.length < 2) {\n         this.toggleMessage(\"No apply to rollback.\")\n         return\n      }\n      const removeTable = this.sqls.pop()\n      const currentTable = this.sqls.pop()\n      const res = await this.client.get(RemoteAction.APPLY_GET, { name: currentTable.tableName })\n      if (res.status === 200) {\n         const { data, schema } = JSON.parse(res.content.response)\n         await this.apply({ ...currentTable, _data: data, _schema: schema })\n      }\n      else {\n         await this.apply(currentTable)\n      }\n\n   }\n\n   runSQLAtCurrentTable = async (sql,params) => {      \n      const view = this.sqls.map(item => item.sql).join(\"\")\n      const res = await this.client.runScript(\n         `${view}\n          ${sql}`,\n         Tools.getJobName(),\n         { ...Tools.robotFetchParam(), ...params })\n      return res\n   }\n\n   /**\n   * generate sql\n   */\n   apply = async (params) => {\n      const { tableName, sql, _data, _schema } = params\n      this.sqls.push({tableName,sql})\n\n      if (_data && _schema) {\n         this.setCurrentTable(\"\", \"\", tableName, _schema, _data)\n         return 200\n      }\n\n      const view = this.sqls.map(item => item.sql).join(\"\")\n      try {\n         const res = await this.client.runScript(view, Tools.getJobName(), {\n            ...Tools.robotFetchParam(),\n            queryType: \"analysis_workshop_apply_action\",\n            analysis_workshop_table_name: tableName,\n            analysis_workshop_sql: JSON.stringify(this.sqls)\n         })\n         if (res.status !== 200) {\n            this.sqls.pop()\n            this.toggleMessage(res.content)\n            return 500\n         }\n         const { data, schema } = res.content\n         this.setCurrentTable(\"\", \"\", tableName, schema, data)\n         return 200\n      } catch (e) {\n         this.toggleMessage(\"Execute job fail;(Job is killed)\")\n         return 500\n      }\n   }\n\n   save = async (tableName, persist) => {\n      if (this.sqls.length === 0) {\n         this.toggleMessage(\"Sorry, current session have no applies.\")\n         return 500\n      }\n      const sql = `select * from ${Tools.getField(this.getLastApplyTable().tableName)} as ${Tools.getField(tableName)};`\n      this.sqls.push({ tableName, sql })\n      const finalSql = this.sqls.map(item => item.sql).join(\"\\n\")\n\n      const persistJobName = Tools.getJobName()\n      let extraParams = { status: 5 }// 5 view\n      if (persist) {\n         const persistSQL = `${finalSql}\n         save overwrite ${tableName} as parquet.\\`/__persisted__/${tableName}\\`;`\n\n         await this.client.runScript(persistSQL, persistJobName, {\n            persistJobName,\n            async: true\n         })\n         extraParams = { jobName: persistJobName, status: 1 }// 1 running\n      }\n\n      const res = await this.client.post(RemoteAction.ANALYSIS_SAVE, Object.assign({\n         tableName,\n         sql: finalSql,\n         sessionId: this.sessionId,\n         schema: JSON.stringify(this.currentTable.schema),\n      }, extraParams))\n\n      return res.status\n   }\n}","import * as React from \"react\";\nimport { Menu, Button, Modal, Form, Input, FuncDesc, Switch } from 'antd';\nimport './ApplyOrSave.scss'\n\nconst { SubMenu } = Menu;\nexport default class ApplyOrSave extends React.Component {\n    constructor(props) {\n        super(props)\n        this.props = props\n        this.state = { applyLoading: false,saveDiagram:false }\n        this.workshop = props.parent.workshop\n    }\n    enter = () => {        \n        this.setState({ applyLoading: true })\n        this.workshop.setState({tableLoading:true})\n    }\n    exit = () => {\n        this.setState({ applyLoading: false })\n        this.workshop.setState({tableLoading:false})\n    }\n\n    showSaveDiagram = ()=>{\n      this.toggle()\n    }\n\n    toggle = () => {\n        this.setState({ saveDiagram: !this.state.saveDiagram })\n    }\n    \n    handleTableInput = ()=>{}\n    handlePersit = ()=>{}\n\n    render() {\n        return <div style={this.props.style} className={this.props.className || \"aos-box\"}>\n            <Modal title={\"View\"}\n                visible={this.state.saveDiagram}\n                onCancel={this.toggle}\n                onOk={this.props.onSave}\n                cancelText=\"Cancel\"\n                width=\"50%\"\n                OkText=\"Ok\">\n                <Form className=\"login-form\">\n                    <Form.Item><Input addonBefore=\"tableName\" onChange={this.props.handleTableInput || this.handleTableInput} placeholder=\"\" /></Form.Item>\n                    <Form.Item label=\"Persist table(take more space):\"><Switch onChange={this.props.handlePersit || this.handlePersit}></Switch></Form.Item>\n                </Form>\n            </Modal>\n            <div className=\"aos-button\"><Button loading={this.state.applyLoading} onClick={this.props.onApply} type=\"primary\">Apply</Button></div>\n            <div className=\"aos-button\"><Button disabled={this.state.applyLoading} onClick={this.toggle} type=\"primary\">Save As</Button></div>\n            <div className=\"aos-button\"><Button disabled={this.state.applyLoading} onClick={this.props.onRollback} >Rollback</Button></div>\n        </div>\n    }\n}","export const StationCommonOp = (superclass) => class extends superclass {\n    onSave = async ()=>{               \n        const status = await this.workshop.save(this.tableNameForSave,this.persistForSave)   \n        if(status===200){\n            this.workshop.refreshOperateStation()\n            this.workshop.refreshTableWorkshop()\n        }\n     }\n\n     onRollback = async ()=>{         \n      this.ApplyOrSaveRef.enter()              \n      const status = await this.workshop.rollback()   \n      if(status===200){\n          this.workshop.refreshOperateStation()\n          this.workshop.refreshTableWorkshop()\n      }\n      this.ApplyOrSaveRef.exit()\n    }\n\n     handleTableInput = (tableName)=>{         \n        this.tableNameForSave = tableName.target.value\n     }\n     handlePersit=(checked)=>{\n        this.persistForSave = checked\n     }\n\n     \n}","import * as React from \"react\";\nimport { Form, Select, Button } from 'antd'\nimport EngineService from \"../../service/EngineService\";\nconst { Option } = Select;\nexport default class SelectJoinField extends React.Component {\n    constructor(props) {\n        super(props)\n        this.workshop = props.parent.workshop\n        this.joinStation = props.parent\n        this.currentTable = this.joinStation.joinInfo.currentTable.table\n        this.joinTable = this.joinStation.joinInfo.joinTable\n        this.state = {\n            currentTableFields: [],\n            joinTableFields: []\n        }\n    }\n    reload = async () => {\n        const currentTableSchema = this.joinStation.joinInfo.currentTable.schema\n        const joinTable = await EngineService.tableInfo(this.joinTable)\n        if (joinTable.status === 200) {\n            this.setState({\n                currentTableFields: currentTableSchema.fields,\n                joinTableFields: JSON.parse(joinTable.content.tableSchema).fields\n            })\n        }\n    }\n    componentDidMount = async () => {\n        await this.reload()\n    }\n\n    next = (values) => {\n        this.joinStation.joinInfo = Object.assign(this.joinStation.joinInfo, values)\n        this.joinStation.next()\n    }\n    render = () => {\n        return <Form className=\"login-form\" onFinish={this.next}>\n            <Form.Item name=\"leftField\" rules={[{ required: true, message: 'Please select condition field!' }]}>\n                <Select\n                    label=\"Current Table\"\n                    showSearch\n                    style={{ width: 200 }}\n                    placeholder={this.currentTable}\n                    optionFilterProp=\"children\"\n                    filterOption={(input, option) =>\n                        option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                    }\n                >\n                    {this.state.currentTableFields.map(item => {\n                        return <Option key={item.name} value={item.name}>{item.name}</Option>\n                    })}\n                </Select>\n            </Form.Item>\n            <Form.Item name=\"rightField\" rules={[{ required: true, message: 'Please select condition field!' }]}>\n                <Select\n                    label=\"Join Table\"\n                    showSearch\n                    style={{ width: 200 }}\n                    placeholder={this.joinTable}\n                    optionFilterProp=\"children\"\n                    filterOption={(input, option) =>\n                        option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                    }\n                >\n                    {this.state.joinTableFields.map(item => {\n                        return <Option key={item.name} value={item.name}>{item.name}</Option>\n                    })}\n                </Select>\n            </Form.Item>\n            <Form.Item>\n                <Button type=\"primary\" htmlType=\"submit\">\n                    Next\n                </Button>\n            </Form.Item>\n        </Form>\n\n    }\n}","import * as React from \"react\";\nimport { Transfer,Input } from 'antd';\nexport default class SelectFields extends React.Component {\n  constructor(props) {\n    super(props)\n    this.workshop = props.parent.workshop       \n    this.state = this.wow(props)\n  }\n   \n  \n  wow(props){\n    const schemaFields = props.schemaFields.map(item=>{\n      return {\n        title:item.name,\n        key: item.name,                     \n      }\n    })\n    const targetKeys = [];\n    const data = schemaFields; \n    return {data,targetKeys}\n  }\n\n  componentDidUpdate(prevProps) {\n    // Typical usage (don't forget to compare props):\n    if (this.props.schemaFields !== prevProps.schemaFields) {\n        this.setState({...this.wow(this.props)})\n    }\n  }\n\n  filterOption = (inputValue, option) => option.title.indexOf(inputValue) > -1;\n\n  handleChange = targetKeys => {\n    this.setState({ targetKeys });\n    if(this.props.handleChange){\n      this.props.handleChange({ targetKeys })\n    }\n  }\n\n  getSelectFields = ()=>{\n    return this.state.targetKeys || []\n  }\n\n \n  render() {\n    return <div style={{marginBottom:\"30px\"}}>\n      <Transfer\n    listStyle={{\n      width: 400,\n      height: 300,\n    }}\n    dataSource={this.state.data}\n    showSearch\n    filterOption={this.filterOption}\n    targetKeys={this.state.targetKeys}\n    onChange={this.handleChange}\n    // onSearch={this.handleSearch}    \n    render={item => item.title}\n  />\n    </div>\n  }\n}","import * as React from \"react\";\nimport SelectFields from \"../project/SelectFields\"\nimport EngineService from \"../../service/EngineService\";\nimport { Button, Form } from \"antd\";\n\nexport default class SelectProjectFields  extends React.Component{\n    constructor(props) {\n        super(props)\n        this.workshop = props.parent.workshop        \n        this.joinStation = props.parent\n        this.currentTable = this.joinStation.joinInfo.currentTable.table        \n        this.joinTable = this.joinStation.joinInfo.joinTable\n        this.state = {\n            currentTableFields:[],\n            joinTableFields:[] \n        }\n    }\n\n    reload = async () => {\n        const currentTableSchema = this.joinStation.joinInfo.currentTable.schema                \n        const joinTable = await EngineService.tableInfo(this.joinTable)    \n        if (joinTable.status === 200) {\n            this.setState({\n                currentTableFields: currentTableSchema.fields,\n                joinTableFields: JSON.parse(joinTable.content.tableSchema).fields\n            })            \n        }\n    }\n\n    componentDidMount = async () => {\n        await this.reload()\n    }\n    \n    handleLeft = (targetKeys)=>{        \n        this.joinStation.joinInfo = Object.assign(this.joinStation.joinInfo, {\n            leftProjectFields: targetKeys.targetKeys\n        })        \n    }\n\n    handleRight = (targetKeys)=>{                \n        this.joinStation.joinInfo = Object.assign(this.joinStation.joinInfo, {\n            rightProjectFields:targetKeys.targetKeys\n        })        \n    }\n\n    reset = ()=>{\n        this.joinStation.parent.reload()\n    } \n\n    render = () => {        \n        return <Form  labelCol={ { span: 6 }}>            \n            <Form.Item name=\"leftProjectFields\" label=\"currentTable\">\n            <SelectFields handleChange={this.handleLeft} schemaFields={this.state.currentTableFields} ref={(et) => this.leftProjectFields = et} parent={this}></SelectFields>\n            </Form.Item>\n                        \n            <Form.Item name=\"rightProjectFields\" label={this.joinTable+\"\"}>\n            <SelectFields  handleChange={this.handleRight}  schemaFields={this.state.joinTableFields} ref={(et) => this.rightProjectFields = et} parent={this}></SelectFields>\n            </Form.Item>\n            \n            <Form.Item>            \n            <Form.Item> <Button danger>Reset</Button></Form.Item>\n            </Form.Item>\n        </Form>\n    }\n}","import * as React from \"react\";\nimport { Form, Select, Button } from 'antd'\nimport EngineService from \"../../service/EngineService\"\n\nconst { Option } = Select;\nexport default class SelectJoinTable extends React.Component {\n    constructor(props) {\n        super(props)\n        this.workshop = props.parent.workshop\n        this.joinStation = props.parent\n        this.state = {\n            tables: []\n        }\n    }\n\n    reload = async () => {\n        const res = await EngineService.tablesInWorkshop()\n        let tables = []\n        if (res.status === 200) {\n            tables = res.content.map(item => {\n                return {\n                    name: item.tableName,\n                    value: item.tableName\n                }\n            })\n        }\n        this.setState({ tables })\n    }\n\n    componentDidMount = async () => {\n        await this.reload()\n    }\n\n    next = (values)=>{\n\n        this.joinStation.joinInfo = Object.assign(this.joinStation.joinInfo,values) \n        this.joinStation.next()\n    }\n   \n\n    render = () => {\n        return (<Form className=\"login-form\" onFinish={this.next}>\n            <Form.Item name=\"joinType\" rules={[{ required: true, message: 'Please select join type!' }]}>\n                <Select                    \n                    showSearch\n                    style={{ width: 200 }}\n                    placeholder=\"Select Join Type\"\n                    optionFilterProp=\"children\"\n                    filterOption={(input, option) =>\n                        option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                    }\n                >\n                    <Option key=\"inner\" value=\"inner join\">Inner Join</Option>\n                    <Option key=\"left\" value=\"left join\">Left Join</Option>\n                    <Option key=\"right\" value=\"right join\">Right Join</Option>\n                    <Option key=\"full\" value=\"full join\">Full Join</Option>\n                </Select>\n            </Form.Item>\n\n            <Form.Item name=\"joinTable\" rules={[{ required: true, message: 'Please select join table!' }]}>\n                <Select                    \n                    showSearch\n                    style={{ width: 200 }}\n                    placeholder=\"Choose Join Table\"\n                    optionFilterProp=\"children\"\n                    filterOption={(input, option) =>\n                        option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                    }\n                >\n                    {this.state.tables.map((item) => {\n                        return <Option key={item.name} value={item.value}>{item.name}</Option>\n                    })}\n                </Select>\n            </Form.Item>\n            \n            <Form.Item>\n                <Button type=\"primary\" htmlType=\"submit\">\n                    Next\n                </Button>\n            </Form.Item>\n        </Form>)\n    }\n}","import * as React from \"react\";\nimport mix from \"../../../common/mixin\"\nimport { Form, Select, Steps } from 'antd';\nimport ApplyOrSave from \"../ApplyOrSave\";\n\nimport { StationCommonOp } from \"../commonops/StationCommonOp\";\nimport \"./JoinStation.scss\"\nimport SelectJoinField from \"./SelectJoinField\";\nimport SelectProjectFields from \"./SelectProjectFields\";\nimport SelectJoinTable from \"./SelectJoinTable\"\nimport styled from \"styled-components\"\nimport Tools from \"../../../common/Tools\";\nimport EngineService from \"../../service/EngineService\";\n\nconst { Step } = Steps;\nconst StepContent = styled.div`\nborder: 1px dashed #e9e9e9;\nborder-radius: 6px;\nbackground-color: #fafafa;\nmin-height: 200px;\ntext-align: center;\npadding-top: 80px;\nwidth: 100%;\n`\n\nclass JoinStation extends mix(React.Component).with(\n    StationCommonOp\n) {\n    constructor(props) {\n        super(props)\n        this.workshop = props.parent.workshop\n        this.joinInfo = { currentTable: this.workshop.currentTable }\n        this.state = {\n            currentStep: 0,\n            steps: [\n                <SelectJoinTable parent={this}></SelectJoinTable>,\n                <SelectJoinField parent={this}></SelectJoinField>,\n                <SelectProjectFields parent={this}></SelectProjectFields>]\n        }\n    }\n\n    onApply = async () => {\n        const currentTableName = this.workshop.currentTable.table\n        const { joinTable, joinType, leftField, rightField, leftProjectFields, rightProjectFields } = this.joinInfo\n         \n        if(!leftProjectFields && !rightProjectFields){ \n            this.workshop.toggleMessage(\"Fields are not selected.\")                                \n            return\n        }\n\n        this.ApplyOrSaveRef.enter()                \n        const tableRes = await EngineService.tableInfo(joinTable)        \n        const joinTableInfo = tableRes.content\n        const leftProjectFieldsStr = leftProjectFields && leftProjectFields.map(item => `${currentTableName}.\\`${item}\\``).join(\",\")\n        const rightProjectFieldsStr = rightProjectFields && rightProjectFields.map(item => `${joinTable}.\\`${item}\\``).join(\",\")\n\n        const leftFieldStr = `${currentTableName}.\\`${leftField}\\``\n        const rightFieldStr = `${joinTable}.\\`${rightField}\\``\n\n        const joinStr = `${joinType} ${joinTable} on ${leftFieldStr} = ${rightFieldStr}`\n\n\n        let projectStr = \"\"\n        if (leftProjectFieldsStr && rightProjectFieldsStr) {\n            projectStr = leftProjectFieldsStr + \",\" + rightProjectFieldsStr\n        }\n\n        if (leftProjectFieldsStr && !rightProjectFieldsStr) {\n            projectStr = leftProjectFieldsStr\n        }\n\n        if (!leftProjectFieldsStr && rightProjectFieldsStr) {\n            projectStr = rightProjectFieldsStr\n        }\n\n        const tableName = Tools.getTempTableName()\n        \n        const sql = `${joinTableInfo.content} \\n select ${projectStr} from ${currentTableName} ${joinStr} as ${tableName};`\n        console.log(sql)\n        await this.workshop.apply({ tableName, sql })\n        this.ApplyOrSaveRef.exit()\n        this.workshop.refreshOperateStation()\n    }\n\n    next = () => {\n        this.setState({ currentStep: this.state.currentStep + 1 })\n    }\n    preview = () => {\n        this.setState({ currentStep: this.state.currentStep - 1 })\n    }\n\n    render() {\n        return <div className=\"join-app\">\n            <div className={\"station-menu\"}>\n                <ApplyOrSave parent={this} onRollback={this.onRollback}\n                    handleTableInput={this.handleTableInput} ref={(et) => this.ApplyOrSaveRef = et}\n                    onSave={this.onSave}\n                    onApply={this.onApply}\n                    style={{ marginBottom: \"30px\" }}></ApplyOrSave>\n            </div>\n            <div>\n                <Steps current={this.state.currentStep}>\n                    <Step key={0} title=\"Table\" description=\"Choose the table you wanna join from workshop\" />\n                    <Step key={1} title=\"Join Condition \" description=\"Choose the join condition in both tables\" />\n                    <Step key={2} title=\"Fields\" description=\"Choose the fields you want from both tables\" />\n                </Steps>\n            </div>\n            <div className=\"join-app-form\"> <StepContent>\n                {this.state.steps[this.state.currentStep]}\n            </StepContent></div>\n        </div>\n    }\n}\n\nexport default  JoinStation\nexport {StepContent}","import * as React from \"react\";\nimport {Table,Modal} from 'antd';\n\n\nconst ReactMarkdown = require('react-markdown')\n\nexport default class ColumnOperate extends React.Component {\n    constructor(props) {\n        super(props)\n        this.tableStyle = props.style || {}\n        this.state = {columns: [], rows: [], view: {enabled: false}}\n        this.config = {}\n        this.workshop = props.parent\n    }\n\n    setRender = (keyColumn, data) => {\n\n        const value = data[0][keyColumn.key]\n\n        if (this.config && this.config[\"render\"]) {            \n            Object.keys(this.config).map(k=>{\n                const v = this.config[k][keyColumn.key] \n                if(v){\n                    keyColumn[k] = v\n                }\n            })\n            return\n        }\n\n        try {\n            if (React.Component.isPrototypeOf(value.type)) {\n                keyColumn[\"render\"] = value => <span>{value}</span>\n                return\n            }\n        }\n        catch (e) {\n        }\n\n        if (keyColumn.key == \"html\") {            \n            keyColumn[\"render\"] = value => <pre>{value.substring(0,300)}</pre>\n            return\n        }\n\n        if ((typeof value) === 'object') {\n            keyColumn[\"render\"] = value => <span>{JSON.stringify(value).substring(0, 300)}</span>\n            return\n        }\n        if ((typeof value) === 'array') {\n            keyColumn[\"render\"] = value => <span>{value.join(\",\").substring(0, 300)}</span>\n            return\n        }\n        if ((typeof value) === 'boolean') {\n            keyColumn[\"render\"] = value => <span>{value.toString()}</span>\n            return\n        }\n        if (keyColumn.key == \"fileSystem\" || keyColumn.key == \"message\" || keyColumn.key == \"info\") {\n            keyColumn[\"render\"] = value => <pre>{value.toString()}</pre>\n            return\n        }\n\n\n    }\n\n    update = (data, config) => {\n        // e.g. [{\"a\":1}]\n        this.config=config\n        let keys = []\n        let basket = {}\n        let rows = []\n        const self = this\n        //collect all keys\n        data.forEach(function (item) {\n            for (let key in item) {\n                if (!basket[key]) {\n                    const keyColumn = {\n                        title: key,\n                        dataIndex: key,\n                        key: key,\n                    }\n                    self.setRender(keyColumn, data)\n                    keys.push(keyColumn)\n                    basket[key] = true\n                }\n            }\n        })\n\n        // collect data\n        data.forEach(function (item, index) {\n            let new_item = {}\n            keys.forEach(function (key) {\n                new_item[key.key] = item[key.key]\n            })\n            new_item[\"key\"] = index\n            rows.push(new_item)\n        })\n\n        this.setState({columns: keys, data: rows})\n    }\n\n    rowDoubleClick = (row, index, event) => {\n        if (row.name === \"codeExample\" || row.name === \"doc\") {\n            this.setState({\n                view: {\n                    enabled: true,\n                    content: row.value\n                }\n            })\n        }\n    }\n\n    disablePreview = () => {\n        this.setState({\n            view: {\n                enabled: false\n            }\n        })\n    }\n\n    render() {\n        const self = this\n        return (<div style={this.tableStyle}>\n                <Table \n                    pagination={{pageSize:6}}   \n                    size ='default'\n                    columns={this.state.columns}\n                    dataSource={this.state.data}\n                    scroll = {{x:true}}                                      \n                    />\n                <Modal\n                    title={\"View\"}\n                    visible={this.state.view.enabled}\n                    onCancel={this.disablePreview}\n                    onOk={this.disablePreview}\n                    cancelText=\"Cancel\"\n                    OkText=\"Ok\"\n                >\n                    <ReactMarkdown source={this.state.view.content || \"\"}/>\n                </Modal>\n            </div>\n        )\n    }\n\n}","import AggStation from \"./AggStation\";\nimport Tools from \"../../../common/Tools\";\nexport const AggStationOp = (superclass) => class extends superclass {\n    enableGroupByField = (checked, record) => {\n        const fieldName = record.field\n        if (checked) {\n            this.groupByFields.push(fieldName)\n        } else {\n            this.groupByFields = this.groupByFields.filter((item) => {\n                return item.name !== fieldName\n            })\n        }\n    }\n    generateProjectField = (name,newName)=>{\n       this.aggFields.push({name,newName})\n    }\n    onApply = async ()=>{\n         this.ApplyOrSaveRef.enter()\n         const tableName = Tools.getTempTableName()\n         \n         let newFields = this.aggFields.map(item=>{\n            return `${item.name} as \\`${item.newName}\\``\n         })\n\n         let groupByFields = \"\"\n         \n         if(this.groupByFields.length !==0 ){\n            groupByFields = `group by ${this.groupByFields.map(item=>`\\`${item}\\``).join(\",\")}`            \n            newFields = this.groupByFields.map(item=>`\\`${item}\\``).concat(newFields)\n         }\n\n         const sql = `select ${newFields.join(\",\")} from ${this.workshop.getLastApplyTable().tableName} ${groupByFields} as ${tableName};`        \n         const status = await this.workshop.apply({tableName,sql})\n         this.ApplyOrSaveRef.exit()\n         if(status === 200){\n            this.workshop.refreshOperateStation()\n         }         \n    }\n    \n    \n}","import * as React from \"react\";\nimport { Select, List, Input } from 'antd';\nconst { Option } = Select;\n\nexport default class FuncDesc extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {...props}\n    }\n    show = (func) => {\n        this.setState({ func })\n    }\n\n    funcValue = () => {\n        return <List.Item key=\"Func\" >\n            <List.Item.Meta title=\"Func\" description={this.state.func.funcValue.extra.zhDoc}>\n            </List.Item.Meta>\n        </List.Item>\n    }\n\n    returnValue = () => {\n        return <List.Item key=\"Return value\" >\n            <List.Item.Meta title=\"Return value\" description={this.state.func.returnValue.extra.zhDoc}>\n            </List.Item.Meta>\n        </List.Item>\n    }\n  \n    parameters = () => {\n        return this.state.func.params.map(item => {\n            return <List.Item key={item.name} >\n                <List.Item.Meta title={item.name} description={item.extra.zhDoc}>                    \n                </List.Item.Meta>\n            </List.Item>\n        })\n    }\n\n    render() {\n        if (this.state.func) {\n            return <List\n                size=\"large\"\n                header={<div>{`Function [${this.state.func.value}] Info`}</div>}\n                footer={<div></div>}\n                bordered\n            >\n                {this.funcValue()}\n                {this.returnValue()}\n                {this.parameters()}\n            </List>\n        } else {\n            return <div></div>\n        }\n    }\n}","import * as React from \"react\";\nimport { Select, Form, Input, Switch } from 'antd';\nimport mix from \"../../common/mixin\"\nimport EngineService from \"../service/EngineService\";\nimport FuncDesc from \"./FuncDesc\";\nimport Tools from \"../../common/Tools\";\nconst { Option } = Select;\n\nexport default class ApplyFuncToField extends React.Component {\n    constructor(props) {\n        super(props)\n        this.parent = props.parent\n        this.operateField = props.operateField\n        this.funcParams = {}\n        this.state = {\n            data: [],\n            value: undefined,\n            funcPopUp: false,\n            func: {},\n            key: Math.random()\n        }\n    }\n\n    handleSearch = async value => {\n        if (value) {\n            const res = await EngineService.showFunctions()\n            const data = res.content.map((item) => {\n                return {\n                    value: item.key.table,\n                    text: item.key.table,\n                    funcValue: item.columns[0],\n                    returnValue: item.columns[1],\n                    params: item.columns.slice(2, item.columns.length)\n                }\n            })\n            this.setState({ data })\n        } else {\n            this.setState({ data: [] })\n        }\n    }\n    handleChange = value => {\n        const currentFunc = this.state.data.filter(item => item.value === value)[0]\n        this.setState({ currentFunc })\n        this.funcDescRef.show(currentFunc)\n    }\n\n    handleOperateInput = evt => {\n        this.manuallyTransform = evt.target.value\n    }\n\n    isAggChecked = checked =>{\n        this.manuallyIsAgg = checked\n    }\n\n    handleNewName = evt => {\n        this.newFuncName = evt.target.value\n    }\n\n    handleField = (evt) => {\n        const name = evt.target.getAttribute(\"name\")\n        this.funcParams[name] = evt.target.value\n    }\n\n    showColumn = (item) => {\n        this.funcParams[item.name] = this.operateField\n        if (item.extra.column === \"yes\") {\n            return this.operateField\n        } else return \"\"\n    }\n\n    getTransform = () => {\n        if(this.manuallyTransform){\n            return {\n                field:this.operateField,\n                isAgg:this.manuallyIsAgg, \n                transformCode: this.manuallyTransform, \n                columnName: this.newFuncName \n            }\n        }\n        const params = []        \n        this.state.currentFunc.params.forEach(item => {\n            const v = this.funcParams[item.name]\n            if (v) {\n                if (item.extra.column === \"yes\") {\n                    params.push(Tools.getField(v))\n                }else if(item.dataType == \"number\" ||item.dataType == \"boolean\" ){\n                    params.push(v)\n                }\n                else {\n                    params.push(`\"${v}\"`)\n                }\n            }\n        })\n        const field = this.operateField\n        const isAgg = this.state.currentFunc.funcValue.extra.agg === \"yes\"\n        return {field,isAgg, transformCode: `${this.state.currentFunc.value}(${params.join(\",\")})`, columnName: this.newFuncName }\n    }\n    reload = () => {\n        this.setState({\n            key: Math.random(),\n            data: [],\n            value: undefined,\n            funcPopUp: false,\n            currentFunc: undefined\n        })\n        this.collect = {}\n    }\n\n    render() {\n        const options = this.state.data.map(d => <Option key={d.value}>{d.text}</Option>)\n        return <Form className=\"login-form\" key={this.state.key}>\n            <Form.Item>\n                <Select\n                    showSearch\n                    value={this.state.value}\n                    placeholder={\"Search function\"}\n                    defaultActiveFirstOption={false}\n                    showArrow={false}\n                    style={{ width: \"200px\" }}\n                    filterOption={false}\n                    onSearch={this.handleSearch}\n                    onChange={this.handleChange}\n                    notFoundContent={\"type function name\"}\n                >\n                    {options}\n                </Select>\n            </Form.Item>\n\n            <Form.Item><FuncDesc ref={(et) => this.funcDescRef = et}></FuncDesc></Form.Item>\n            {\n                this.state.currentFunc ? this.state.currentFunc.params.map(item => {\n                    return <Form.Item key={item.name}><Input name={item.name} onChange={this.handleField} addonBefore={item.name} defaultValue={this.showColumn(item)} />\n                    </Form.Item>\n                }) : <div></div>\n            }\n            <Form.Item><Input addonBefore=\"Mannual Transform\" onChange={this.handleOperateInput} placeholder=\"\" /></Form.Item>\n            <Form.Item label=\"Is Agg Function\"><Switch  onChange={this.isAggChecked}></Switch></Form.Item>\n            <Form.Item><Input addonBefore=\"New fieldName\" onChange={this.handleNewName} placeholder=\"\" /></Form.Item>\n        </Form>\n    }\n}","import * as React from \"react\";\nimport mix from \"../../../common/mixin\"\nimport { Tabs, Switch, Menu, Button, Modal } from 'antd';\nimport ApplyOrSave from \"../ApplyOrSave\";\nimport ColumnOperate from \"../ColumnOperate\";\nimport { AggStationOp } from \"./AggStationOp\";\nimport ApplyFuncToField from \"../ApplyFuncToField\";\nimport { StationCommonOp } from \"../commonops/StationCommonOp\";\n\nconst { SubMenu } = Menu;\n\n\nexport default class AggStation extends mix(React.Component).with(StationCommonOp,AggStationOp) {\n    constructor(props) {\n        super(props)\n        this.workshop = props.parent.workshop\n        this.state = { funcPopUp: false }\n        this.groupByFields = []\n        // {name,newName}   \n        this.aggFields = []\n    }\n\n    showAggFuncsAndApply = (record) => {\n        this.operateField = record.field\n        this.setState({ funcPopUp: true })        \n    }\n\n    reload = () => {\n        const fields = this.workshop.currentTable.schema.fields\n        const result = fields.map(item => {\n            return { field: item.name, groupby: \"\", agg: \"\" }\n        })\n        const config = {\n            render: {\n                groupby: (value, record) => {\n                    return <Switch key={record.field} defaultChecked={record._groupBy} onChange={(checked)=>{\n                        this.enableGroupByField(checked,record)\n                        record._groupBy = checked\n                    }} dataref={record} />\n                },\n                agg: (value, record) => {\n                    return <>\n                    <Button key={record.field} style={{marginRight:\"30px\"}} dataref={record} onClick={() => {                         \n                        this.showAggFuncsAndApply(record) \n                    }}>Choose function</Button><span>{record._agg && `(${record._agg})`||\"\"}</span></>\n                }\n            }\n        }\n        this.columnsRef.update(result, config)\n    }\n\n    componentDidMount() {\n        this.reload()\n    }\n    \n    handleFunc = ()=>{ \n      this.applyFuncToFieldRef.operateField = this.operateField       \n      const { field, transformCode, columnName } = this.applyFuncToFieldRef.getTransform()              \n      const record = this.columnsRef.state.data.filter(item=>item.field === field)[0]\n      record._agg = `${transformCode} as ${columnName}`\n      this.generateProjectField(transformCode,columnName)\n      this.setState({ funcPopUp: false })\n      this.applyFuncToFieldRef.reload()\n    }    \n\n    render() {\n        return <div>\n            <div>\n                <Modal\n                    title={`Apply function to [${this.operateField}]`}\n                    visible={this.state.funcPopUp}\n                    onCancel={() => { \n                        this.setState({ funcPopUp: false }) \n                        this.applyFuncToFieldRef.setState({key:Math.random()})\n                    }}\n                    onOk={\n                        this.handleFunc\n                    }\n                    cancelText=\"Cancel\"\n                    width=\"50%\"\n                    OkText=\"Ok\">\n                    <ApplyFuncToField parent={this} ref={(et)=>this.applyFuncToFieldRef=et} operateField={this.operateField}></ApplyFuncToField>\n                </Modal>\n                \n                <div className=\"station-menu\">\n                   <ApplyOrSave parent={this} onRollback={this.onRollback} handlePersit={this.handlePersit} handleTableInput={this.handleTableInput} ref={(et)=>this.ApplyOrSaveRef=et} onSave={this.onSave} onApply={this.onApply} style={{marginBottom:\"30px\"}}></ApplyOrSave>\n                </div>\n            </div>\n            <div>\n                <ColumnOperate parent={this} ref={et => this.columnsRef = et}></ColumnOperate>\n            </div>\n        </div>\n    }\n}","import * as React from \"react\";\nimport { Transfer, Input, Form } from 'antd';\nexport default class RenameFields extends React.Component {\n  constructor(props) {\n    super(props)\n    this.workshop = props.parent.workshop\n    this.state = this.wow(props)\n  }\n  getSelectFields = () => {\n    return this.formRef.getFieldValue()\n  }\n  wow(props) {\n    const schemaFields = props.schemaFields.map(item => {\n      return {\n        title: item.name,\n        key: item.name,\n      }\n    })\n    const targetKeys = [];\n    const data = schemaFields;\n    return { data, targetKeys }\n  }\n\n  componentDidUpdate(prevProps) {\n    // Typical usage (don't forget to compare props):\n    if (this.props.schemaFields !== prevProps.schemaFields) {\n      this.setState({ ...this.wow(this.props) })\n    }\n  }\n\n  render() {\n    return <Form labelCol={{ span: 6 }} ref={(et) => { this.formRef = et }}>\n      {this.state.data.map(item => {\n        return <Form.Item key={item.key} name={item.key} label={item.key} value={item.key}>\n          <Input placeholder={\"input the new name here\"} />\n          </Form.Item>\n      })}\n    </Form>\n  }\n}","import * as React from \"react\";\nimport { Tabs, Switch, Menu, Button, Modal, Input } from 'antd';\nimport ApplyFuncToField from \"../ApplyFuncToField\";\nimport ColumnOperate from \"../ColumnOperate\";\nimport AlertBox from \"../../AlertBox\";\nexport default class FunctionField extends React.Component {\n    constructor(props) {\n        super(props)\n        this.workshop = props.parent.workshop\n        this.state = this.wow(props)\n    }\n\n    componentDidUpdate(prevProps) {\n        // Typical usage (don't forget to compare props):\n        if (this.props.schemaFields !== prevProps.schemaFields) {\n          this.setState({ ...this.wow(this.props) },()=>{\n            this.reload()\n          })\n        }\n      }\n\n      wow = (props)=>{\n        const fields = props.schemaFields\n\n        const data = fields.map(item => {\n            return { field: item.name, func: \"\", transformCode: \"\", \"columnName\": \"\" }\n        })\n\n        const config = {\n            render: {\n                func: (value, record) => {\n                    return <Button key={record.field} dataref={record} onClick={() => { \n                        this.showAggFuncsAndApply(record) \n                    }}>Choose function</Button>\n                },\n                transformCode: (value, record) => {                \n                    return value\n                },\n                columnName: (value, record) => {                \n                    return value\n                }\n            }\n        }\n        return { funcPopUp: false, data, config }\n      }\n\n    showAggFuncsAndApply = (record) => {\n        this.operateField = record.field\n        this.setState({ funcPopUp: true })\n    }\n\n    reload = () => {        \n        this.columnsRef.update(this.state.data, this.state.config)\n    }\n\n    componentDidMount() {\n        this.reload()\n    }\n\n    handleFunc = () => {\n        this.applyFuncToFieldRef.operateField = this.operateField\n        const { field, transformCode, columnName,isAgg } = this.applyFuncToFieldRef.getTransform()\n        if(!columnName){\n           this.setState({\"error\":\"New fieldName is required.\"}) \n           return \n        }\n        const data = this.state.data.map(item => {\n            if (item.field === field) {\n                return { field, func: \"\", transformCode, columnName,isAgg}\n            }\n            return item\n        })        \n        this.setState({ funcPopUp: false, data,error:undefined }, () => { this.reload() })\n        this.applyFuncToFieldRef.reload()\n    }\n\n    getSelectFields = ()=>{        \n        return this.state.data\n    }\n\n    render = () => {\n        return <div >\n            \n            <Modal\n                title={`Apply function to [${this.operateField}]`}\n                visible={this.state.funcPopUp}\n                onCancel={() => {\n                    this.applyFuncToFieldRef.reload()\n                    this.setState({ funcPopUp: false,error:undefined })\n                }}\n                onOk={\n                    this.handleFunc\n                }\n                cancelText=\"Cancel\"\n                width=\"50%\"\n                OkText=\"Ok\">\n                {this.state.error && <AlertBox message={this.state.error}></AlertBox>}\n                <ApplyFuncToField parent={this} ref={(et) => this.applyFuncToFieldRef = et} operateField={this.operateField}></ApplyFuncToField>\n            </Modal>\n            <ColumnOperate ref={et => this.columnsRef = et}></ColumnOperate>\n        </div>\n    }\n}","import Tools from \"../../../common/Tools\";\nexport const ProjectStationSQLOp = superclass => class extends(superclass) {\n    onSelectApply = async ()=>{\n        this.ApplyOrSaveRef.enter()\n        const fields = this.selectFieldsRef.getSelectFields().map(item=>{\n            return `\\`${item}\\``\n        })\n        if(fields.length === 0){\n            this.workshop.showInfo(\"No fields are selected.\")\n            this.ApplyOrSaveRef.exit()\n            return\n        }\n        const tableName = Tools.getTempTableName()\n        \n        const sql = `select ${fields.join(\",\")} from ${this.workshop.getLastApplyTable().tableName} as ${tableName};`\n        await this.workshop.apply({tableName,sql})\n        this.ApplyOrSaveRef.exit()\n        this.workshop.refreshOperateStation()\n     }\n \n     onFuncApply = async ()=>{\n         this.ApplyOrSaveRef.enter()\n         const fields = this.functionFieldRef.getSelectFields()        \n         if(fields.length === 0){\n             this.workshop.toggleMessage(\"No fields are renamed.\")\n             this.ApplyOrSaveRef.exit()\n             return\n         }\n\n         let isAggExists = fields.filter(item=>item.isAgg).length > 0         \n         let newFields = []\n         \n         if(!isAggExists){\n            newFields = fields.map(item=>{                        \n                if(item[\"transformCode\"]){\n                    return `${item[\"transformCode\"]} as \\`${item[\"columnName\"]}\\``\n                } else return `\\`${item[\"field\"]}\\` as \\`${item[\"field\"]}\\``\n                \n            }) \n         }else {\n            newFields = fields.filter(item=>item.isAgg).map(item=>`${item[\"transformCode\"]} as \\`${item[\"columnName\"]}\\``)\n         }\n         \n         \n         \n         const tableName = Tools.getTempTableName()  \n         const sql = `select ${newFields.join(\",\")} from ${this.workshop.getLastApplyTable().tableName} as ${tableName};`        \n         await this.workshop.apply({tableName,sql})\n         this.ApplyOrSaveRef.exit()\n         this.workshop.refreshOperateStation()\n      }\n \n      onRenameApply = async ()=>{\n         this.ApplyOrSaveRef.enter()\n         const fields = this.renameFieldsRef.getSelectFields()    \n         const currentFields = this.workshop.currentTable.schema.fields.map(item=>`\\`${item.name}\\``)\n         \n         if(fields.length === 0){\n             this.workshop.toggleMessage(\"No fields are renamed.\")\n             this.ApplyOrSaveRef.exit()\n             return\n         }\n         const newFields = Object.keys(fields).filter(field=>{\n             return field !== fields[field]\n         }).map(item=>{\n             return `\\`${item}\\` as \\`${fields[item]}\\``\n         })\n         \n        //  const tempC = Object.keys(fields)\n         //const leftFieds = currentFields.filter(item=> !tempC.includes(item))\n         const tableName = Tools.getTempTableName()  \n         const sql = `select ${currentFields.concat(newFields).join(\",\")} from ${this.workshop.getLastApplyTable().tableName} as ${tableName};`        \n         await this.workshop.apply({tableName,sql})\n         this.ApplyOrSaveRef.exit()\n         this.workshop.refreshOperateStation()\n \n \n      }\n}","import ActionMaker from \"../../../ActionMaker\"\n\nexport const { handler: RemoveFieldActionHandler, action: RemoveFieldAction } = ActionMaker.buildHandler(async (action) => {\n    const fields = action.data.fields\n    const operateFileds = action.__state.operateFileds.filter(item => fields !== item.field)\n    return {\n        data: {\n            operateFileds\n        }\n    }\n})","import { Form, Tag, Divider, Select } from \"antd\"\nimport ActionMaker from \"../../../ActionMaker\"\n\nexport const { handler: AddFieldActionHandler, action: AddFieldAction } = ActionMaker.buildHandler(async (action) => {    \n    const operateFileds = action.data.fields.map(field=>{\n        return {field}\n    })\n    \n    return {\n        data: {\n            operateFileds\n        }\n    }\n})","import Tools from \"../../../common/Tools\"\n\nclass ApplyActionUtils {\n     static async apply(action, validateInput, genSQL) {\n        const { workshop, values } = action.data\n        const { applySaveRollbackDispacher } = action.__state\n        const msg = validateInput(values)\n        if (msg) {\n            applySaveRollbackDispacher({\n                type: \"setState\",\n                data: {\n                    loading: false\n                }\n            })\n            return {\n                data: {\n                    ...action.data,\n                    error: msg,\n                    loading: false\n                }\n            }\n        }\n\n        const { tableName, sql } = genSQL(workshop, values)\n\n        const status = await workshop.apply({\n            tableName,\n            sql\n        })\n        if (status === 200) {\n            workshop.refreshOperateStation()\n        }\n        applySaveRollbackDispacher({\n            type: \"setState\",\n            data: {\n                loading: false\n            }\n        })\n        return {\n            data: {\n                ...action.data,\n                loading: false\n            }\n        }\n    }\n}\n\nexport default ApplyActionUtils\n","import ActionMaker from \"../../../ActionMaker\"\nimport Tools from \"../../../../common/Tools\"\nimport ApplyActionUtils from \"../../common/ApplyActionUtils\"\n\nexport const {handler:CastActionHandler,action:CastAction} = ActionMaker.buildHandler(async (action)=>{\n    return ApplyActionUtils.apply(action,\n        (values) => {\n            if (Object.keys(values).length === 0) {\n                return \"Please configure cast fields then click apply\"\n            }\n            return undefined\n        },\n        \n        (workshop, values) => {\n            const tableName = Tools.getTempTableName()\n            const newCastFields = Object.keys(values).map(key => {\n                return `cast(${Tools.getField(key)} as ${values[key]}) as ${Tools.getField(key)}`\n            })\n\n            const newFields = Object.keys(values)\n            const fields = workshop.currentTable.schema.fields\n            const oldFieldNames = fields.filter(item=>{\n                return !newFields.includes(item.name)\n            }).map(item=>{\n                return Tools.getField(item.name)\n            })\n\n            const selectStr = (newCastFields.concat(oldFieldNames)).join(\",\")\n\n            const sql = `select ${selectStr} from ${workshop.getLastApplyTable().tableName}            \n            as ${tableName};`\n            return { tableName, sql }\n        })\n})","import { CommonHandlers,CommonActions} from '../../common/CommonHandlers'\nimport { RemoveFieldAction, RemoveFieldActionHandler } from '../../common/actions/RemoveFieldAction'\nimport { AddFieldAction, AddFieldActionHandler } from '../../common/actions/AddFieldAction'\nimport { CastAction, CastActionHandler } from './CastAction'\n\nclass CastFieldsActionNames {\n    static ADD_FIELD = \"addField\"\n    static REMOVE_FIELD = \"removeField\"\n}\nconst CastFieldsHandlers = {\n    ...CommonHandlers,\n    [CastFieldsActionNames.ADD_FIELD]: AddFieldActionHandler,\n    [CastFieldsActionNames.REMOVE_FIELD]: RemoveFieldActionHandler,\n    apply: CastActionHandler\n}\nconst CastFieldsActions = {\n    ...CommonActions,\n    [CastFieldsActionNames.ADD_FIELD]: AddFieldAction,\n    [CastFieldsActionNames.REMOVE_FIELD]: RemoveFieldAction,\n    apply: CastAction\n}\n\nfunction CastFieldsReducer(state, action) {\nreturn CastFieldsActions[action.type](state, action.data)    \n}\nexport { CastFieldsActionNames, CastFieldsReducer, CastFieldsHandlers }","import ActionMaker from \"../../ActionMaker\"\n\nexport const {handler:RollbackActionHandler,action:RollbackAction} = ActionMaker.buildHandler(async (action)=>{\n    const {workshop} = action.data\n    await workshop.rollback()\n    return {        \n        data: action.data\n    }\n})","import ActionMaker from \"../../ActionMaker\"\n\nexport const {handler:SaveActionHandler,action:SaveAction} = ActionMaker.buildHandler(async (action)=>{\n    const {workshop} = action.data\n    const {saveTablePersisted,saveTableName} = action.__state\n    if(!saveTableName) return {\n        data:{error:\"table name is required\"}\n    }    \n    await workshop.save(saveTableName,saveTablePersisted)\n    workshop.refreshTableWorkshop()\n    return {        \n        data: {...action.data,loading:false}\n    }\n})","import { RollbackAction, RollbackActionHandler } from './RollbackAction'\nimport { SaveAction, SaveActionHandler } from './SaveAction'\nimport { SetStateActionHandler, SetStateAction } from '../../analysis/common/actions/SetStateAction'\n\nclass ApplySaveRollbackActionNames { }\nconst ApplySaveRollbackHandlers = {\n    setState: SetStateActionHandler,\n    rollback: RollbackActionHandler,\n    save: SaveActionHandler\n}\n\nfunction ApplySaveRollbackReducer(state, action) {\n    switch (action.type) {\n        case \"setState\":\n            return SetStateAction(state, action.data)\n        case \"rollback\":\n            return RollbackAction(state, action.data)\n        case \"save\":\n            return SaveAction(state, action.data)\n        default:\n            return state;\n    }\n}\nexport { ApplySaveRollbackActionNames, ApplySaveRollbackReducer, ApplySaveRollbackHandlers }","import React, { useState, useCallback, useEffect, useContext } from 'react';\nimport { Form, Tag, Divider, Select, Button, Modal, Input, Switch } from 'antd'\nimport { useReducerAsync } from 'use-reducer-async'\nimport { ApplySaveRollbackReducer, ApplySaveRollbackHandlers } from './actions/ApplySaveRollbackReducer.js';\nimport AlertBox from '../AlertBox.js';\nimport Tools from '../../common/Tools.js';\nimport AnalysisWorkshop from '../analysis/workshop.js';\n\n\nconst initState = {\n    saveDiagram: false,\n    saveTablePersisted: false,\n    loading: false,\n    saveTableName: undefined,\n    error: undefined\n}\n\nconst ApplySaveRollbackContext = React.createContext()\n\nfunction ApplySaveRollback(props) {\n    //dispacher parent \n    const workshop = props.workshop || AnalysisWorkshop.workshop\n    const { dispacher: parentDispacher } = useContext(props.context)\n    const [state, dispacher] = useReducerAsync(ApplySaveRollbackReducer, initState, ApplySaveRollbackHandlers)\n    const { saveDiagram, saveTablePersisted, loading,error } = state\n    return (\n        <ApplySaveRollbackContext.Provider value={{ dispacher }}>\n            {\n                error && <AlertBox message={error}></AlertBox>\n            }\n            <Modal title={\"View\"}\n                visible={saveDiagram}\n                onCancel={\n                    () => {\n                        dispacher({\n                            type: \"setState\",\n                            data: { saveDiagram: false }\n                        })\n                    }\n                }\n                onOk={() => {\n                    dispacher({\n                        type: \"save\",\n                        data: {\n                            saveDiagram: false,\n                            workshop\n                        }\n                    })\n                }}\n                cancelText=\"Cancel\"\n                width=\"50%\"\n                OkText=\"Ok\">\n                <Form className=\"login-form\">\n                    <Form.Item><Input addonBefore=\"tableName\" onChange={(value) => {\n                        dispacher({\n                            type: \"setState\",\n                            data: { saveTableName: value.target.value }\n                        })\n                    }} placeholder=\"\" /></Form.Item>\n                    <Form.Item label=\"Persist table(take more space):\"><Switch onChange={\n                        (checked) => {\n                            dispacher({\n                                type: \"setState\",\n                                data: { saveTablePersisted: checked }\n                            })\n                        }\n                    }></Switch></Form.Item>\n                </Form>\n            </Modal>\n            <Button loading={loading} type=\"primary\" onClick={\n                () => {\n                    dispacher({\n                        type: \"setState\",\n                        data: {\n                            loading: true\n                        }\n                    })\n                    parentDispacher({\n                        type: \"setState\",\n                        data: { applySaveRollbackDispacher: dispacher,applyToken:Tools.getJobName() }\n                    })\n                }\n            } >Apply</Button>\n            <Divider type=\"vertical\" />\n            <Button disabled={loading} onClick={() => {\n                dispacher({\n                    type: \"setState\",\n                    data: {\n                        saveDiagram: true\n                    }\n                })\n            }}>Save As</Button>\n            <Divider type=\"vertical\" />\n            <Button disabled={loading} onClick={() => {\n                dispacher({\n                    type: \"setState\",\n                    data: { loading: true }\n                })\n                dispacher({\n                    type: \"rollback\",\n                    data: { workshop, loading: false }\n                })\n            }} >Rollback</Button>\n        </ApplySaveRollbackContext.Provider>\n    )\n}\nexport { ApplySaveRollback, ApplySaveRollbackContext }","import React, { useState, useCallback, useEffect } from 'react';\nimport { useReducerAsync } from 'use-reducer-async'\nimport { Form, Tag, Divider, Select, Button,Modal,Input,Switch } from 'antd'\nimport { CastFieldsReducer, CastFieldsHandlers, CastFieldsActionNames } from './actions/CastFieldsReducer';\nimport { ApplySaveRollback } from '../../apply_save_rollback/ApplySaveRollback';\nimport AlertBox from '../../AlertBox';\nconst { Option } = Select;\n\n\nconst initState = {\n    error: undefined,\n    //为了回调applySaveRollback组件  \n    applySaveRollbackDispacher: undefined,\n    operateFileds:[]\n}\n\nconst CastFieldsContext = React.createContext()\n\nfunction CastFields(props) {\n    const {workshop} = props\n    const [form] = Form.useForm()\n    const fields = workshop.currentTable.schema.fields\n    const [state, dispacher] = useReducerAsync(CastFieldsReducer, initState, CastFieldsHandlers)\n    const { operateFileds, error,applySaveRollbackDispacher} = state\n    const children = fields.map(item => {\n        return <Option key={item.name}>{item.name}</Option>\n    })\n\n    useEffect(()=>{\n        if(applySaveRollbackDispacher){\n            form.submit()\n        }       \n    },[applySaveRollbackDispacher])\n    \n    return (\n        <CastFieldsContext.Provider value={{ dispacher }}>\n            <div style={{ marginTop: \"10px\", \"width\": \"400px\" }}>\n                {\n                    error && <AlertBox message={error}></AlertBox>\n                }\n                <Form form={form} onFinish={(values) => {                    \n                    dispacher({\n                        type: \"apply\",\n                        data: {\n                            workshop,\n                            values                                                    \n                        }\n                    })\n                }} className=\"login-form\" >\n                    <Form.Item>\n                        <ApplySaveRollback context={CastFieldsContext} workshop={workshop}/>\n                    </Form.Item>\n                    <Form.Item label=\"Choose fields\" >\n                        <Select\n                            mode=\"multiple\"\n                            onDeselect={value => {\n                                dispacher({\n                                    type: CastFieldsActionNames.REMOVE_FIELD,\n                                    data: { fields: value }\n                                })\n                            }}\n                            onChange={(value) => {\n                                dispacher({\n                                    type: CastFieldsActionNames.ADD_FIELD,\n                                    data: { fields: value }\n                                })\n                            }}\n                        >\n                            {children}\n                        </Select>\n                    </Form.Item>\n\n                    {operateFileds.map(item => {\n                        return <Form.Item key={item.field} label={`Cast ${item.field} to`} name={item.field}>\n                            <Select>\n                                <Select.Option value=\"int\">int</Select.Option>\n                                <Select.Option value=\"long\">long</Select.Option>\n                                <Select.Option value=\"double\">double</Select.Option>\n                                <Select.Option value=\"string\">string</Select.Option>\n                            </Select>\n                        </Form.Item>\n                    })}\n                </Form>\n            </div>\n        </CastFieldsContext.Provider>\n    )\n}\nexport { CastFields, CastFieldsContext }","class CommonActionNames {\n    static ADD_FIELD = \"addField\"\n    static REMOVE_FIELD = \"removeField\"\n    static APPLY = \"apply\"\n    static setState = \"setState\"\n}\n\nexport {CommonActionNames} \n","import React, { useState, useCallback, useEffect, useContext } from 'react';\nimport { Form, Tag, Divider, Select, Button, Modal, Input, Switch } from 'antd'\nimport { CommonActionNames } from '../common/CommonActionNames';\nimport { PlusOutlined, MinusOutlined } from '@ant-design/icons';\nimport { FormattedMessage } from 'react-intl'\nconst { Option } = Select;\n\n\nfunction AddJsonField(props) {\n    const [form] = Form.useForm() \n    const {context,keyPaths} = props\n    const {dispacher} = useContext(context)\n    useEffect(()=>{\n        props.forms.push(form)\n    },[])\n    return (\n        <Form layout=\"inline\" form={form} style={{marginBottom:\"30px\"}}>                                \n        <Form.Item >\n            <Button danger icon={<MinusOutlined />} onClick={() => {\n                dispacher({\n                    type: CommonActionNames.REMOVE_FIELD,\n                    data: {form}\n                })\n            }}></Button>\n        </Form.Item>\n        <Form.Item label={<FormattedMessage id=\"add\"/>} name={\"path\"} style={{ width: \"300px\" }}>\n            <Select>\n                {keyPaths.map(item => <Option key={item}>{item}</Option>)}\n            </Select>\n        </Form.Item>\n        <Form.Item label={<FormattedMessage id=\"as\"/>} name={\"column\"} style={{ width: \"100px\" }}>\n            <Input />\n        </Form.Item>                        \n</Form>\n    )\n}\nexport {AddJsonField}","import React, { useState, useCallback, useEffect } from 'react';\nimport ActionMaker from \"../../../ActionMaker\"\nimport { AddJsonField } from \"../AddJsonField\"\nimport { JsonFieldsContext } from \"../JsonFields\"\nimport Tools from '../../../../common/Tools';\n\nexport const {handler:AddFieldActionHandler,action:AddFieldAction} = ActionMaker.buildHandler(async (action)=>{\n    const {subFields,keyPaths,forms} = action.__state\n    subFields.push(<AddJsonField key={Tools.getJobName()} context={JsonFieldsContext} keyPaths={keyPaths} forms={forms} />)    \n    return {        \n        data: {\n            subFields\n        }\n    }\n})","import ActionMaker from \"../../../ActionMaker\"\n\nexport const { handler: RemoveFieldActionHandler, action: RemoveFieldAction } = ActionMaker.buildHandler(async (action) => {\n    const { form } = action.data\n    const { forms, subFields } = action.__state\n    const targetIndex= forms.indexOf(form)    \n    forms.splice(targetIndex,1)    \n    subFields.splice(targetIndex,1)\n    return {\n        data: {\n            forms,\n            subFields\n        }\n    }\n})","import ActionMaker from \"../../../ActionMaker\"\nimport Tools from \"../../../../common/Tools\"\nimport ApplyActionUtils from \"../../common/ApplyActionUtils\"\n\n\nexport const {handler:JsonFieldsApplyActionHandler,action:JsonFieldsApplyAction} = ActionMaker.buildHandler(async (action)=>{\n    return ApplyActionUtils.apply(action,\n        (values) => {\n            const {formValues,operateFiled} = values\n            if (!operateFiled || formValues.length === 0) {\n                return \"Please configure fields then click apply\"\n            }\n            return undefined\n        },\n        (workshop, values) => {\n            const tableName = Tools.getTempTableName()\n\n            const {formValues,operateFiled} = values\n            const jsonStr = formValues.map(item=>{\n                return `get_json_object(${Tools.getField(operateFiled)},\"${item.path}\") as ${Tools.getField(item.column)}`\n            }).join(\",\")            \n\n            const sql = `select *,${jsonStr} from ${workshop.getLastApplyTable().tableName}            \n            as ${tableName};`\n            return { tableName, sql }\n        })\n})","import { CommonHandlers,CommonActions} from '../../common/CommonHandlers'\nimport { CommonActionNames } from '../../common/CommonActionNames'\nimport { AddFieldAction,AddFieldActionHandler } from './AddFieldAction'\nimport { RemoveFieldAction,RemoveFieldActionHandler } from './RemoveFieldAction'\nimport { JsonFieldsApplyActionHandler, JsonFieldsApplyAction } from './JsonFieldsApplyAction'\n\nclass JsonFieldsActionNames {\n    \n}\n\nconst JsonFieldsHandlers = {\n    ...CommonHandlers,\n    [CommonActionNames.ADD_FIELD]: AddFieldActionHandler,\n    [CommonActionNames.REMOVE_FIELD]: RemoveFieldActionHandler,\n    [CommonActionNames.APPLY]: JsonFieldsApplyActionHandler,\n}\nconst JsonFieldsActions = {\n    ...CommonActions,\n    [CommonActionNames.ADD_FIELD]: AddFieldAction,\n    [CommonActionNames.REMOVE_FIELD]: RemoveFieldAction,\n    [CommonActionNames.APPLY]: JsonFieldsApplyAction,\n}\n\nfunction JsonFieldsReducer(state, action) {\nreturn JsonFieldsActions[action.type](state, action.data)    \n}\nexport { JsonFieldsActionNames, JsonFieldsReducer, JsonFieldsHandlers }","import React, { useState, useCallback, useEffect } from 'react';\nimport { useReducerAsync } from 'use-reducer-async'\nimport { Form, Tag, Divider, Select, Button, Modal, Input, Switch, Card } from 'antd'\nimport { ApplySaveRollback } from '../../apply_save_rollback/ApplySaveRollback';\nimport AlertBox from '../../AlertBox';\nimport AnalysisWorkshop from '../workshop';\nimport { JsonFieldsReducer, JsonFieldsHandlers } from './actions/JsonFieldsReducer';\nimport { CommonActionNames } from '../common/CommonActionNames';\nimport { PlusOutlined, MinusOutlined } from '@ant-design/icons';\nimport Tools from '../../../common/Tools';\nimport styled from 'styled-components'\nimport { FormattedMessage } from 'react-intl'\nconst { Option } = Select;\n\n\nconst initState = {\n    error: undefined,\n    //为了回调applySaveRollback组件  \n    applySaveRollbackDispacher: undefined,\n    operateFiled: undefined,\n    keyPaths: [],\n    forms: [],\n    subFields: []\n}\n\nconst JsonFieldsContext = React.createContext()\n\nfunction JsonFields(props) {\n    const workshop = AnalysisWorkshop.workshop\n    const [form] = Form.useForm()\n    const fields = workshop.currentTable.schema.fields\n    const data = workshop.currentTable.data.slice(0, 10)\n\n    const [state, dispacher] = useReducerAsync(JsonFieldsReducer, initState, JsonFieldsHandlers)\n    const { operateFiled,\n        keyPaths,\n        error,\n        applySaveRollbackDispacher,\n        forms,\n        subFields\n    } = state\n    const children = fields.map(item => {\n        return <Option key={item.name}>{item.name}</Option>\n    })\n\n    useEffect(() => {\n        if (operateFiled) {            \n            dispacher({\n                type: CommonActionNames.setState,\n                data:{\n                    subFields:[],\n                    forms: []\n                }\n            })    \n\n            const temp = new Set()            \n            const tempObjs = data.map(item => {\n                try{\n                    return JSON.parse(item[operateFiled])\n                }catch(e){\n                    return undefined\n                }\n            }).filter(item=>  item !== undefined && \n                (typeof(item) === \"object\" || typeof(item) === \"array\"))\n\n            console.log(tempObjs)\n\n            tempObjs.forEach(obj => {\n                Tools.keyPath(\"$\", obj, (key) => {\n                    temp.add(key)\n                })\n            })\n\n            dispacher({\n                type: CommonActionNames.setState,\n                data: { keyPaths: [...temp] }\n            })\n        }\n    }, [operateFiled])\n\n    useEffect(() => {\n        if (applySaveRollbackDispacher) {\n            form.submit()\n        }\n    }, [applySaveRollbackDispacher])\n\n    const apply = useCallback(({workshop,values,forms})=>{\n         console.log(values)\n         console.log(forms.map(item=>{\n             return item.getFieldsValue()\n         })) \n         applySaveRollbackDispacher.dispacher({\n             type:\"setState\",\n             data:{loading:false}\n         })\n    },[applySaveRollbackDispacher])\n\n    return (\n        <JsonFieldsContext.Provider value={{ dispacher }}>\n            <div style={{ marginTop: \"10px\", \"width\": \"600px\" }}>\n                {\n                    error && <AlertBox message={error}></AlertBox>\n                }\n                <Form form={form} onFinish={(values) => {\n                    const formValues = forms.map(item=>item.getFieldsValue())\n                    dispacher({\n                        type: \"apply\",\n                        data: {\n                            workshop,\n                            values: {formValues,operateFiled}\n                        }\n                    })\n                }} className=\"login-form\" >\n                    <Form.Item>\n                        <ApplySaveRollback context={JsonFieldsContext} workshop={workshop} />\n                    </Form.Item>\n                    <Form.Item label={<FormattedMessage id=\"choose_json_field\"/>} style={{ width: \"300px\" }}>\n                        <Select\n                            onChange={(value) => {\n                                dispacher({\n                                    type: CommonActionNames.setState,\n                                    data: { operateFiled: value }\n                                })\n                            }}\n                        >\n                            {children}\n                        </Select>\n                    </Form.Item>\n                </Form>\n                {\n                    operateFiled && <Card title={<Button icon={<PlusOutlined />} onClick={() => {\n                        dispacher({\n                            type: CommonActionNames.ADD_FIELD,\n                            data: {}\n                        })\n                    }}></Button>}>\n                        {\n                            subFields\n                        }\n                    </Card>\n                }\n\n\n\n            </div>\n        </JsonFieldsContext.Provider>\n    )\n}\nexport { JsonFields, JsonFieldsContext }","import * as React from \"react\";\nimport { Tabs, Radio } from 'antd';\nimport '../common.scss'\nimport ApplyOrSave from \"../ApplyOrSave\";\nimport SelectFields from \"./SelectFields\"\nimport mix from \"../../../common/mixin\"\nimport { StationCommonOp } from \"../commonops/StationCommonOp\";\nimport RenameFields from \"./RenameFields\";\nimport FunctionField from \"./FunctionField\";\nimport { ProjectStationSQLOp } from \"./ProjectStationSQLOp\";\nimport { CastFields } from \"./CastFields\";\nimport {FormattedMessage} from 'react-intl'\nimport { JsonFields } from \"./JsonFields\";\n\nconst { TabPane } = Tabs;\n\nexport default class ProjectStation extends mix(React.Component).with(StationCommonOp,ProjectStationSQLOp) {\n    constructor(props) {\n        super(props)\n        this.workshop = props.parent.workshop\n    }\n\n\n    render() {\n        return  <div className={\"station-menu\"}>                \n                <Tabs defaultActiveKey=\"1\" className={\"station-tabs\"}>\n                    <TabPane tab={<FormattedMessage id=\"select_columns\"/>} key=\"1\">\n                    <ApplyOrSave parent={this} onRollback={this.onRollback} handlePersit={this.handlePersit} handleTableInput={this.handleTableInput} ref={(et)=>this.ApplyOrSaveRef=et} onSave={this.onSave} onApply={this.onSelectApply} style={{marginBottom:\"30px\"}}></ApplyOrSave>                        \n                        <SelectFields schemaFields={this.workshop.currentTable.schema.fields} ref={(et)=>this.selectFieldsRef=et} parent={this}></SelectFields>\n                    </TabPane>\n                    <TabPane tab={<FormattedMessage id=\"rename_columns\"/>} key=\"2\">\n                    <ApplyOrSave parent={this} onRollback={this.onRollback}  handlePersit={this.handlePersit} handleTableInput={this.handleTableInput} ref={(et)=>this.ApplyOrSaveRef=et} onSave={this.onSave} onApply={this.onRenameApply} style={{marginBottom:\"30px\"}}></ApplyOrSave>\n                        <RenameFields schemaFields={this.workshop.currentTable.schema.fields} ref={(et)=>this.renameFieldsRef=et} parent={this}></RenameFields>\n                    </TabPane>\n                    <TabPane tab={<FormattedMessage id=\"transform_columns\"/>} key=\"3\">\n                       <ApplyOrSave parent={this} onRollback={this.onRollback}  handlePersit={this.handlePersit} handleTableInput={this.handleTableInput} ref={(et)=>this.ApplyOrSaveRef=et} onSave={this.onSave} onApply={this.onFuncApply} style={{marginBottom:\"30px\"}}></ApplyOrSave>                        \n                       <FunctionField  schemaFields={this.workshop.currentTable.schema.fields} ref={(et)=>this.functionFieldRef=et} parent={this}></FunctionField>\n                    </TabPane>\n                    <TabPane tab={<FormattedMessage id=\"cast_columns_type\"/>} key=\"4\"> \n                       <CastFields workshop={this.workshop}></CastFields>                                         \n                    </TabPane>\n                    <TabPane tab={<FormattedMessage id=\"json_fields\"/>} key=\"5\"> \n                       <JsonFields/>                                         \n                    </TabPane>\n                </Tabs>\n            </div>                \n    }\n}","import React, { useState, useCallback, useEffect } from 'react';\nimport { Select, Input, Form } from 'antd';\nimport { ActionProxy } from '../../../backend_service/ActionProxy';\nimport Tools from '../../../common/Tools';\n\nconst ExpressionConst = {\n    EQUAL: \"=\",\n    NON_EQUAL: \"!=\",\n    IN: \"in\",\n    CONTAINS: \"contains\",\n    STARTS_WITH: \"startsWith\",\n    ENDS_WITH: \"endsWith\",\n    LIKE: \"like\",\n    IS_NULL: \"is null\",\n    IS_NOT_NULL: \"is not null\",\n    IS_EMPTY: \"is empty\",\n    IS_NOT_EMPTY: \"is not empty\",\n\n}\n\nconst buildExpression = (item) => {\n    const { field, dataType, compare, condition } = item\n    if (compare === ExpressionConst.IN) {\n\n        let conTemp = \"\"\n\n        switch (dataType) {\n            case \"integer\": case \"long\": case \"float\": case \"double\":\n                conTemp = condition.map(cond => {\n                    return cond\n                }).join(\",\")\n                break\n            default:\n                conTemp = condition.map(cond => {\n                    return `\"${Tools.escapeQuote(cond)}\"`\n                }).join(\",\")\n        }\n        const con = `(${conTemp})`\n        return `${Tools.getField(field)} ${compare} ${con}`\n    }\n\n    if (compare === ExpressionConst.IS_NOT_NULL || compare === ExpressionConst.IS_NULL) {\n        return `${Tools.getField(field)} ${compare}`\n    }\n\n    if (compare === ExpressionConst.IS_EMPTY) {\n        return `${Tools.getField(field)} = \"\"`\n    }\n\n    if (compare === ExpressionConst.IS_NOT_EMPT) {\n        return `${Tools.getField(field)} != \"\"`\n    }\n\n    if (compare === ExpressionConst.LIKE) {\n        return `${Tools.getField(field)} like \"${Tools.escapeQuote(condition)}\"`\n    }\n\n    if (compare === ExpressionConst.STARTS_WITH) {\n        return `${Tools.getField(field)} like \"${Tools.escapeQuote(condition)}%\"`\n    }\n\n    if (compare === ExpressionConst.ENDS_WITH) {\n        return `${Tools.getField(field)} like \"%${Tools.escapeQuote(condition)}\"`\n    }\n\n    let con = \"\"\n    switch (dataType) {\n        case \"string\":\n            con = `\"${Tools.escapeQuote(condition)}\"`\n            break\n        default: con = condition;\n    }\n    return `${Tools.getField(field)} ${compare} ${con}`\n}\nfunction FilterCondition(props) {\n    const { record, workshop } = props\n    const [compare, setCompare] = useState(undefined)\n    const { dataType, field } = record\n    const [inCandidate, setInCandidate] = useState([])\n    const [inCandidateLoading, setInCandidateLoading] = useState(false)\n    const [form] = Form.useForm()\n    props.forms[field] = form\n\n    const fetch = async () => {\n        if (inCandidate.length === 0 && compare === \"in\") {\n            setInCandidateLoading(true)\n            \n            const res =  await workshop.runSQLAtCurrentTable(`select distinct(${Tools.getField(field)}) as name \n            from ${workshop.getLastApplyTable().tableName} \n            as ${Tools.getTempTableName()};`,{outputSize: 5000, timeout: 10000 })\n            \n            if (res.status === 200) {\n                setInCandidate(res.content.data)\n            }\n            setInCandidateLoading(false)\n        }\n    }\n\n    useEffect(() => {\n        fetch()\n    }, [compare])\n\n    const condition = () => {\n        switch (compare) {\n            case ExpressionConst.IS_NULL:\n                return <></>\n            case ExpressionConst.IS_NOT_NULL:\n                return <></>\n            case ExpressionConst.IN:\n                return <Select loading={inCandidateLoading} mode=\"tags\" style={{ width: '300px' }}>\n                    {inCandidate.map(item => {\n                        return <Select.Option key={item.name} value={item.name}>{item.name}</Select.Option>\n                    })}\n                </Select>\n\n            case ExpressionConst.LIKE:\n                return <><Input style={{ width: '100px' }} /><span>LIKE 'a%o' means Finds any values that start with 'a' and ends with 'o' </span></>\n\n            default:\n                return <Input style={{ width: '100px' }} />\n        }\n    }\n\n    const ui = () => {\n        return <Form form={form} layout={\"inline\"}>\n            <Form.Item name=\"compare\" initialValue={record.compare}>\n                <Select initialValue={\"=\"}\n                    onChange={(value) => {\n                        setCompare(value)\n                        record.compare = value\n                    }}\n                    placeholder=\"compare\" style={{width:\"100px\"}}>\n                    <Select.Option value=\"=\">=</Select.Option>\n                    <Select.Option value=\"<\">{'<'}</Select.Option>\n                    <Select.Option value=\">\">{'>'}</Select.Option>\n                    <Select.Option value=\">=\">{'>='}</Select.Option>\n                    <Select.Option value=\"<=\">{'<='}</Select.Option>\n                    <Select.Option value=\"!=\">{'!='}</Select.Option>\n                    <Select.Option value={ExpressionConst.LIKE}>{'like'}</Select.Option>\n                    <Select.Option value={ExpressionConst.STARTS_WITH}>{'startsWith'}</Select.Option>\n                    <Select.Option value={ExpressionConst.ENDS_WITH}>{'endsWith'}</Select.Option>\n                    <Select.Option value={ExpressionConst.IN}>{'in'}</Select.Option>\n                    <Select.Option value={ExpressionConst.IS_NULL}>{'is null'}</Select.Option>\n                    <Select.Option value={ExpressionConst.IS_NOT_NULL}>{'is not null'}</Select.Option>\n                    <Select.Option value={ExpressionConst.IS_EMPTY}>{'is empty'}</Select.Option>\n                    <Select.Option value={ExpressionConst.IS_NOT_EMPTY}>{'is not empty'}</Select.Option>\n                </Select>\n            </Form.Item>\n            <Form.Item name=\"condition\" initialValue={record.condition} onChange={(value)=>{\n                if(typeof value !== \"string\"){\n                    record.condition = value.target.value\n                }else record.condition = value\n                \n            }}>\n                {condition()}\n            </Form.Item>\n        </Form>\n    }\n    return ui()\n}\nexport { FilterCondition, ExpressionConst, buildExpression }","import * as React from \"react\";\nimport { Form, Table, Button, Modal, Input, Select, Divider, Collapse } from 'antd';\nimport ApplyOrSave from \"../ApplyOrSave\";\nimport { FilterCondition } from \"./FilterCondition\";\nexport default class Compare extends React.Component {\n    constructor(props) {\n        super(props)\n        this.fitlerStation = props.parent\n        this.workshop = props.parent.workshop\n        this.state = this.wow(props.schemaFields)\n        this.forms = {}\n    }\n\n    reload = (data) => {\n        this.setState({ ...this.wow(data) })\n    }\n\n    wow = (schemaFields) => {\n        const fields = schemaFields\n        const data = fields.map(item => {\n            return { key: item.name, field: item.name, dataType: item.type, compare: \"=\", condition: \"\", command: \"\" }\n        })\n\n        const columns = [\n            {\n                title: \"field\",\n                dataIndex: \"field\"\n            },\n            {\n                title: \"dataType\",\n                dataIndex: \"dataType\",\n                render: (value, record) => {\n\n                    switch ((typeof value)) {\n                        case 'object':\n                            return <span>{value.type}</span>\n                        default:\n                            return <span>{value}</span>\n                    }\n                }\n            },\n            {\n                title: \"\",\n                dataIndex: \"compare\",\n                render: (value, record) => {\n                    return <FilterCondition forms={this.forms} record={record} workshop ={this.workshop}/>\n                }\n            }\n\n        ]\n        return { funcPopUp: false, data, columns }\n    }\n\n    buildSelectedRows = ()=>{\n        const fieldToDataType = {}\n        this.state.data.forEach(item=>{\n            fieldToDataType[item.field] = item.dataType\n        })\n\n        const params = Object.entries(this.forms).map(([key,value])=>{\n            const {compare,condition} = value.getFieldsValue()\n            if(compare){\n                return {field:key,compare,condition,dataType:fieldToDataType[key]}\n            }\n            return {}\n        })\n        if(!this.selectedRowKeys) {\n            return []\n        }\n        return params.filter(item => this.selectedRowKeys.includes(item.field))\n    }\n\n    addGroup = (values) => {        \n        const { groupName, groupType } = values\n        if (!groupName || !groupType) {\n            this.workshop.showInfo(\"Error: groupName and groupType is required.\")\n            return\n        }\n        if(!this.selectedRowKeys){\n            this.workshop.showInfo(\"Please select fields\")\n            return\n        }\n        \n        const selectedRows = this.buildSelectedRows()\n\n        this.fitlerStation.conGroups[groupName] = { groupName, groupType, tp: \"basic\", data: selectedRows }\n        if (this.fitlerStation.applyGroup) {\n            this.fitlerStation.applyGroup.reload({ data: this.fitlerStation.conGroups })\n        }\n        if (this.fitlerStation.groupGroup) {\n            this.fitlerStation.groupGroup.reload({ data: this.fitlerStation.conGroups })\n        }        \n        this.workshop.showInfo(\"Add successfully\")\n    }\n\n\n    render = () => {\n        const rowSelection = {\n            onChange: (selectedRowKeys, selectedRows) => {\n                this.selectedRowKeys = selectedRowKeys\n            },\n            getCheckboxProps: record => ({\n                name: record.field\n            })\n        }\n        return <div className=\"common-one-hundred-percent-width common-column-layout\">                     \n            <div style={{marginRight:\"30px\",width:\"80%\"}}>\n            <ApplyOrSave parent={this} onRollback={this.fitlerStation.onRollback} handlePersit={this.fitlerStation.handlePersit} handleTableInput={this.fitlerStation.handleTableInput} ref={(et) => this.fitlerStation.ApplyOrSaveRef = et} onSave={this.fitlerStation.onSave} onApply={()=>{\n                const selectedRows = this.buildSelectedRows()\n                this.fitlerStation.onNonGroupFilterApply(selectedRows)\n            }} style={{ marginBottom: \"30px\" }}></ApplyOrSave>                                  \n            <Table pagination={{pageSize:5,hideOnSinglePage:true}}            \n            rowSelection={{\n                type: \"checkbox\",\n                ...rowSelection,\n            }} columns={this.state.columns}\n                dataSource={this.state.data}>\n\n            </Table>\n            </div>\n            <Form onFinish={this.addGroup}>\n                <Form.Item name={\"groupName\"} label=\"Group Name\"><Input></Input></Form.Item>\n                <Form.Item name={\"groupType\"} label=\"Group Type\" defaultValue={\"and\"}><Select >\n                    <Select.Option value=\"and\">and</Select.Option>\n                    <Select.Option value=\"or\">or</Select.Option>\n                </Select></Form.Item>\n                <Form.Item >\n                    <Button type=\"primary\" htmlType=\"submit\">Add selected conditions to group</Button>                    \n                </Form.Item>\n            </Form> \n        </div>\n    }\n}","import * as React from \"react\";\nimport { Divider, Form, Table, Button, Modal, Input, Select } from 'antd';\nimport Tools from \"../../../common/Tools\";\nexport default class GroupGroup extends React.Component {\n    constructor(props) {\n        super(props)\n        this.fitlerStation = props.parent\n        this.workshop = props.parent.workshop\n        this.state = this.wow(props)\n    }\n\n    reload = (data) => {\n        this.setState({ ...this.wow(data) })\n    }\n\n    wow = (props) => {\n        const fields = Object.keys(props.data).map(item => { return { groupName: item } })\n\n        const data = fields.map(item => {\n            return { key: item.groupName, groupName: item.groupName }\n        })\n\n        const columns = [\n            {\n                title: \"groupName\",\n                dataIndex: \"groupName\"\n            }\n        ]\n        return { funcPopUp: false, data, columns }\n    }\n\n    addGroup = (values) => {\n        const { groupName, groupType } = values\n        if (!groupName || !groupType) {\n            this.workshop.showInfo(\"Error: groupName and groupType is required.\")\n            return\n        }\n        const selectedRows = this.selectedRowKeys.map(groupName => {\n            return this.fitlerStation.conGroups[groupName]\n        })\n        this.fitlerStation.conGroups[groupName] = { groupName, groupType, tp: \"group\", data: selectedRows }\n        if (this.fitlerStation.applyGroup) {\n            this.fitlerStation.applyGroup.reload({ data: this.fitlerStation.conGroups })\n        }\n        if (this.fitlerStation.groupGroup) {\n            this.fitlerStation.groupGroup.reload({ data: this.fitlerStation.conGroups })\n        }\n        this.workshop.showInfo(\"Add successfully\")\n    }\n\n\n    render = () => {\n        const rowSelection = {\n            onChange: (selectedRowKeys, selectedRows) => {\n                this.selectedRowKeys = selectedRowKeys\n            },\n            getCheckboxProps: record => ({\n                name: record.title\n            })\n        }\n        return <div >\n            <Form onFinish={this.addGroup}>\n                <Form.Item name={\"groupName\"} label=\"Group Name\"><Input></Input></Form.Item>\n                <Form.Item name={\"groupType\"} label=\"Group Type\" defaultValue={\"and\"}><Select >\n                    <Select.Option value=\"and\">and</Select.Option>\n                    <Select.Option value=\"or\">or</Select.Option>\n                </Select></Form.Item>\n                <Form.Item >\n                    <Button type=\"primary\" htmlType=\"submit\">Add selected</Button>\n                </Form.Item>\n            </Form>\n            <Table rowSelection={{\n                type: \"checkbox\",\n                ...rowSelection,\n            }} columns={this.state.columns}\n                dataSource={this.state.data}>\n            </Table>\n        </div>\n    }\n}","import * as React from \"react\";\nimport {  Form,  Select } from 'antd';\nimport Tools from \"../../../common/Tools\";\nexport default class ApplyGroup extends React.Component {\n    constructor(props) {\n        super(props)\n        this.fitlerStation = props.parent\n        this.workshop = props.parent.workshop        \n        this.state = this.wow(props)        \n    }\n\n    reload = (data)=>{\n       this.setState({...this.wow(data)}) \n    }\n      \n    wow = (props) => {        \n        const fields = Object.keys(props.data).map(item => { return { groupName: item } })\n\n        const data = fields.map(item => {\n            return { key: item.groupName, groupName: item.groupName }\n        })              \n        return { data,refresh:Math.random()}\n    }\n\n    onChange = (value) => {\n        this.groupName = value\n    }\n\n    render = () => {\n\n        return <div >\n            <Form key={this.state.refresh}>                \n                <Form.Item label=\"Select group name to apply:\">\n                    <Select onChange={this.onChange} >\n                        {this.state.data.map(item => {                            \n                            return <Select.Option key={item.key} value={item.groupName}>\n                                {item.groupName}\n                            </Select.Option>\n                        })}\n                    </Select>\n                </Form.Item>\n            </Form>\n        </div>\n    }\n}","import * as React from \"react\";\nimport { Tabs, Divider } from 'antd';\nimport ApplyOrSave from \"../ApplyOrSave\";\nimport '../common.scss'\nimport mix from \"../../../common/mixin\"\nimport { StationCommonOp } from \"../commonops/StationCommonOp\";\nimport Compare from \"./Compare\"\nimport GroupGroup from \"./GroupGroup\";\nimport ApplyGroup from \"./ApplyGroup\";\nimport Tools from \"../../../common/Tools\";\nimport { buildExpression } from \"./FilterCondition\";\n\nconst { TabPane } = Tabs;\n\n\nexport default class FilterStation extends mix(React.Component).with(StationCommonOp) {\n    constructor(props) {\n        super(props)\n        this.workshop = props.parent.workshop\n        this.conGroups = {}\n        this.currentConditions = {}\n    }\n\n    static buildCondition = (items) => {\n        return items.map(item => {\n            return buildExpression(item)\n        })\n    }\n\n    onNonGroupFilterApply = async (selectedRows) => {\n        if (selectedRows.length === 0) {\n            this.workshop.showInfo(\"Please select fields\")\n            return\n        }\n        const filterStr = selectedRows.flatMap(item => {\n            return FilterStation.buildCondition([item])\n        }).join(\" and \")\n\n        this.ApplyOrSaveRef.enter()\n        const tableName = Tools.getTempTableName()\n        const sql = `select * from ${this.workshop.getLastApplyTable().tableName} \n        where ${filterStr}\n        as ${tableName};`\n\n        await this.workshop.apply({ tableName, sql })\n        this.ApplyOrSaveRef.exit()\n        // this.workshop.refreshOperateStation()\n    }\n    onFilterApply = async () => {\n        const groupName = this.applyGroup.groupName\n        if (!groupName) {\n            this.workshop.showInfo(\"Choose the group name to apply.\")\n            return\n        }\n        const group = this.conGroups[groupName]\n\n        function buildFilter(group) {\n            if (group.tp === \"basic\") {\n                if (group.groupType === \"and\") {\n                    return `(${FilterStation.buildCondition(group.data).join(\" and \")})`\n                } else return `(${FilterStation.buildCondition(group.data).join(\" or \")})`\n            } else {\n                if (group.groupType === \"and\") {\n                    const temp = group.data.flatMap(item => {\n                        return buildFilter(item)\n                    }).join(\" and \")\n                    return `(${temp})`\n                } else {\n                    const temp = group.data.flatMap(item => {\n                        return buildFilter(item)\n                    })\n                    return `(${temp.join(\" or \")})`\n                }\n\n            }\n\n        }\n        const filterStr = buildFilter(group)\n\n        this.ApplyOrSaveRef.enter()\n        const tableName = Tools.getTempTableName()\n        const sql = `select * from ${this.workshop.getLastApplyTable().tableName} \n        where ${filterStr}\n        as ${tableName};`\n\n        await this.workshop.apply({ tableName, sql })\n        this.ApplyOrSaveRef.exit()\n        //this.workshop.refreshOperateStation()\n    }\n\n    render() {\n        return <div>\n            <div className={\"station-menu\"}>\n                <Tabs defaultActiveKey=\"1\" className={\"station-tabs\"}>\n\n                    <TabPane tab=\"Add Conditions to Group\" key=\"1\">\n                        <Compare ref={(et) => this.compare = et} parent={this} schemaFields={this.workshop.currentTable.schema.fields}></Compare>\n                    </TabPane>\n                    <TabPane tab=\"Apply Group\" key=\"2\">\n                        <ApplyOrSave parent={this} onRollback={this.onRollback} handlePersit={this.handlePersit} handleTableInput={this.handleTableInput} ref={(et) => this.ApplyOrSaveRef = et} onSave={this.onSave} onApply={this.onFilterApply} style={{ marginBottom: \"30px\" }}></ApplyOrSave>\n                        <Divider />\n                        <ApplyGroup ref={(et) => this.applyGroup = et} parent={this} data={this.conGroups}></ApplyGroup>\n                    </TabPane>\n                    <TabPane tab=\"Add Groups to Group\" key=\"3\">\n                        <GroupGroup ref={(et) => this.groupGroup = et} parent={this} data={this.conGroups}></GroupGroup>\n                    </TabPane>\n\n                </Tabs>\n            </div>\n            <div>\n\n            </div>\n        </div>\n    }\n}","import ActionMaker from \"../../../ActionMaker\"\nimport Tools from \"../../../../common/Tools\"\nimport ApplyActionUtils from \"../../common/ApplyActionUtils\"\n\nexport const { handler: OrderApplyActionHandler, action: OrderApplyAction } = ActionMaker.buildHandler(async (action) => {\n    return ApplyActionUtils.apply(action,\n        (values) => {\n            if (Object.keys(values).length === 0) {\n                return \"Please configure order fields then click apply\"\n            }\n            return undefined\n        },\n        (workshop, values) => {\n            const tableName = Tools.getTempTableName()\n            const orderStr = Object.keys(values).map(key => {\n                return ` ${Tools.getField(key)} ${values[key]} `\n            }).join(\",\")\n\n            const sql = `select * from ${workshop.getLastApplyTable().tableName}\n            order by  ${orderStr}\n            as ${tableName};`\n            return { tableName, sql }\n        })\n})","import { AddFieldActionHandler, AddFieldAction } from \"../../common/actions/AddFieldAction\";\nimport { RemoveFieldActionHandler, RemoveFieldAction } from \"../../common/actions/RemoveFieldAction\";\nimport { SetStateAction, SetStateActionHandler } from \"../../common/actions/SetStateAction\";\nimport { OrderApplyActionHandler, OrderApplyAction } from \"./OrderApplyAction\";\n\nclass OrderStationActionNames {\n    static ADD_FIELD = \"addField\"\n    static REMOVE_FIELD = \"removeField\"\n}\n\nconst OrderStationHandlers = {\n    [OrderStationActionNames.ADD_FIELD]: AddFieldActionHandler,\n    [OrderStationActionNames.REMOVE_FIELD]: RemoveFieldActionHandler,\n    setState: SetStateActionHandler,    \n    apply: OrderApplyActionHandler\n}\n\nconst OrderStationActions = {\n    [OrderStationActionNames.ADD_FIELD]: AddFieldAction,\n    [OrderStationActionNames.REMOVE_FIELD]: RemoveFieldAction,\n    setState: SetStateAction,    \n    apply: OrderApplyAction\n}\n\nfunction OrderStationReducer(state, action) {\n    return OrderStationActions[action.type](state, action.data)    \n}\nexport { OrderStationActionNames, OrderStationReducer, OrderStationHandlers }","import React, { useState, useCallback, useEffect } from 'react';\nimport { Form, Tag, Divider, Select, Button,Modal,Input,Switch } from 'antd'\nimport { useReducerAsync } from 'use-reducer-async'\nimport { OrderStationReducer, OrderStationHandlers, OrderStationActionNames } from './actions/OrderStationReducer';\nimport AlertBox from '../../AlertBox';\nimport { ApplySaveRollback } from '../../apply_save_rollback/ApplySaveRollback';\n\n\n\nconst initState = {\n    operateFileds: [],\n    error: undefined,  \n    //为了回调applySaveRollback组件  \n    applySaveRollbackDispacher:undefined\n}\n\nconst OrderStationContext = React.createContext()\nconst { Option } = Select;\nfunction OrderStation(props) {\n    const workshop = props.parent.workshop\n    const fields = workshop.currentTable.schema.fields\n    const [state, dispacher] = useReducerAsync(OrderStationReducer, initState, OrderStationHandlers)\n    const { operateFileds, error,applySaveRollbackDispacher} = state\n    const [form] = Form.useForm()\n\n    const children = fields.map(item => {\n        return <Option key={item.name}>{item.name}</Option>\n    })\n    \n    useEffect(()=>{\n        if(applySaveRollbackDispacher){\n            form.submit()\n        }       \n    },[applySaveRollbackDispacher])\n\n    return (\n        <OrderStationContext.Provider value={{ dispacher }}>\n            <div style={{ marginTop: \"10px\", \"width\": \"400px\" }}>\n                {\n                    error && <AlertBox message={error}></AlertBox>\n                }\n                <Form form={form} onFinish={(values) => {                    \n                    dispacher({\n                        type: \"apply\",\n                        data: {\n                            workshop,\n                            values                                                    \n                        }\n                    })\n                }} className=\"login-form\" >\n                    <Form.Item>\n                        <ApplySaveRollback context={OrderStationContext} workshop={workshop}/>\n                    </Form.Item>\n                    <Form.Item label=\"Choose fields\" >\n                        <Select\n                            mode=\"multiple\"\n                            onDeselect={value => {\n                                dispacher({\n                                    type: OrderStationActionNames.REMOVE_FIELD,\n                                    data: { fields: value }\n                                })\n                            }}\n                            onChange={(values) => {\n                                dispacher({\n                                    type: OrderStationActionNames.ADD_FIELD,\n                                    data: { fields: values }\n                                })\n                            }}\n                        >\n                            {children}\n                        </Select>\n                    </Form.Item>\n\n                    {operateFileds.map(item => {\n                        return <Form.Item initialValue={\"desc\"} key={item.field} label={item.field} name={item.field}>\n                            <Select>\n                                <Select.Option value=\"desc\">desc</Select.Option>\n                                <Select.Option value=\"asc\">asc</Select.Option>\n                            </Select>\n                        </Form.Item>\n                    })}\n                </Form>\n            </div>\n        </OrderStationContext.Provider>\n    )\n}\nexport { OrderStation, OrderStationContext }","import ActionMaker from \"../../../ActionMaker\"\nimport Tools from \"../../../../common/Tools\"\nimport ApplyActionUtils from '../../common/ApplyActionUtils'\n\nexport const {handler:LimitApplyActionHandler,action:LimitApplyAction} = ActionMaker.buildHandler(async (action)=>{\n    return ApplyActionUtils.apply(action,\n        (values)=>{\n            if(Object.keys(values).length == 0){\n                return \"Please configure limit size then click apply.\"\n            }\n            if(!values.limitSize){\n                return \"Please configure limit size then click apply.\"\n            }\n            return undefined\n        },\n        (workshop,values)=>{\n            const tableName = Tools.getTempTableName()\n            const limitStr = values.limitSize\n            \n            const sql = `select * from ${workshop.getLastApplyTable().tableName}\n            limit  ${limitStr}\n            as ${tableName};`\n            return {tableName,sql}\n        })    \n})","import { CommonHandlers,CommonActions} from \"../../common/CommonHandlers\"\nimport { LimitApplyAction, LimitApplyActionHandler } from \"./LimitApplyAction\"\n\nclass LimitStationActionNames {}\nconst LimitStationHandlers = {\n    ...CommonHandlers,apply:LimitApplyActionHandler\n}\nconst LimitStationActions = {\n    ...CommonActions,apply:LimitApplyAction\n}\n\nfunction LimitStationReducer(state, action) {\n    return LimitStationActions[action.type](state, action.data)\n}\nexport { LimitStationActionNames, LimitStationReducer, LimitStationHandlers }","import React, { useState, useCallback, useEffect } from 'react';\nimport { useReducerAsync } from 'use-reducer-async'\nimport { LimitStationReducer, LimitStationHandlers } from './actions/LimitStationReducer';\nimport AlertBox from '../../AlertBox';\nimport { Form, Tag, Divider, Select, Button,Modal,Input,Switch } from 'antd'\nimport { ApplySaveRollback } from '../../apply_save_rollback/ApplySaveRollback';\n\n\nconst initState = {\n    limitSize: undefined,\n    error: undefined,\n    //为了回调applySaveRollback组件  \n    applySaveRollbackDispacher: undefined\n}\n\nconst LimitStationContext = React.createContext()\n\nfunction LimitStation(props) {\n    const workshop = props.parent.workshop\n    const [state, dispacher] = useReducerAsync(LimitStationReducer, initState, LimitStationHandlers)\n    const { limitSize, error, applySaveRollbackDispacher } = state\n    const [form] = Form.useForm()\n\n    useEffect(()=>{\n        if(applySaveRollbackDispacher){\n            form.submit()\n        }       \n    },[applySaveRollbackDispacher])\n\n    return (\n        <LimitStationContext.Provider value={{ dispacher }}>\n            <div style={{ marginTop: \"10px\", \"width\": \"400px\" }}>\n                {\n                    error && <AlertBox message={error}></AlertBox>\n                }\n                <Form form={form} onFinish={(values) => {\n                    dispacher({\n                        type: \"apply\",\n                        data: {\n                            workshop,\n                            values\n                        }\n                    })\n                }} className=\"login-form\" >\n                    <Form.Item>\n                        <ApplySaveRollback context={LimitStationContext} workshop={workshop} />\n                    </Form.Item>\n                    <Form.Item name=\"limitSize\">\n                        <Input/>\n                    </Form.Item>\n                </Form>\n            </div>\n\n        </LimitStationContext.Provider>\n    )\n}\nexport { LimitStation, LimitStationContext }","import ActionMaker from \"../../../ActionMaker\"\n\nexport const {handler:BuildGroupActionHandler,action:BuildGroupAction} = ActionMaker.buildHandler(async (action)=>{\n    const result = action.__state.result\n    result.groupFields = action.data.groupFields\n    return {        \n        data: {\n            current: action.__state.current + 1,\n            result  \n        }\n    }\n})","import ActionMaker from \"../../../ActionMaker\"\n\nexport const {handler:BuildOrderActionHandler,action:BuildOrderAction} = ActionMaker.buildHandler(async (action)=>{\n    const result = action.__state.result\n    result.orderFields = action.data.orderFields\n    return {        \n        data: {\n            current: action.__state.current + 1,\n            result \n        }\n    }\n})","import ActionMaker from \"../../../ActionMaker\"\n\nexport const {handler:BuildRowWindowsActionHandler,action:BuildRowWindowsAction} = ActionMaker.buildHandler(async (action)=>{\n    const result = action.__state.result\n    result.rowWindows = action.data.rowWindows\n    return {        \n        data: {\n            current: action.__state.current + 1,\n            result  \n        }\n    }\n})","import ActionMaker from \"../../../ActionMaker\"\nimport Tools from \"../../../../common/Tools\"\n\nexport const { handler: WindowApplyActionHandler, action: WindowApplyAction } = ActionMaker.buildHandler(async (action) => {\n    const { groupFields,\n        orderFields,\n        rowWindows\n         } = action.__state.result\n    const {workshop,functions} = action.data\n\n    const partitionByStr = groupFields.map(item => {\n        return Tools.getField(item.field)\n    }).join(\",\")\n\n    const orderBy = orderFields.map(item => {\n        return `${Tools.getField(item.field)} ${item.value}`\n    })\n\n    let orderByStr = \"\"\n    if (orderBy.length > 0) {\n        orderByStr = `order by ${orderBy.join(\",\")}`\n    }\n\n    const { windowType, preceding, following } = rowWindows\n    let windowStr = \"\"\n    \n    //UNBOUNDED /CURRENT ROW\n    let precedingStr = (preceding  && `${preceding} PRECEDING`) || \"UNBOUNDED PRECEDING\"\n    let followingStr = (following && `${following} FOLLOWING`) || \"UNBOUNDED FOLLOWING\"\n\n    if(precedingStr === \"UNBOUNDED PRECEDING\" && followingStr===\"UNBOUNDED FOLLOWING\"){\n        followingStr = \"CURRENT ROW\"\n    }\n   \n    if (windowType) {\n        switch (windowType) {\n            case \"row window\":\n                windowStr = `ROWS BETWEEN ${precedingStr}  and ${followingStr} `\n                break;\n            case \"range window\":\n                windowStr = `RANGE BETWEEN ${precedingStr}  and ${followingStr} `\n                break;\n        }\n    }\n\n    const selectStr = functions.map(item=>{\n        const { field, isAgg, transformCode, columnName } = item\n        return `${transformCode} over w as ${columnName}`\n    }).join(\",\")\n\n    const oldFields = workshop.currentTable.schema.fields.map(item=>Tools.getField(item.name)).join(\",\")\n    const tableName = Tools.getTempTableName()\n    const sql = `\n     select ${oldFields},${selectStr}\n     from ${workshop.getLastApplyTable().tableName} \n     window w as (\n         partition by ${partitionByStr} ${orderByStr} ${windowStr}\n     ) as ${tableName};\n    `\n    // console.log(sql)\n    \n    await workshop.apply({tableName,sql})\n    // setLoading(false)\n    workshop.refreshOperateStation()\n    return {\n        data: {}\n    }\n})","import { CommonHandlers, CommonActions } from '../../common/CommonHandlers'\nimport { BuildGroupAction, BuildGroupActionHandler } from './BuildGroupAction'\nimport { BuildOrderAction, BuildOrderActionHandler } from './BuildOrderAction'\nimport { BuildRowWindowsAction, BuildRowWindowsActionHandler } from './BuildRowWindowsAction'\nimport { WindowApplyActionHandler, WindowApplyAction } from './WindowApplyAction'\nclass WindowStationActionNames {\n    static buildGroup = \"buildGroup\"\n    static buildOrder = \"buildOrder\"\n    static buildRowWindows = \"buildRowWindows\"\n    static apply = \"apply\"\n}\nconst WindowStationHandlers = {\n    ...CommonHandlers,\n    [WindowStationActionNames.buildGroup]: BuildGroupActionHandler,\n    [WindowStationActionNames.buildOrder]: BuildOrderActionHandler,\n    [WindowStationActionNames.buildRowWindows]: BuildRowWindowsActionHandler, \n    apply: WindowApplyActionHandler   \n}\nconst WindowStationActions = {\n    ...CommonActions,\n    [WindowStationActionNames.buildGroup]: BuildGroupAction,\n    [WindowStationActionNames.buildOrder]: BuildOrderAction,\n    [WindowStationActionNames.buildRowWindows]: BuildRowWindowsAction,\n    apply: WindowApplyAction \n}\n\nfunction WindowStationReducer(state, action) {\n    return WindowStationActions[action.type](state, action.data)\n}\nexport { WindowStationActionNames, WindowStationReducer, WindowStationHandlers }","import React, { useState, useCallback, useEffect } from 'react';\nimport { Form, Tag, Divider, Select, Button, Modal, Input, Switch } from 'antd'\nimport AlertBox from '../../../AlertBox';\nimport { ApplySaveRollback } from '../../../apply_save_rollback/ApplySaveRollback';\nconst { Option } = Select;\nfunction useSelectFields(props) {\n    const { workshop,\n        dispacher,\n        context,\n        enableApply = false,\n        fieldWrapper,submit,selectFields,\n        selectFieldsLabel=\"Choose fields\",\n        selectFieldsMode=\"multiple\"\n    } = props\n    const fields = selectFields || workshop.currentTable.schema.fields\n    const [operateFields, setOperateFields] = useState([])\n    const [error, setError] = useState(undefined)\n    const [form] = Form.useForm()\n\n    const children = fields.map(item => {\n        return <Option key={item.name}>{item.name}</Option>\n    })\n\n    const ui = (commands) => {\n        return <Form form={form} className=\"login-form\" onFinish={submit} >\n                {\n                  error && <AlertBox onClose={()=>{setError(undefined)}} message={error}></AlertBox>\n                }\n                {enableApply && <Form.Item>\n                    <ApplySaveRollback context={context} workshop={workshop} />\n                </Form.Item>\n                }\n                <Form.Item label={selectFieldsLabel} name=\"selectFieldsName\">\n                    <Select\n                        style={{\"minWidth\":\"200px\"}}                        \n                        mode={selectFieldsMode}\n                        onDeselect={value => {                            \n                            setOperateFields(operateFields.filter(item => value !== item.field))\n                        }}\n                        onChange={(values) => {  \n                            if(selectFieldsMode===\"multiple\"){\n                                setOperateFields(values.map(field => {\n                                    return { field }\n                                }))\n                            }else {\n                                setOperateFields([{ field:values }])\n                            }\n                            \n                        }}\n                    >\n                        {children}\n                    </Select>\n                </Form.Item>\n\n                {operateFields.map(item => {\n                    return fieldWrapper(item)\n                })}\n\n                {commands}\n\n            </Form>        \n    }\n\n    return { ui, operateFields, form, setError }\n\n}\n\nexport default useSelectFields\n\n","import React, { useState, useCallback, useEffect, useContext } from 'react';\nimport useSelectFields from '../../common/pages/SelectFieldsToOperate';\nimport {Form,Button, Divider} from 'antd';\nimport { WindowStationContext } from '../WindowStation';\nimport { WindowStationActionNames } from '../actions/WindowStationReducer';\n\n\nfunction BuildGroup(props) {  \n    const {dispacher} = useContext(WindowStationContext)  \n    const {ui,operateFields,setError} = useSelectFields({\n        workshop:props.workshop,\n        fieldWrapper:(item)=>{return <></>}\n    })    \n    return (\n        ui([<Form.Item key={\"button\"}>\n            <Button type=\"primary\" onClick={\n                ()=>{   \n                    if(operateFields.length===0){\n                        setError(\"Fields are required.\")\n                        return \n                    }                 \n                    dispacher({\n                        type: WindowStationActionNames.buildGroup,\n                        data: {groupFields:operateFields}\n                    })                    \n                }\n            }>\n                Next\n            </Button>\n        </Form.Item>])\n    )\n}\nexport {BuildGroup}","import React, { useContext} from 'react';\nimport { WindowStationContext } from '../WindowStation';\nimport useSelectFields from '../../common/pages/SelectFieldsToOperate';\nimport {Form,Button,Select,Divider} from 'antd';\nimport { WindowStationActionNames } from '../actions/WindowStationReducer';\n\nfunction SetupGroupRowOrder(props) {\n    const {dispacher} = useContext(WindowStationContext)  \n    const {ui,operateFields,setError,form} = useSelectFields({\n        workshop:props.workshop,\n        fieldWrapper:(item)=>{return <Form.Item initialValue={\"desc\"} key={item.field} label={item.field} name={item.field}>\n        <Select>\n            <Select.Option value=\"desc\">desc</Select.Option>\n            <Select.Option value=\"asc\">asc</Select.Option>\n        </Select>\n    </Form.Item>}\n    })    \n    return (\n        ui([<Form.Item>\n            <Button type=\"primary\" onClick={\n                ()=>{                     \n                    const orderFieldsObj = form.getFieldValue() \n                    const orderFields = operateFields.map(item=>{\n                        return {field:item.field, value:orderFieldsObj[item.field]}\n                    })                   \n                    dispacher({\n                        type: WindowStationActionNames.buildOrder,\n                        data: {orderFields:orderFields}\n                    })                    \n                }\n            }>\n                Next\n            </Button>\n            <Divider type=\"vertical\"/>\n            <Button  onClick={\n                ()=>{   \n                                                         \n                    dispacher({\n                        type: \"setState\",\n                        data: {current:0}\n                    })                    \n                }\n            }>\n                Previous\n            </Button>\n        </Form.Item>])\n    )\n}\nexport {SetupGroupRowOrder}","import React, { useState, useCallback, useEffect, useContext } from 'react';\nimport useSelectFields from '../../common/pages/SelectFieldsToOperate';\nimport { Form, Button, Divider, Input } from 'antd';\nimport { WindowStationContext } from '../WindowStation';\nimport { WindowStationActionNames } from '../actions/WindowStationReducer';\n\n\nfunction BuildWindowOnGroup(props) {\n    const { dispacher } = useContext(WindowStationContext)\n    const { ui, operateFields, setError, form } = useSelectFields({\n        workshop: props.workshop,\n        fieldWrapper: (item) => {\n            switch (item.field) {\n                case \"row window\":\n                    return <>\n                        <Form.Item label=\"Preceding\" name=\"preceding\">\n                            <Input placeholder={\"number\"} />\n                        </Form.Item>\n                        <Form.Item label=\"Following\" name=\"following\">\n                            <Input placeholder={\"number\"} />\n                        </Form.Item>\n                    </>\n                case \"range window\":\n                    return <>\n                        <Form.Item label=\"Preceding\" name=\"preceding\">\n                            <Input placeholder={\"number\"} />\n                        </Form.Item>\n                        <Form.Item label=\"Following\" name=\"following\">\n                            <Input placeholder={\"number\"} />\n                        </Form.Item>\n                    </>\n            }\n        },\n        selectFields: [{ name: \"row window\" }, { name: \"range window\" }],\n        selectFieldsLabel: \"Window Type\", selectFieldsMode: \"single\"\n    })\n    return (\n        ui([<Form.Item>\n            <Button type=\"primary\" onClick={\n                () => {\n                    const { selectFieldsName } = form.getFieldValue()\n                    const rowWindows = { ...form.getFieldValue(), windowType: selectFieldsName }                \n                    dispacher({\n                        type: WindowStationActionNames.buildRowWindows,\n                        data: { rowWindows }\n                    })\n                }\n            }>\n                Next\n            </Button><Divider type=\"vertical\"/>\n            <Button  onClick={\n                ()=>{   \n                                                         \n                    dispacher({\n                        type: \"setState\",\n                        data: {current:1}\n                    })                    \n                }\n            }>\n                Previous\n            </Button>\n        </Form.Item>])\n    )\n}\nexport { BuildWindowOnGroup }","import React, { useState, useCallback, useEffect } from 'react';\nimport { Select, Form, Input, Switch, Divider,Collapse } from 'antd';\nimport EngineService from '../../../service/EngineService';\nimport FuncDesc from '../../FuncDesc';\nimport Tools from '../../../../common/Tools';\nimport AlertBox from '../../../AlertBox';\n\nconst { Panel } = Collapse;\n\nfunction useFieldTransform(props) {\n    const { operateField } = props\n    const [funcs, setFuncs] = useState([])\n    const [currentFunc, setCurrentFunc] = useState(undefined)\n    const [form] = Form.useForm()\n    const [error, setError] = useState(undefined)\n\n    const fetchFuncs = async () => {\n        const res = await EngineService.showFunctions()\n        const data = res.content.map((item) => {\n            return {\n                value: item.key.table,\n                text: item.key.table,\n                funcValue: item.columns[0],\n                returnValue: item.columns[1],\n                params: item.columns.slice(2, item.columns.length)\n            }\n        })\n        setFuncs(data)\n    }\n    useEffect(() => {\n        fetchFuncs()\n    }, [])\n\n    const handleChange = useCallback(async (value) => {\n        const currentFunc = funcs.filter(item => item.value === value)[0]\n        setCurrentFunc(currentFunc)\n    }, [funcs])\n\n    const showColumn = (item) => {\n        if (item.extra.column === \"yes\") {\n            return operateField\n        } else return \"\"\n    }\n\n    const getTransform = () => {\n        const { mannualTransform, isMannualAgg, newFieldName } = form.getFieldValue()\n        if (mannualTransform) {\n            return {\n                field: operateField,\n                isAgg: isMannualAgg || false,\n                transformCode: mannualTransform,\n                columnName: newFieldName\n            }\n        }\n        if(!currentFunc){\n            setError(\"Operate is required.\")\n            return {}\n        }\n        const params = []\n        currentFunc.params.forEach(item => {\n            let v = form.getFieldValue()[item.name]\n            if (!v && item.extra.column === \"yes\") {\n                v = operateField\n            }\n            if (v) {\n                if (item.extra.column === \"yes\") {\n                    params.push(Tools.getField(v))\n                } else if (item.dataType == \"number\" || item.dataType == \"boolean\") {\n                    params.push(v)\n                }\n                else {\n                    params.push(`\"${v}\"`)\n                }\n            }\n        })\n        const field = operateField\n        const isAgg = currentFunc.funcValue.extra.agg === \"yes\"\n        return { field, isAgg, transformCode: `${currentFunc.value}(${params.join(\",\")})`, columnName: newFieldName }\n    }\n\n\n    const ui = (commands,extra) => {\n        return <Form form={form} className=\"login-form\">\n            {\n                error && <AlertBox onClose={() => { setError(undefined) }} message={error}></AlertBox>\n            }\n            <Form.Item label={\"Search function\"}>\n                <Select\n                    showSearch\n                    defaultActiveFirstOption={false}\n                    showArrow={true}\n                    style={{ width: \"200px\" }}\n                    filterOption={true}\n                    onChange={handleChange}\n                    notFoundContent={\"type function name\"}\n                >\n                    {funcs.map(d => <Select.Option key={d.value}>{d.text}</Select.Option>)}\n                </Select>\n            </Form.Item>\n\n            {\n                currentFunc && <Form.Item key={currentFunc.value}><FuncDesc func={currentFunc}></FuncDesc></Form.Item>\n            }\n            {\n                currentFunc && currentFunc.params.map(item => {\n                    return <Form.Item initialValue={showColumn(item)} key={item.name} name={item.name} label={item.name}><Input  />\n                    </Form.Item>\n                })\n            }            \n            <Form.Item>\n                <Collapse>\n                    <Panel header=\"Mannually Apply Function\">\n                    <Divider type=\"horizontal\" />\n                    <Form.Item name=\"mannualTransform\" label=\"Mannual Transform\"><Input /></Form.Item>\n                    <Form.Item name=\"isMannualAgg\" label=\"Is Agg Function\"><Switch></Switch></Form.Item>\n                    </Panel>\n                </Collapse>\n            </Form.Item>\n            {extra}\n            <Form.Item name=\"newFieldName\" label=\"New Field Name\" required><Input /></Form.Item>\n            {commands}\n            \n        </Form>\n    }\n    return {\n        ui, form, getTransform, setError\n    }\n}\nexport { useFieldTransform }","import React, { useState, useCallback, useEffect, useContext } from 'react';\nimport { WindowStationContext } from '../WindowStation';\nimport { ApplyFunc, useFieldTransform } from '../../common/pages/ApplyFunc';\nimport { Form, Button, Collapse, Divider,List,Typography } from 'antd';\nimport { WindowStationActionNames } from '../actions/WindowStationReducer';\nconst { Panel } = Collapse;\n\n\nfunction ApplyFunction(props) {\n    const { workshop } = props\n    const { dispacher } = useContext(WindowStationContext)\n    const { ui, form, getTransform, setError } = useFieldTransform({\n        operateField: \"\"\n    })\n    const [loading, setLoading] = useState(false)    \n    const [funcs, setFuncs] = useState([])\n\n    return <>        \n        {\n            ui([\n                <Form.Item>\n                    <Button type=\"primary\" loading={loading} onClick={\n                        () => {\n                            let functions = []  \n                            if(funcs.length === 0){\n                                const { field, isAgg, transformCode, columnName } = getTransform()\n                                functions.push({ field, isAgg, transformCode, columnName })                            \n                                if (!columnName) {\n                                    setError(\"New Field Name is required.\")\n                                    return\n                                }\n                            } else {\n                                functions = funcs\n                            }                                                      \n                            setLoading(true)\n                            dispacher({\n                                type: WindowStationActionNames.apply,\n                                data: {\n                                    setLoading,\n                                    workshop,\n                                    functions\n                                }\n                            })\n                        }\n                    }>\n                        Apply\n                </Button><Divider type=\"vertical\"/> \n                <Button loading={loading} onClick={\n                        () => {\n                            const { field, isAgg, transformCode, columnName } = getTransform()\n                            if (!columnName) {\n                                setError(\"New Field Name is required.\")\n                                return\n                            }\n                            setFuncs(funcs.concat([{ field, isAgg, transformCode, columnName }]))\n                            form.resetFields()\n                        }\n                    }>\n                        Add\n                </Button><Divider type=\"vertical\"/>\n            <Button  onClick={\n                ()=>{   \n                                                         \n                    dispacher({\n                        type: \"setState\",\n                        data: {current:2}\n                    })                    \n                }\n            }>\n                Previous\n            </Button>\n                </Form.Item>\n            ])\n        }\n        {\n            funcs.length >0 &&  <List style={{width:\"500px\"}}\n            header={<div>Added Functions</div>}            \n            bordered\n            dataSource={funcs.map(item=>`${item.transformCode} as ${item.columnName}`)}\n            renderItem={item => (\n              <List.Item>\n                <Typography.Text mark>Func</Typography.Text> {item}\n              </List.Item>\n            )}\n          />\n        }\n    </>\n}\nexport { ApplyFunction }","import React, { useState, useCallback, useEffect } from 'react';\nimport { useReducerAsync } from 'use-reducer-async'\nimport { WindowStationReducer, WindowStationHandlers } from './actions/WindowStationReducer';\nimport \"../join/JoinStation.scss\"\nimport { Form, Select, Steps } from 'antd';\nimport styled from 'styled-components'\nimport { BuildGroup } from './pages/BuildGroup';\nimport { SetupGroupRowOrder } from './pages/SetupGroupRowOrder';\nimport { BuildWindowOnGroup } from './pages/BuildWindowOnGroup';\nimport { ApplyFunction } from './pages/ApplyFunction';\nconst { Step } = Steps;\n\nconst StepContent = styled.div`\nborder: 1px dashed #e9e9e9;\nborder-radius: 6px;\nbackground-color: #fafafa;\nmin-height: 200px;\npadding: 30px 30px;\nwidth: 100%;\ndisplay:flex;\nalign-items:center;\njustify-content:center;\nflex-direction: column;\n`\n\n\nconst WindowStationContext = React.createContext()\n\nfunction WindowStation(props) {\n    const workshop = props.parent.workshop\n    const initState = {\n        steps: [<BuildGroup workshop={workshop}/>,\n        <SetupGroupRowOrder workshop={workshop}/>,\n        <BuildWindowOnGroup workshop={workshop}/>,\n        <ApplyFunction workshop={workshop}/>\n    ],\n        current: 0,\n        result:{\n            groupFields: [],\n            orderFields: [],\n            rowWindows: []            \n        }\n    }\n    const [state, dispacher] = useReducerAsync(WindowStationReducer, initState, WindowStationHandlers)\n    const { steps, current } = state\n    return (\n        <WindowStationContext.Provider value={{ dispacher }}>\n            <div className=\"join-app\">               \n                <div style={{marginTop:\"30px\"}}>\n                    <Steps current={current}>\n                        <Step key={0} title=\"Build Group\" description=\"Choose fields to group data\" />\n                        <Step key={1} title=\"Setup Group Row Order\" description=\"Choose fields to order the data in group\" />\n                        <Step key={2} title=\"Build Window\" description=\"Build window on every row of every group\" />\n                        <Step key={3} title=\"Apply Function\" description=\"Apply functions to all windows we have created\" />\n                    </Steps>\n                </div>\n                <div className=\"join-app-form\"> \n                    <StepContent>{steps[current]} </StepContent> \n                </div>\n            </div>\n        </WindowStationContext.Provider>\n    )\n}\nexport { WindowStation, WindowStationContext }","import { CommonHandlers,CommonActions} from '../../common/CommonHandlers'\nclass DashStationActionNames {}\nconst DashStationHandlers = {\n    ...CommonHandlers\n}\nconst DashStationActions = {\n    ...CommonActions\n}\n\nfunction DashStationReducer(state, action) {\nreturn DashStationActions[action.type](state, action.data)    \n}\nexport { DashStationActionNames, DashStationReducer, DashStationHandlers }","import React, { useState, useCallback, useEffect } from 'react';\nimport { useReducerAsync } from 'use-reducer-async'\nimport { DashStationReducer, DashStationHandlers } from './actions/DashStationReducer';\nimport './DashStation.scss'\nimport { Form, Input, Select, Divider } from 'antd';\nimport { useDataConfig } from './pages/useDataConfig';\nimport { useDashConfig } from './pages/useDashConfig';\nimport { ActionProxy } from '../../../backend_service/ActionProxy';\nimport RemoteAction from '../../../backend_service/RemoteAction';\nimport Tools from '../../../common/Tools';\nimport { ApplySaveRollback } from '../../apply_save_rollback/ApplySaveRollback';\n\n\nconst initState = {\n    applySaveRollbackDispacher: undefined,\n    scriptContent:undefined,\n    applyToken: Tools.getJobName()\n}\n\nconst DashStationContext = React.createContext()\n\nfunction DashStation(props) {\n    const workshop = props.parent.workshop\n    const [state, dispacher] = useReducerAsync(DashStationReducer, initState, DashStationHandlers)\n    const { ui: dataUi, form: dataForm, vType, setPlugins } = useDataConfig(props)\n    const { ui: dashUi, form: dashForm, setPluginConfigs,setImagePreview } = useDashConfig(props)\n    const proxy = new ActionProxy()\n    const { applySaveRollbackDispacher,scriptContent ,applyToken} = state\n\n\n    const fetchDashPlugins = async () => {\n\n        const res = await proxy.get(RemoteAction.PLUGIN_LIST, {})\n        if (res.status !== 200) {\n            return\n        }\n        const dashPlugins = res.content.map(item => item.name)\n        setPlugins(dashPlugins)\n    }\n\n    const fetchPlugin = async () => {\n        if (vType) {\n            const res = await proxy.get(RemoteAction.PLUGIN_GET, { pluginName: vType })\n            const scriptContent = res.content.content\n            \n            const analyzedScriptContent = await proxy.runScript(scriptContent, Tools.getJobName(), { executeMode: \"analyze\" })\n            if (analyzedScriptContent.status !== 200) {\n                return\n            }\n            const pluginConfigs = analyzedScriptContent.content.filter(sql => {\n                return sql.mode && (sql.mode === \"defaultParam\")\n            })\n            dispacher({\n                type:\"setState\",\n                data:{scriptContent}\n            })\n            \n            setImagePreview(res.content.image)\n            setPluginConfigs(pluginConfigs)\n        }\n    }\n    useEffect(() => {\n        fetchPlugin()\n    }, [vType])\n\n    useEffect(() => {\n        fetchDashPlugins()\n    }, [])\n\n    const apply = async () => {\n        if (applySaveRollbackDispacher) {\n            const dataValues = dataForm.getFieldValue()\n            const dashValues = dashForm.getFieldValue()\n            \n            const tableName = dashValues.tableName || Tools.getTempTableName()\n            const sql = `\n             select ${Tools.getField(dataValues.xColumn)} as x,${Tools.getField(dataValues.yColumn)} as y \n             from ${workshop.getLastApplyTable().tableName} as ${tableName};\n             ${scriptContent}\n            `\n            await workshop.apply({tableName,sql})            \n            \n            applySaveRollbackDispacher({\n                type: \"setState\",\n                data: { loading: false }\n            })\n        }\n    }\n    useEffect(()=>{\n        apply()\n    }, [applyToken])\n\n    return (\n        <DashStationContext.Provider value={{ dispacher }}>\n            <ApplySaveRollback workshop={workshop} context={DashStationContext} />\n            <div className=\"dash-station\">\n                <div className=\"dash-station-data-page\">\n                    {dataUi()}\n                </div>\n                <Divider type=\"vertical\" style={{ height: \"300px\" }} />\n                <div className=\"dash-station-dash-page\">\n                    {dashUi()}\n                </div>\n            </div>\n        </DashStationContext.Provider>\n    )\n}\nexport { DashStation, DashStationContext }","import React, { useState, useCallback, useEffect } from 'react';\nimport { Form, Card, Select, Divider, Button } from 'antd';\n\nfunction useDataConfig(props) {\n    const workshop = props.parent.workshop\n    const fields = workshop.currentTable.schema.fields.map(item => item.name)\n    const [form] = Form.useForm()\n    const [vType, setVtype] = useState()\n    const [plugins, setPlugins] = useState([])\n\n    const columns = fields.map(item => {\n        return <Select.Option value={item}>{item}</Select.Option>\n    })\n\n\n    const onFieldsChange = useCallback((changeFields) => {\n        changeFields.forEach(item => {\n            if (item.name[0] === \"vType\") {\n                setVtype(item.value)\n            }\n        })\n    }, [])\n\n    const ui = () => {\n        return <Card title=\"Generic\">\n            <Form form={form} onFieldsChange={onFieldsChange}>\n                <Form.Item label=\"Visulizaiton Plugin\" name=\"vType\">\n                    <Select >\n                        {\n                            plugins.map(item => {\n                                return <Select.Option value={item}>{item}</Select.Option>\n                            })\n                        }\n                    </Select>\n                </Form.Item>\n\n                <Form.Item label=\"X Column\" name=\"xColumn\">\n                    <Select >\n                        {columns}\n                    </Select>\n                </Form.Item>\n\n                <Form.Item label=\"Y Column\" name=\"yColumn\">\n                    <Select >\n                        {columns}\n                    </Select>\n                </Form.Item>\n            </Form>\n        </Card>\n    }\n    return { ui, form, vType, setPlugins }\n}\nexport { useDataConfig }","import React, { useState, useCallback, useEffect } from 'react';\nimport { Form, Input,  Divider, Card } from 'antd';\nimport RetinaImage from 'react-retina-image'\nimport Tools from '../../../../common/Tools';\nimport '../../../image.scss'\n\n\nfunction useDashConfig(props) {\n    const [form] = Form.useForm()\n    const [pluginConfigs, setPluginConfigs] = useState([])\n    const [imagePreview, setImagePreview] = useState()\n    \n    const ui = () => {\n        return <Card title=\"Plugin Parameters\">\n            {imagePreview && <div className=\"image-wrapper\" style={{width:\"400px\"}}>\n                 <RetinaImage  src={imagePreview}/>\n            </div>}\n            <Form form={form}>\n                {pluginConfigs.map(item => {\n                    return <Form.Item key={item.key} name={item.key} label={item.option.label || item.key} initialValue={Tools.unQuote(item.command)}>\n                        <Input />\n                    </Form.Item>\n                })}\n            </Form>                        \n        </Card>\n    }\n    return { ui, form, setPluginConfigs, pluginConfigs,setImagePreview }\n}\nexport { useDashConfig }","import ActionMaker from \"../../../ActionMaker\"\n\n\nexport const {handler:ApplyActionHandler,action:ApplyAction} = ActionMaker.buildHandler(async (action)=>{\n    const {apply} = action.data     \n    if(apply){\n        apply(action.data)\n    }\n    return {        \n        data: {\n            ...action.data\n        }\n    }\n})","import ActionMaker from \"../../../../v1/ActionMaker\"\nimport ApplyActionUtils from \"../../common/ApplyActionUtils\"\nimport AnalysisWorkshop from \"../../workshop\"\nimport Tools from \"../../../../common/Tools\"\n\n\nexport interface UnionApplyValues{\n    unionTable:string,\n    duplicate:boolean\n }\nexport const { handler: UnionApplyHandler, action: UnionApplyAction } = ActionMaker.buildHandler(async (action:{data:{}}) => {\n    return ApplyActionUtils.apply(action,\n        (values:UnionApplyValues) => {\n            if (!values.unionTable ) {\n                return \"UnionTable is required.\"\n            }            \n            return undefined\n        },\n        (workshop:AnalysisWorkshop, values:UnionApplyValues) => {            \n            const tableName = Tools.getTempTableName()\n\n            let operator = \"union\"\n            if(values.duplicate){\n               operator = \"UNION ALL\" \n            }\n            \n            const sql = `\n            select * from ${workshop.getLastApplyTable().tableName}\n            ${operator}\n            select * from ${Tools.getField(values.unionTable)}\n            as ${tableName};                         \n            `\n            return { tableName, sql }\n        })\n})","import { CommonHandlers,CommonActions} from '../../../../v1/analysis/common/CommonHandlers'\nimport { CommonActionNames } from '../../../../v1/analysis/common//CommonActionNames'\nimport { ApplyActionHandler, ApplyAction } from '../../../../v1/analysis/common/actions/ApplyAction'\nimport {UnionApplyHandler,UnionApplyAction} from \"./UnionApplyAction\"\n// --import--\n\nclass UnionStationActionNames {\nstatic UnionApply = \"UnionApply\"\n// --name--\n}\nconst UnionStationHandlers = {\n    ...CommonHandlers,\n[CommonActionNames.APPLY]: ApplyActionHandler,\n[UnionStationActionNames.UnionApply]: UnionApplyHandler,\n// --handler--\n}\nconst UnionStationActions = {\n    ...CommonActions,\n[CommonActionNames.APPLY]: ApplyAction,\n[UnionStationActionNames.UnionApply]: UnionApplyAction,\n// --action--\n}\n\nfunction UnionStationReducer(state, action) {\nreturn UnionStationActions[action.type](state, action.data)    \n}\nexport { UnionStationActionNames, UnionStationReducer, UnionStationHandlers }","import * as React from 'react'\nimport { Form, Select } from 'antd'\nimport { FormattedMessage } from 'react-intl'\nimport EngineService from '../../service/EngineService'\n\n\ninterface Props {\n}\n\ninterface TableInWorkshop {\n    tableName:string\n}\nconst { Option } = Select\nconst useSelectUnionTable = () => {\n    // const {dispacher} = React.useContext(UnionStationContext)\n    const [tables,setTables] = React.useState(Array<TableInWorkshop>())    \n    const [form] = Form.useForm()\n    React.useEffect(()=>{\n        const fetch = async()=>{\n            const res = await EngineService.tablesInWorkshop()\n            if(res.status === 200){\n                const tables = res.content as Array<TableInWorkshop>\n                setTables(tables)\n            }\n        }\n        fetch()\n    },[])\n\n    const items = tables.map(table=>{\n        return <Option value={table.tableName}>{table.tableName}</Option>\n    })\n    const ui = ()=>{\n        return (\n          \n            <Form form={form} className=\"login-form\" >           \n                <Form.Item label={<FormattedMessage id=\"union_table\" />} name=\"unionTable\" rules={[{ required: true, message: 'Please select union table!' }]}>\n                    <Select\n                        showSearch\n                        style={{ width: 200 }}\n                        placeholder=\"Choose Join Table\"\n                        optionFilterProp=\"children\"                    \n                    > \n                    {items}                   \n                    </Select>\n                </Form.Item> \n                <Form.Item label={<FormattedMessage id=\"allow_duplicate\" />} name=\"duplicate\" rules={[{ required: true, message: 'Please select!' }]}>\n                    <Select                        \n                        style={{ width: 200 }}                        \n                    > \n                      <Option value=\"true\">true</Option>               \n                      <Option value=\"false\">false</Option>               \n                    </Select>\n                </Form.Item>            \n            </Form>\n        )\n    }\n    return {ui,form}\n}\n\nexport { useSelectUnionTable }","import React,{useEffect} from 'react'\nimport { useReducerAsync } from 'use-reducer-async'\nimport { UnionStationReducer, UnionStationHandlers, UnionStationActionNames } from './actions/UnionStationReducer'\nimport {useSelectUnionTable} from './SelectUnionTable'\nimport { ApplySaveRollback } from '../../apply_save_rollback/ApplySaveRollback'\nimport AnalysisWorkshop from '../workshop'\nimport { CommonActionNames } from '../common/CommonActionNames'\nimport { UnionApplyValues } from './actions/UnionApplyAction'\n\ninterface Props {   \n}\n\nconst initState = {\n  applySaveRollbackDispacher: undefined,\n  error:undefined\n}\n\nconst UnionStationContext = React.createContext<{state:any,dispacher:React.Dispatch<any>}|null>(null)\n\nconst UnionStation:React.FunctionComponent<Props> = (props) => {\n    const [state, dispacher] = useReducerAsync(UnionStationReducer, initState, UnionStationHandlers)\n    const {applySaveRollbackDispacher,error} = state\n\n    const {ui:SelectUnionTable, form:unionTableForm} = useSelectUnionTable()\n\n    useEffect(() => {\n      if (applySaveRollbackDispacher) {\n      \n        const {unionTable,duplicate} = unionTableForm.getFieldsValue()\n\n        dispacher({\n          type:CommonActionNames.setState,\n          data: {error:undefined}\n        })\n\n        const values:UnionApplyValues = {unionTable,duplicate: duplicate as boolean}        \n  \n        dispacher({\n          type: UnionStationActionNames.UnionApply,\n          data: {\n            workshop:AnalysisWorkshop.workshop,\n            values\n          }\n        })\n      }\n    }, [applySaveRollbackDispacher])\n\n    return (\n        <UnionStationContext.Provider value={ { state,dispacher} }>\n          <div style={{marginBottom:\"30px\"}}><ApplySaveRollback context={UnionStationContext} workshop={AnalysisWorkshop.workshop} /></div>\n          <SelectUnionTable/>\n      </UnionStationContext.Provider>\n    )\n}\n\nexport { UnionStation, UnionStationContext}","import ActionMaker from \"../../../../v1/ActionMaker\"\nimport ApplyActionUtils from \"../../common/ApplyActionUtils\"\nimport AnalysisWorkshop from \"../../workshop\"\nimport Tools from \"../../../../common/Tools\"\n\nexport interface PivotApplyValues{\n   columnLeft:string,\n   columnHeader:string,\n   columnSum: string,\n   sunFunc:Array<string>\n}\nexport const { handler: PivotApplyHandler, action: PivotApplyAction } = ActionMaker.buildHandler(async (action:{data:{}}) => {\n    return ApplyActionUtils.apply(action,\n        (values:PivotApplyValues) => {\n            if (!values.columnHeader || !values.columnLeft || !values.columnSum ) {\n                return \"Three columns are required.\"\n            }\n\n            if(!(values.sunFunc?.length>0)){\n                return \"Agg funcs are required.\"\n            }\n            return undefined\n        },\n        (workshop:AnalysisWorkshop, values:PivotApplyValues) => {\n            const tableName = Tools.getTempTableName()\n\n            //`avg`, `max`, `min`, `sum`, `count`.\n            const sql = `\n            run ${workshop.getLastApplyTable().tableName} as Pivot.\\`\\` where \n            columnLeft=\"${values.columnLeft}\"\n            and columnHeader=\"${values.columnHeader}\"\n            and columnSum=\"${values.columnSum}\"\n            and sunFunc=\"${values.sunFunc.map(item=>{\n                return `${item}(${Tools.getField(values.columnSum)})`\n            }).join(\",\")}\"\n            as ${tableName};                         \n            `\n            return { tableName, sql }\n        })\n})","import { CommonHandlers,CommonActions} from '../../../../v1/analysis/common/CommonHandlers'\nimport { CommonActionNames } from '../../../../v1/analysis/common//CommonActionNames'\nimport { ApplyActionHandler, ApplyAction } from '../../../../v1/analysis/common/actions/ApplyAction'\nimport {PivotApplyHandler,PivotApplyAction} from \"./PivotApplyAction\"\n// --import--\n\nclass PivotStationActionNames {\nstatic PivotApply = \"PivotApply\"\n// --name--\n}\nconst PivotStationHandlers = {\n    ...CommonHandlers,\n[CommonActionNames.APPLY]: ApplyActionHandler,\n[PivotStationActionNames.PivotApply]: PivotApplyHandler,\n// --handler--\n}\nconst PivotStationActions = {\n    ...CommonActions,\n[CommonActionNames.APPLY]: ApplyAction,\n[PivotStationActionNames.PivotApply]: PivotApplyAction,\n// --action--\n}\n\nfunction PivotStationReducer(state, action) {\nreturn PivotStationActions[action.type](state, action.data)    \n}\nexport { PivotStationActionNames, PivotStationReducer, PivotStationHandlers }","import React, { useState, useEffect, useContext } from 'react'\nimport { List, Form, Input, Checkbox } from 'antd'\nimport {PivotStationContext} from './PivotStation'\n\ninterface Props {\n}\n\nconst aggList = [`avg`, `max`, `min`, `sum`, `count`]\nconst CheckboxGroup = Checkbox.Group\n\nexport const useAggCheck = () => {\n    \n    const [form] = Form.useForm()\n    \n    const ui = ()=>{\n        return <>\n            <Form form={form}>\n                <Form.Item name=\"aggs\">\n                <CheckboxGroup\n                            options={aggList}                                                        \n                        /> \n                </Form.Item>\n            </Form>\n        </>\n    }\n    return {ui,form}\n}","import React, { useState, useEffect } from 'react'\nimport { useReducerAsync } from 'use-reducer-async'\nimport { PivotStationReducer, PivotStationHandlers, PivotStationActionNames } from './actions/PivotStationReducer'\nimport { FormattedMessage } from 'react-intl'\nimport { List, Form, Input, Checkbox, Divider } from 'antd'\nimport AnalysisWorkshop from '../workshop'\nimport { Schema } from '../../../beans/dst'\nimport './PivotStation.scss'\nimport { useDrop, useDrag } from 'ahooks';\nimport { ApplySaveRollback } from '../../apply_save_rollback/ApplySaveRollback'\nimport { CommonActionNames } from '../common/CommonActionNames'\nimport AlertBox from '../../AlertBox'\nimport { PivotApplyValues } from './actions/PivotApplyAction'\nimport {useAggCheck} from './useAggCheck'\n\ninterface Props {\n}\n\nconst initState = {\n  columnLeft: null,\n  columnHeader: null,\n  columnSum: null,\n  applySaveRollbackDispacher: undefined,\n  error: undefined,  \n}\n\nconst PivotStationContext = React.createContext<{ state: any, dispacher: React.Dispatch<any> } | null>(null)\n\nconst PivotStation: React.FunctionComponent<Props> = (props) => {\n  const workshop = AnalysisWorkshop.workshop\n  const schema = workshop.currentTable.schema as Schema\n  const schemaForList = schema.fields.map(field => (field.name))\n  const [state, dispacher] = useReducerAsync(PivotStationReducer, initState, PivotStationHandlers)\n\n  const { columnLeft, columnHeader, columnSum, applySaveRollbackDispacher, error } = state\n\n  \n\n  const [dragging, setDragging] = useState<string | null>(null);\n\n  const getDragProps = useDrag({\n    onDragStart: (data) => {\n      setDragging(data);\n    },\n    onDragEnd: () => {\n      setDragging(null);\n    },\n  });\n\n  const [dropPropHeader, { isHovering: isHoveringHeader }] = useDrop({\n    onDom: (content: string, e) => {\n      dispacher({\n        type: CommonActionNames.setState,\n        data: {\n          columnHeader: content\n        }\n      })\n    },\n  });\n\n  const [dropPropsLeftHeader, { isHovering: isHoveringLeftHeader }] = useDrop({\n    onDom: (content: string, e) => {\n      dispacher({\n        type: CommonActionNames.setState,\n        data: {\n          columnLeft: content\n        }\n      })\n    },\n  });\n\n  const [dropPropsSum, { isHovering: isHoveringSum }] = useDrop({\n    onDom: (content: string, e) => {\n      dispacher({\n        type: CommonActionNames.setState,\n        data: {\n          columnSum: content\n        }\n      })\n    },\n  });\n\n  const tips = (isHover: boolean, columnName: string | null) => {\n    return isHover ? <FormattedMessage id=\"drop_column\" /> : (columnName ? columnName : <FormattedMessage id=\"drag_column\" />)\n  }\n\n  useEffect(() => {\n    if (applySaveRollbackDispacher) {\n      \n      dispacher({\n        type:CommonActionNames.setState,\n        data: {error:undefined}\n      })\n\n      const {aggs} = aggForm.getFieldsValue()\n      const values: PivotApplyValues = { columnHeader, columnSum, columnLeft, sunFunc:aggs }\n      dispacher({\n        type: PivotStationActionNames.PivotApply,\n        data: {\n          workshop,\n          values\n        }\n      })\n    }\n  }, [applySaveRollbackDispacher])\n\n  const {ui:aggUI,form:aggForm} = useAggCheck()\n\n  return (\n    <PivotStationContext.Provider value={{ state, dispacher }}>\n      {\n        error && <AlertBox message={error}></AlertBox>\n      }\n      <div className=\"pivot-station-commands\"><ApplySaveRollback context={PivotStationContext} workshop={workshop} /></div>\n      <div className=\"pivot-station-app\">\n        <div className=\"pivot-station-fields\">\n          <List\n            className=\"pivot-station-fields-list\"\n            header={<><Input placeholder=\"search\" /></>}\n            bordered\n            dataSource={schemaForList}\n            renderItem={item => (\n              <List.Item >\n                <div {...getDragProps(item)}>{item}</div>\n              </List.Item>\n            )}\n          />\n        </div>\n        <div className=\"pivot-station-bigbox\">\n          <div className=\"pivot-station-left\" {...dropPropsLeftHeader}>\n            <span className=\"pivot-common-font\"><FormattedMessage id=\"column_left\" /> </span><br /> {tips(isHoveringLeftHeader, columnLeft)}</div>\n          <div className=\"pivot-station-body\">\n            <div className=\"pivot-station-header\" {...dropPropHeader}>\n              <span className=\"pivot-common-font\"><FormattedMessage id=\"column_header\" /></span> <br />{tips(isHoveringHeader, columnHeader)}\n            </div>\n            <div className=\"pivot-station-content\" {...dropPropsSum}>\n              <span className=\"pivot-common-font\"><FormattedMessage id=\"column_sum\" /></span> <br /> {tips(isHoveringSum, columnSum)}              \n              <Divider/> \n              {aggUI()}             \n            </div>\n          </div>\n        </div>\n      </div>\n    </PivotStationContext.Provider>\n  )\n}\n\nexport { PivotStation, PivotStationContext }","import { CommonHandlers,CommonActions} from '../../../../v1/analysis/common/CommonHandlers'\nimport { CommonActionNames } from '../../../../v1/analysis/common//CommonActionNames'\nimport { ApplyActionHandler, ApplyAction } from '../../../../v1/analysis/common/actions/ApplyAction'\n// --import--\n\nclass AnalysisPluginStationActionNames {\n// --name--\n}\nconst AnalysisPluginStationHandlers = {\n    ...CommonHandlers,\n[CommonActionNames.APPLY]: ApplyActionHandler,\n// --handler--\n}\nconst AnalysisPluginStationActions = {\n    ...CommonActions,\n[CommonActionNames.APPLY]: ApplyAction,\n// --action--\n}\n\nfunction AnalysisPluginStationReducer(state, action) {\nreturn AnalysisPluginStationActions[action.type](state, action.data)    \n}\nexport { AnalysisPluginStationActionNames, AnalysisPluginStationReducer, AnalysisPluginStationHandlers }","import { ActionProxy } from '../backend_service/ActionProxy';\nimport Tools from './Tools'\n\nexport const FormTypeEnum = {\n    input: \"input\",\n    select: \"select\",\n    switch: \"switch\"    \n}\nexport interface SetChunk {\n    raw: string,\n    key: string,\n    comamnd: string\n    original_command: string,\n    option: Map<string, string>\n    mode: string,\n    formType: \"input\"\n}\n\nexport interface SelectChunk {\n    raw: string,\n    tableName: string\n}\n\n\n\nexport interface InputType {\n    name: string\n    label?: string\n    formType:\"input\"\n    onShow?:string\n    required:false\n}\n\nexport interface SelectType {\n    name: string\n    label?: string\n    optionTable?: string\n    optionSql?: string\n    optionStr?: string\n    selectMode:\"multiple\"\n    formType:\"select\" \n    onShow?:string \n    required:false  \n}\n\nexport interface SwitchType {\n    name: string\n    label?: string\n    formType:\"switch\"\n    onShow?:string\n    required:false\n}\n\n\ntype SQLChunk = SetChunk | SelectChunk\n\nexport type FormType = InputType | SelectType | SwitchType\n\nexport class SQLAnalysisUtils {\n    private _sql: string\n    private sqls: Array<SQLChunk> = []\n    constructor(sql:string) {\n        this._sql = sql        \n    }\n     build = async()=>  {\n        const proxy = new ActionProxy()\n        const analyzedScriptContent = await proxy.runScript(this._sql, Tools.getJobName(), { executeMode: \"analyze\" })\n        if (analyzedScriptContent.status !== 200) {\n            return this\n        }\n        this.sqls = analyzedScriptContent.content as Array<SQLChunk>\n        return this\n    }\n\n    userInputs=()=> {\n        const userInputs = this.sqls.filter(sql => {\n            return (sql as SetChunk).mode === \"defaultParam\" \n        }).map(item => item as SetChunk)\n        return userInputs\n    }\n    toSql=(values: {[key:string]:any}) =>{        \n        const buffer = Object.keys(values).map(k => {\n            const key = k\n            const value = values[k]\n            let newv = `'''${value}'''`\n            if (!value) {\n                newv = `\"\"`\n            }\n            return `set ${key}=${newv};`\n        })\n        return `\n          ${buffer.join(\"\\n\")}\n          ${this._sql}\n        `\n    }\n}","import React, { useState, useCallback, useEffect,useRef } from 'react';\nimport { Form, Input, Divider, Card, Checkbox, Select } from 'antd';\nimport { SQLAnalysisUtils, SelectType } from './SQLAnalysisUtils';\nimport { SetChunk, FormType, FormTypeEnum } from '../common/SQLAnalysisUtils'\nimport Tools from './Tools';\nimport { ActionProxy } from '../backend_service/ActionProxy';\nimport RemoteAction from '../backend_service/RemoteAction';\nimport { FormattedMessage } from 'react-intl'\nimport AnalysisWorkshop from '../v1/analysis/workshop';\n\nexport interface SelectItemData {\n    name:string\n    value:string\n}\n\nexport interface AnalysisPlugin {\n    name:string\n    content:string\n}\nexport const useAnalysisPlugin = (name: string) => {\n    const [form] = Form.useForm()\n    const [userInputs, setUserInputs] = useState<Array<SetChunk>>([])\n    const [fieldLoading, setFieldLoading] = useState<{[key: string]: any}>({})\n    const [fieldData, setFieldData] = useState<{[key: string]: any}>({})\n    const analysisUtils = useRef<SQLAnalysisUtils|null>(null)\n    // const [plugin, setPlugin] = useState<AnalysisPlugin>(null)\n    const proxy = new ActionProxy()\n    useEffect(() => {\n        const fetch = async () => {            \n            const res = await proxy.get(RemoteAction.ANALYSIS_PLUGIN_GET,{name})            \n            if(res.status===200){\n                const plugin = res.content as AnalysisPlugin                                \n                analysisUtils.current = await new SQLAnalysisUtils(plugin.content).build()                \n                setUserInputs(analysisUtils.current?.userInputs())\n            }                        \n        }\n        fetch()\n    }, [])\n\n    const fetchSelect = useCallback((select: SelectType) => {\n        const _fetch = async () => { \n            if(fieldData[select.name] && Object.keys(fieldData[select.name]).length > 0){\n               return \n            }           \n            if (select.optionStr) {\n                setFieldData({\n                    [select.name]: select.optionSql?.split(\",\").map((item) => {\n                        return { name: item, value: item }\n                    })\n                })\n                return\n            }            \n            const tableName = Tools.getTempTableName()\n            if (select.optionTable) {\n\n                if(select.optionTable === \"__current_table_fields__\"){\n                    const data = AnalysisWorkshop.workshop.currentTable.schema.fields.map((item:{name:string})=>{\n                        return {name:item.name,value:item.name}  \n                    })\n                    setFieldData({ [select.name]: data })\n                    return \n                }\n\n                const res = await proxy.runScript(`select * from ${select.optionTable} as ${tableName}`, Tools.getJobName(), Tools.robotFetchParam())\n                let data = [] as Array<SelectItemData>\n                if (res.status === 200) {\n                    data = res.content.data as Array<SelectItemData>\n                }\n                setFieldData({ [select.name]: data })\n                return\n            }\n            if (select.optionSql) {                              \n                const res = await proxy.runScript(`${select.optionSql}`, Tools.getJobName(), Tools.robotFetchParam())\n                let data = [] as Array<SelectItemData>\n                if (res.status === 200) {\n                    data = res.content.data as Array<SelectItemData>\n                }\n                setFieldData({ [select.name]: data })\n                return\n            }\n        }\n        _fetch()\n    }, [])\n\n    const toFormType = useCallback((sqlChunk: SetChunk) => {\n        let formItem = {...sqlChunk.option,name:sqlChunk.key} as unknown as FormType        \n        const mappings = {\n            [FormTypeEnum.input]: () => {\n                return <Form.Item\n                    required={formItem.required}\n                    name={formItem.name}\n                    key={formItem.name}\n                    initialValue={Tools.unQuote(sqlChunk.comamnd)}\n                    label={formItem.label || formItem.name}>\n                    <Input />\n                </Form.Item>\n            },\n            [FormTypeEnum.select]: () => {\n                return <Form.Item\n                    required={formItem.required}\n                    name={formItem.name}\n                    key={formItem.name}\n                    initialValue={Tools.unQuote(sqlChunk.comamnd)}\n                    label={formItem.label || formItem.name}>\n                    <Select showSearch onFocus={() => {\n                        fetchSelect(formItem as SelectType)\n                    }} loading={fieldLoading[formItem.name] || false} mode={(formItem as SelectType).selectMode}>\n                        {console.log(fieldData)}\n                        {fieldData[formItem.name]?.map((item:SelectItemData) => {\n                            return <Select.Option key={item.value} value={item.value}>{item.name}</Select.Option>\n                        })}\n                    </Select>\n                </Form.Item>\n            }\n        }\n        return mappings[formItem.formType]()\n    }, [fieldData])\n    const ui = () => {\n        return <>\n            <Form form={form}>\n                {\n                    userInputs.map(sqlChunk => {\n                        return toFormType(sqlChunk)\n                    })\n                }\n\n            </Form>\n        </>\n    }\n    return { ui, form ,analysisUtils}\n}","import React,{useEffect,useState,useRef, MutableRefObject} from 'react'\nimport { Form } from 'antd'\nimport { FormattedMessage } from 'react-intl'\nimport {useAnalysisPlugin} from '../../../common/useAnalysisPlugin'\nimport { FormInstance } from 'antd/lib/form'\ninterface Props {  \n    pluginName:string,\n    form:MutableRefObject<any> \n    analysisUtils:MutableRefObject<any> \n}\n\nconst AnalysisPluginForm:React.FunctionComponent<Props> = (props:Props) => {       \n    const {ui,form,analysisUtils} = useAnalysisPlugin(props.pluginName)\n    props.form.current = form\n    props.analysisUtils.current = analysisUtils.current\n    useEffect(()=>{\n        // const fetch = async()=>{          \n        // }\n        // fetch()\n       },[])    \n    return <>\n       {ui()}\n    </>\n    \n}\n\nexport { AnalysisPluginForm }","import React, { useEffect, useRef } from 'react'\nimport { useReducerAsync } from 'use-reducer-async'\nimport { Select } from \"antd\"\nimport { AnalysisPluginStationReducer, AnalysisPluginStationHandlers } from './actions/AnalysisPluginStationReducer'\nimport { FormattedMessage } from 'react-intl'\nimport { ActionProxy } from '../../../backend_service/ActionProxy'\nimport RemoteAction from '../../../backend_service/RemoteAction'\nimport { CommonActionNames } from '../common/CommonActionNames'\nimport { AnalysisPlugin } from '../../../common/useAnalysisPlugin'\nimport { AnalysisPluginForm } from './AnalysisPluginForm'\nimport { FormInstance } from 'antd/lib/form'\nimport './AnalysisPlugin.scss'\nimport { ApplySaveRollback } from '../../apply_save_rollback/ApplySaveRollback'\nimport AnalysisWorkshop from '../workshop'\nimport Tools from '../../../common/Tools'\nimport { SQLAnalysisUtils, FormType } from '../../../common/SQLAnalysisUtils'\n\ninterface Props {\n}\n\nconst initState = {\n  plugins: [] as Array<AnalysisPlugin>,\n  pluginName: \"\",\n  applySaveRollbackDispacher: undefined,\n  applyToken: Tools.getJobName()\n}\n\nconst AnalysisPluginStationContext = React.createContext<{ state: any, dispacher: React.Dispatch<any> } | null>(null)\n\nconst AnalysisPluginStation: React.FunctionComponent<Props> = (props) => {\n  const [state, dispacher] = useReducerAsync(AnalysisPluginStationReducer, initState, AnalysisPluginStationHandlers)\n  const proxy = new ActionProxy()\n  const formRef = useRef<FormInstance | null>(null)\n  const analysisUtilsRef = useRef<SQLAnalysisUtils | null>(null)\n\n  const { applySaveRollbackDispacher, pluginName, plugins, applyToken } = state\n\n\n  useEffect(() => {\n    const fetch = async () => {\n      const res = await proxy.get(RemoteAction.ANALYSIS_PLUGIN_LIST, {})\n      if (res.status === 200) {\n        dispacher({\n          type: CommonActionNames.setState,\n          data: {\n            plugins: res.content as Array<AnalysisPlugin>\n          }\n        })\n      }\n    }\n    fetch()\n  }, [])\n\n\n  const apply = async () => {\n    if (applySaveRollbackDispacher) {\n      const dataValues = formRef.current?.getFieldsValue()\n      const analysisUtils = analysisUtilsRef.current  \n      \n      // const requiredFields = analysisUtils?.userInputs().filter(item=>{\n      //   let formItem = {...item.option,name:item.key} as unknown as FormType\n      //   formItem.required        \n      // }).map(item=>item.key)\n\n      // let fail:String\n      // requiredFields?.forEach(item=>{\n      //    if((dataValues as {[key:string]:any})[item] === undefined){\n            \n      //    }\n      // })\n\n      const sqls = analysisUtils?.toSql(dataValues as {})\n      const workshop = AnalysisWorkshop.workshop\n      const currentTable = workshop.getLastApplyTable().tableName\n      const tableName = Tools.getTempTableName()\n      const sql = `\n      set __current_table__=\"${currentTable}\";\n      set __new_table__=\"${tableName}\";\n      ${sqls}\n      `      \n      const status = await workshop.apply({\n        tableName,\n        sql\n      })\n      if (status === 200) {\n        workshop.refreshOperateStation()\n      }\n      applySaveRollbackDispacher({\n        type: \"setState\",\n        data: { loading: false }\n      })\n    }\n  }\n\n  useEffect(() => {\n    apply()\n  }, [applyToken])\n\n  return (\n    <AnalysisPluginStationContext.Provider value={{ state, dispacher }}>\n      <ApplySaveRollback context={AnalysisPluginStationContext} />\n      <div className=\"analysis-plugin-select\">\n        <Select showSearch onChange={(value) => {\n          dispacher({\n            type: CommonActionNames.setState,\n            data: {\n              pluginName: value\n            }\n          })\n        }} filterOption style={{ width: \"200px\" }}>\n          {\n            plugins.map((item: AnalysisPlugin) => {\n              return <Select.Option key={item.name} value={item.name}>{item.name}</Select.Option>\n            })\n          }\n        </Select>\n      </div>\n      <div className=\"analysis-plugin-form\">\n        {pluginName && <AnalysisPluginForm analysisUtils={analysisUtilsRef} pluginName={pluginName} form={formRef} />}\n      </div>\n    </AnalysisPluginStationContext.Provider>\n  )\n}\n\nexport { AnalysisPluginStation, AnalysisPluginStationContext }","import * as React from \"react\";\nimport mix from \"../../common/mixin\"\nimport \"./OperateStation.scss\"\nimport { Tabs, Radio } from 'antd';\nimport JoinStation from \"./join/JoinStation\";\nimport AggStation from \"./agg/AggStation\";\nimport ProjectStation from \"./project/ProjectStation\";\nimport FilterStation from \"./filter/FilterStation\";\nimport { OrderStation } from \"./order/OrderStation\";\nimport { LimitStation } from \"./limit/LimitStation\"\nimport { WindowStation } from \"./window/WindowStation\";\nimport { DashStation } from \"./dash/DashStation\";\nimport { FormattedMessage } from 'react-intl'\nimport { Resizable } from \"re-resizable\";\nimport AnalysisWorkshop from \"./workshop\";\nimport Tools from \"../../common/Tools\";\nimport { UnionStation } from \"./union/UnionStation\";\nimport { PivotStation } from \"./pivot/PivotStation\";\nimport { AnalysisPluginStation } from \"./plugin/AnalysisPluginStation\";\nconst { TabPane } = Tabs;\n\nexport default class OperateStation extends React.Component {\n    constructor(props) {\n        super(props)\n        this.workshop = AnalysisWorkshop.workshop\n        this.state = { key: Tools.getJobName() }\n    }\n\n    reload = () => {\n        this.setState({ key: Tools.getJobName() })\n    }\n\n    render() {\n        return <div className=\"os-pane\" style={{ backgroundColor: \"white\" }}>\n            <div className=\"os-tabs\">\n                <Resizable style={{ borderBottom: \"solid\", width: \"100%\", overflow: \"scroll\" }}>\n                    <Tabs defaultActiveKey=\"1\" tabPosition=\"left\" key={this.state.key}>\n                        <TabPane tab={<FormattedMessage id=\"project\" />} key={1} >\n                            <ProjectStation parent={this}></ProjectStation>\n                        </TabPane>\n                        <TabPane tab={<FormattedMessage id=\"filter\" />} key={2} >\n                            <FilterStation parent={this}></FilterStation>\n                        </TabPane>\n                        <TabPane tab={<FormattedMessage id=\"agg\" />} key={4} >\n                            <AggStation parent={this}></AggStation>\n                        </TabPane>\n                        <TabPane tab={<FormattedMessage id=\"order\" />} key={5} >\n                            <OrderStation parent={this}></OrderStation>\n                        </TabPane>\n                        <TabPane tab={<FormattedMessage id=\"pivot\" />} key={10} >\n                            <PivotStation/>\n                        </TabPane>\n                        <TabPane tab={<FormattedMessage id=\"more\" />} key={100}>\n                            <Tabs tabPosition=\"left\">\n                                <TabPane tab={<FormattedMessage id=\"join\" />} key={3}>\n                                    <JoinStation parent={this}></JoinStation>\n                                </TabPane>\n                                <TabPane tab={<FormattedMessage id=\"limit\" />} key={6} >\n                                    <LimitStation parent={this}></LimitStation>\n                                </TabPane>\n                                <TabPane tab={<FormattedMessage id=\"window\" />} key={7} >\n                                    <WindowStation parent={this}></WindowStation>\n                                </TabPane>                                \n                                <TabPane tab={<FormattedMessage id=\"union\" />} key={9} >\n                                    <UnionStation/>\n                                </TabPane>\n                                <TabPane tab={<FormattedMessage id=\"dash\" />} key={8} >\n                                    <DashStation parent={this}></DashStation>\n                                </TabPane>\n                                <TabPane tab={<FormattedMessage id=\"plugin\" />} key={11} >\n                                    <AnalysisPluginStation></AnalysisPluginStation>\n                                </TabPane>\n                            </Tabs>\n                        </TabPane>\n\n                    </Tabs>\n                </Resizable>\n            </div>\n\n        </div >\n    }\n}","import EditorOp from \"../comp_op/EditorOp\"\nexport const WorkshopMessageOp = (superclass) => class extends superclass {\n    toggleMessage  = (msg)=>{\n        const showMessage = this.state.showMessage\n        if(showMessage){\n            this.setState({showMessage:!this.state.showMessage})        \n        }else {\n            this.setState({showMessage:!this.state.showMessage,consoleMessage:msg})        \n        }\n        \n    }\n\n    showInfo = (msg)=> {\n        this.setState({showInfoMessage:true,infoMessage:msg})\n    }\n}","import Tools from \"../../common/Tools\"\nexport const WorkshopUIOp = (superclass) => class extends superclass {\n    updateDisplay = async (data,schema) =>{\n        this.setState({tableLoading:true})\n        this.displayRef.update(data,schema.fields)\n        this.setState({tableLoading:false}) \n    }    \n\n    refreshOperateStation = ()=>{        \n        this.stationRef.setState({ key: Math.random() })\n    }\n\n    refreshTableWorkshop = ()=>{\n        this.leftTreePaneRef.setState({reloaWorkshop:Tools.getJobName()})\n    }\n    \n}","import * as React from \"react\";\nimport { Table, Input, Button, Space } from 'antd';\nimport Highlighter from 'react-highlight-words';\nimport { SearchOutlined } from '@ant-design/icons';\nimport Tools from \"../../../common/Tools\";\n\n\n\nexport const SearchOp = (superclass) => class extends superclass {\n    getColumnSearchProps = dataIndex => ({\n        filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\n            <div style={{ padding: 8 }}>\n                <Input\n                    ref={node => {\n                        this.searchInput = node;\n                    }}\n                    placeholder={`Search ${dataIndex}`}\n                    value={selectedKeys[0]}\n                    onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\n                    onPressEnter={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\n                    style={{ width: 188, marginBottom: 8, display: 'block' }}\n                />\n                <Space>\n                    <Button\n                        type=\"primary\"\n                        onClick={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\n                        icon={<SearchOutlined />}\n                        size=\"small\"\n                        style={{ width: 90 }}\n                    >\n                        Search\n              </Button>\n                    <Button onClick={() => this.handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\n                        Reset\n              </Button>\n                </Space>\n            </div>\n        ),\n        filterIcon: filtered => <SearchOutlined style={{ color: filtered ? '#1890ff' : undefined }} />,\n        onFilter: (value, record) => true,\n        onFilterDropdownVisibleChange: visible => {\n            if (visible) {\n                setTimeout(() => this.searchInput.select());\n            }\n        },\n        render: text =>\n            this.state.searchedColumn === dataIndex ? (\n                <Highlighter\n                    highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\n                    searchWords={[this.state.searchText]}\n                    autoEscape\n                    textToHighlight={text ? text.toString() : ''}\n                />\n            ) : (\n                  this.wrapper(text)\n                ),\n    });\n\n    handleSearch = async (selectedKeys, confirm, dataIndex) => {\n        const tableName = Tools.getTempTableName()\n        const searchText = selectedKeys[0]\n        const searchedColumn = Tools.getField(dataIndex)\n        const params = {\n            tableName,\n            sql: `select * from ${this.workshop.getLastApplyTable().tableName} \n            where ${searchedColumn} like '%${searchText}%' as ${tableName};`\n        }\n        confirm();\n        this.setState({\n            loading: true\n        })        \n        await this.workshop.apply(params)    \n        this.setState({\n            loading: false,\n            searchText: selectedKeys[0],\n            searchedColumn: dataIndex,\n        });\n    };\n\n    handleReset = clearFilters => {\n        clearFilters();\n        this.setState({ searchText: '' });\n    };\n}","import * as React from 'react';\nimport {Menu,Dropdown, Divider} from 'antd';\nimport {DownOutlined,BarChartOutlined} from '@ant-design/icons'\nimport Tools from '../../../common/Tools';\n\nexport const DropdownMenuUI = (superclass) => class extends superclass {\n    dropdownStat = async (type,columnName)=>{\n        this.setState({\n            loading: true\n        })\n        const tableName = Tools.getTempTableName()\n        switch(type){\n            case \"count\":                                 \n                await this.workshop.apply({\n                    tableName: tableName,\n                    sql: `select count(${Tools.getField(columnName)}) \n                    from ${this.workshop.getLastApplyTable().tableName}\n                    as ${tableName}\n                    ;`\n                })\n                this.setState({\n                    loading: false\n                }) \n                return\n                \n            case \"count(distinct)\":\n                await this.workshop.apply({\n                    tableName: tableName,\n                    sql: `select count(distinct ${Tools.getField(columnName)}) \n                    from ${this.workshop.getLastApplyTable().tableName}\n                    as ${tableName}\n                    ;`\n                })\n                this.setState({\n                    loading: false\n                }) \n                return\n\n        } \n        this.setState({\n            loading: false\n        })        \n\n     }\n     dropdown = (item)=>{\n        const menu = (\n            <Menu onClick={(evt)=>{\n                this.dropdownStat(evt.key,item.name)\n            }}>\n              <Menu.Item key=\"count\" icon={<BarChartOutlined />}>\n                Count\n              </Menu.Item>\n              <Menu.Item key=\"count(distinct)\" icon={<BarChartOutlined />}>\n                Count&distinct\n              </Menu.Item>              \n            </Menu>\n          );\n          return <Dropdown overlay={menu}>\n          <span>{item.name}<Divider type=\"vertical\"/><DownOutlined/></span>\n        </Dropdown>\n     }\n}","import * as React from \"react\";\nimport { Table, Modal } from 'antd';\nimport mix from \"../../common/mixin\";\nimport { SearchOp } from \"./real_time_view_table/SearchOp\";\nimport { DropdownMenuUI } from \"./real_time_view_table/DropdownMenuUI\";\nimport MLSQLHTML from \"../../components/dash/MLSQLHTML\";\nimport AnalysisWorkshop from \"./workshop\";\nimport AceEditor from \"react-ace\";\n\n\nconst ReactMarkdown = require('react-markdown')\n\nexport default class RealTimeViewTable extends mix(React.Component).with(\n    SearchOp,\n    DropdownMenuUI\n) {\n    constructor(props) {\n        super(props)\n        this.tableStyle = props.style || {}\n        this.state = {\n            columns: [],\n            rows: [],\n            view: { enabled: false },\n            searchText: '',\n            searchedColumn: '',\n            loading: false,\n            isDash: false\n        }\n        this.config = {}\n        this.workshop = AnalysisWorkshop.workshop\n    }\n\n    wrapper = (v)=>{\n        return <div onDoubleClick={(evt)=>{                \n            evt.preventDefault()\n            evt.stopPropagation()\n            this.setState({view:{enabled:true,content:v}})\n    \n        }}>{v}</div>\n    }\n\n    getDefaultRender = item => {\n        const { name, type } = item\n       \n\n        if ((typeof type) === \"object\" || (typeof type) === \"array\") {\n            return (value, record) => {                \n                const v = JSON.stringify(value)\n               return this.wrapper(v) \n            }\n        }\n\n        switch (type) {\n            case \"string\": return (value, record) => {\n                return  this.wrapper(value)\n            }\n            default:\n                return (value, record) => { return String(value) }\n\n        }\n    }\n\n    getDefaultSearch = item => {\n        const { name, type } = item\n        switch (type) {\n            case \"string\": return this.getColumnSearchProps(name)\n            case \"array\": return {}\n            case \"map\": return {}\n            default:\n                return {}\n        }\n    }\n\n    getDefaultTitleRender = item => {\n        return this.dropdown(item)\n    }\n\n    update = (rows, columns) => {\n        let isDash = false\n        if (columns[0] && columns[0].name === \"html\" && columns[1] && columns[1].name === \"dash\") {\n            isDash = true\n        }\n        const newColumns = columns.map(item => {\n            return {\n                ...item,\n                dataIndex: item.name,\n                title: this.getDefaultTitleRender(item),\n                render: this.getDefaultRender(item),\n                width: 200,\n                textWrap: 'word-break',\n                ellipsis: {showTitle:true},\n                ...this.getDefaultSearch(item)\n            }\n        })\n\n        this.setState({ columns: newColumns, data: rows, isDash })\n    }\n\n    disablePreview = () => {\n        this.setState({\n            view: {\n                enabled: false\n            }\n        })\n    }\n    \n    render() {\n        const self = this\n        if (this.state.isDash) {\n            return MLSQLHTML.render(this.state.data)\n        }\n        return (<div style={this.tableStyle}>\n            <Table                 \n                loading={this.state.loading}\n                size='default'\n                columns={this.state.columns}\n                dataSource={this.state.data}\n                scroll={{ x: 'max-content' }}\n                \n            />\n            <Modal\n                title={\"View\"}\n                visible={this.state.view.enabled}\n                onCancel={this.disablePreview}\n                onOk={this.disablePreview}\n                cancelText=\"Cancel\"\n                OkText=\"Ok\"\n            >\n                <AceEditor\n                        height={\"300px\"}\n                        width={\"100%\"}\n                        mode=\"text\"\n                        theme=\"github\"\n                        name=\"detail_box\"\n                        value={this.state.view.content || \"\"}\n                    ></AceEditor>                \n            </Modal>\n        </div>\n        )\n    }\n\n}","import React, { useState, useCallback, useEffect } from 'react';\nimport { FullScreen, useFullScreenHandle } from \"react-full-screen\"\nimport AnalysisWorkshop from './workshop';\nimport OperateStation from './OperateStation';\nimport { FullscreenOutlined } from '@ant-design/icons';\nimport { Button, Collapse, Divider } from 'antd';\nimport { FormattedMessage } from 'react-intl';\nimport styled from 'styled-components'\n\nfunction OperateStationWrapper(props) {\n    const ButtonGroup = styled.div`\n      display:flex;\n      align-items:right;    \n    ` \n    const handle = useFullScreenHandle();\n    return (\n        <div className=\"common-one-hundred-percent-width\">\n            <Collapse style={{marginBottom:\"10px\"}}>\n                <Collapse.Panel header={<>\n                    <Button icon={<FullscreenOutlined />} onClick={(evt)=>{\n                evt.preventDefault()\n                evt.stopPropagation()\n                handle.enter(evt)\n            }} />\n                <Divider type=\"vertical\"/>\n                <FormattedMessage id=\"operate_panel\"/>                \n                {/* <span style={{marginLeft:\"50px\",border:\"2px dash\"}}>\n                 <Button type=\"primary\">Apply</Button> \n                 <Divider type=\"vertical\"/> <Button type=\"primary\">Save As</Button> \n                 <Divider type=\"vertical\"/> <Button>Rollback</Button> \n                </span> */}\n                \n                </>}>                    \n                    <FullScreen handle={handle}>\n                        <OperateStation ref={(et) => AnalysisWorkshop.workshop.stationRef = et} />\n                    </FullScreen>\n                </Collapse.Panel>\n            </Collapse>\n\n        </div>\n    )\n}\nexport { OperateStationWrapper }","import React, { useState, useCallback, useEffect } from 'react';\nimport { FullScreen, useFullScreenHandle } from \"react-full-screen\"\nimport AnalysisWorkshop from './workshop';\nimport RealTimeViewTable from './RealTimeViewTable';\nimport { Button, Card, Collapse, Divider } from 'antd';\nimport { FullscreenOutlined } from '@ant-design/icons';\nimport { FormattedMessage } from 'react-intl';\n\nfunction RealTimeTableWrapper(props) {\n    const handle = useFullScreenHandle();\n    return (\n        <Collapse defaultActiveKey={\"1\"} style={{ marginBottom: \"30px\",width: \"100%\" }}>\n            <Collapse.Panel key=\"1\" header={<>\n            {AnalysisWorkshop.workshop.sessionId && <>            \n            <Button icon={<FullscreenOutlined />} onClick={(evt)=>{\n                evt.preventDefault()\n                evt.stopPropagation()\n                handle.enter(evt)\n            }} />\n            <Divider type=\"vertical\"/>\n            </>}            \n            <FormattedMessage id=\"data_panel\" /></>}>\n                <FullScreen handle={handle}>                    \n                    <RealTimeViewTable tableStyle={{ width: \"90%\" }} ref={(et) => AnalysisWorkshop.workshop.displayRef = et} />\n                </FullScreen>\n            </Collapse.Panel>\n        </Collapse>\n    )\n}\nexport { RealTimeTableWrapper }","import * as React from \"react\";\nimport { Modal, Result, Tabs, Divider } from \"antd\"\nimport './workshop.scss'\nimport LeftView from \"./leftview\";\nimport SpinBox from \"../SpinBox\"\nimport { WorkshopOp } from \"./WorkshopOp\";\nimport { WorkshopAutoSql } from \"./WorkshopAutoSql\";\nimport mix from \"../../common/mixin\"\nimport { ActionProxy } from \"../../backend_service/ActionProxy\";\nimport OperateStation from \"./OperateStation\";\nimport AceEditor from 'react-ace';\nimport { WorkshopMessageOp } from \"./WorkshopMessageOp\";\nimport { WorkshopUIOp } from \"./WorkshopUIOp\";\nimport { Resizable } from \"re-resizable\";\nimport RealTimeViewTable from \"./RealTimeViewTable\";\nimport { OperateStationWrapper } from \"./OperateStationWrapper\";\nimport { RealTimeTableWrapper } from \"./RealTimeTableWrapper\";\n\n\nclass AnalysisWorkshop extends mix(React.Component).\n    with(WorkshopOp,\n        WorkshopAutoSql,\n        WorkshopMessageOp,\n        WorkshopUIOp) {\n    static workshop = undefined\n    constructor(props) {\n        super(props)\n        this.client = new ActionProxy()\n        this.state = { tableLoading: false }\n        // {tableName:...  sql:...}\n        this.sqls = []\n        AnalysisWorkshop.workshop = this\n    }\n\n    componentDidMount() {\n        // for testing should remove\n        // this.newSession(\"temp\", \"\", \"cc2\", {})\n    }\n\n    operateStationView() {\n        if (this.state.loadingTable) {\n            return <SpinBox></SpinBox>\n        }\n        if (this.sessionId) {\n            //return <OperateStation ref={(et) => this.stationRef = et} parent={this}></OperateStation>\n            return <OperateStationWrapper />\n        } else {\n            return <Result style={{ width: \"100%\" }}\n                title=\"No Aanalysis Session Is Opened\"\n                subTitle=\"Right click the table in the left panel(DeltaLake/FileSystem) to begin your analysis\"\n            />\n        }\n    }\n\n    render() {\n        return <div className=\"ws-app\">\n            <div className=\"ws-left-pane\">\n                <Resizable style={{ paddingRight: \"30px\", borderRight: \"solid\" }}>\n                    <LeftView ref={(et) => this.leftTreePaneRef = et} parent={this}></LeftView>\n                </Resizable>\n            </div>\n            <div className=\"ws-right-pane\">\n                <Modal\n                    title={\"Message\"}\n                    visible={this.state.showMessage || false}\n                    onCancel={this.toggleMessage}\n                    onOk={this.toggleMessage}\n                    cancelText=\"Cancel\"\n                    width=\"60%\"\n                    OkText=\"Ok\"\n\n                >\n                    <AceEditor\n                        height={\"300px\"}\n                        width={\"100%\"}\n                        mode=\"text\"\n                        theme=\"github\"\n                        name=\"detail_box\"\n                        value={this.state.consoleMessage || \"\"}\n                    ></AceEditor>\n                </Modal>\n                <Modal\n                    title={\"Message\"}\n                    visible={this.state.showInfoMessage || false}\n                    onCancel={() => { this.setState({ showInfoMessage: false }) }}\n                    onOk={() => { this.setState({ showInfoMessage: false }) }}\n                    cancelText=\"Cancel\"\n                    OkText=\"Ok\"\n                >\n                    {this.state.infoMessage}\n                </Modal>\n                <div className=\"ws-operate-pane\">\n                    {this.operateStationView()}\n                </div>\n                <div className=\"ws-table-pane\">\n                    <RealTimeTableWrapper />\n                </div>\n            </div>\n        </div>\n    }\n}\nexport default AnalysisWorkshop","import ActionMaker from \"../../../ActionMaker\"\nimport { ActionProxy } from \"../../../../backend_service/ActionProxy\"\nimport RemoteAction from \"../../../../backend_service/RemoteAction\"\n\nexport const { handler: LRActionHandler, action: LRAction } = ActionMaker.buildHandler(async (action) => {\n\n    const { enableRegister, enableLogin, enableConsole } = action.data\n    const params = {}\n    if(enableRegister !== undefined){\n        params.register = enableRegister\n    }\n    if(enableLogin !== undefined){\n        params.login = enableLogin\n    }\n    if(enableConsole !== undefined){\n        params.console = enableConsole\n    }    \n    \n    const client = new ActionProxy()\n    const res = await client.post(RemoteAction.APP_SAVE, params)\n\n    if (res.status === 200) {\n        return {\n            data: {\n                applySuccess: true\n            }\n        }\n    }\n    return {\n        data: {\n            error: res.content\n        }\n    }\n\n})","import ActionMaker from \"../../../ActionMaker\"\n\nexport const {handler:SetStateActionHandler,action:SetStateAction} = ActionMaker.buildHandler(async (action)=>{\n    return {        \n        data: {\n            ...action.data  \n        }\n    }\n})","import { AdminSetting } from \"../AdminSetting\";\nimport { LRActionHandler, LRAction } from \"./LRAction\";\nimport { SetStateActionHandler, SetStateAction } from \"./SetStateAction\";\n\nclass AdminSettingActionNames {\n    static LR_CONTROL = \"lrControl\"\n    static SET_STATE = \"setState\"\n}\nconst AdminSettingHandlers = {\n    [AdminSettingActionNames.LR_CONTROL]: LRActionHandler,\n    [AdminSettingActionNames.SET_STATE]: SetStateActionHandler\n}\n\nfunction AdminSettingReducer(state, action) {\n    switch (action.type) {\n        case AdminSettingActionNames.LR_CONTROL:            \n            return LRAction(state, action.data)\n        case AdminSettingActionNames.SET_STATE:\n            return SetStateAction(state, action.data)\n        default:\n            return state;\n    }\n}\nexport { AdminSettingActionNames, AdminSettingReducer, AdminSettingHandlers }","import React, { useState, useCallback, useEffect } from 'react';\nimport { Steps, Spin, Switch, Alert, Form, Card, Button } from 'antd';\nimport { useReducerAsync } from 'use-reducer-async'\nimport UIMaker from '../../../UIMaker'\nimport { AdminSettingReducer, AdminSettingHandlers, AdminSettingActionNames } from '../actions/AdminSettingReducer';\nimport ActionMaker from '../../../ActionMaker';\nimport {ActionProxy} from '../../../../backend_service/ActionProxy'\nimport RemoteAction from '../../../../backend_service/RemoteAction';\nimport SpinBox from '../../../SpinBox';\n\nconst initState = {\n    enableLogin: false,\n    enableRegister: false,\n    enableConsole: false,\n    applySuccess: false,\n    error: undefined,\n    loading: true\n}\n\nconst LRSettingsContext = React.createContext()\n\nfunction LRSettings() {\n    const [state, dispacher] = useReducerAsync(AdminSettingReducer, initState, AdminSettingHandlers)\n    const { formItemLayout, tailLayout } = UIMaker.formLayout1()\n\n    const { enableLogin, enableRegister,\n        enableConsole,\n        applySuccess,error,loading} = state\n\n    async function getAppInfo() {        \n        const client = new ActionProxy()\n        const appInfo = await client.get(RemoteAction.APP_INFO, {})\n        if (appInfo.status === 200) {             \n            dispacher({\n                type: AdminSettingActionNames.SET_STATE,\n                data: {\n                    enableLogin: Boolean(appInfo.content.login),\n                    enableRegister: Boolean(appInfo.content.register),\n                    enableConsole: Boolean(appInfo.content.console),\n                    loading: false\n                }\n            })\n        }    \n    }\n\n    useEffect(()=>{\n        getAppInfo()\n    },[applySuccess,error])\n\n\n    return (\n        <LRSettingsContext.Provider value={{ dispacher }}>            \n            {applySuccess && <Alert\n                closable\n                message=\"Success\"\n                description=\"Apply Success\"\n                type=\"success\"\n                showIcon\n            />}\n            {error && <Alert\n                closable\n                message=\"Fail\"\n                description={error}\n                type=\"error\"\n                showIcon\n            />}\n            {                \n                loading && <SpinBox></SpinBox>\n            }\n            {!loading && <Card title=\"Control Website Register/Login\">\n                <Form {...formItemLayout} className=\"login-form\" onFinish={(values) => {\n                    dispacher(ActionMaker.buildEvent(AdminSettingActionNames.LR_CONTROL, values))\n                }}>\n                    <Form.Item\n                        label=\"Allow Register New User\"\n                        name=\"enableRegister\"\n                    >\n                        <Switch defaultChecked={enableRegister} checkedChildren=\"enable\" unCheckedChildren=\"shutdown\" />\n                    </Form.Item>\n\n                    <Form.Item\n                        label=\"Allow User Login\"\n                        name=\"enableLogin\"\n                    >\n                        <Switch defaultChecked={enableLogin} checkedChildren=\"enable\" unCheckedChildren=\"shutdown\" />\n                    </Form.Item>\n\n                    <Form.Item\n                        label=\"Enable Console(SQL)\"\n                        name=\"enableConsole\"\n                    >\n                        <Switch defaultChecked={enableConsole} checkedChildren=\"enable\" unCheckedChildren=\"shutdown\" />\n                    </Form.Item>\n\n                    <Form.Item {...tailLayout}>\n                        <Button type=\"primary\" htmlType=\"submit\">\n                            Apply\n        </Button>\n                    </Form.Item>\n                </Form>\n            </Card>}            \n        </LRSettingsContext.Provider>\n    )\n}\nexport { LRSettings, LRSettingsContext }","import React, { useState, useCallback, useEffect } from 'react';\nimport { useDynamicList } from 'ahooks'\nimport { Form, Button, Input, Table } from 'antd';\nimport ReactDragListView from 'react-drag-listview';\nimport AlertBox from '../../AlertBox';\n\nfunction useCrudTable(props) {\n    const { renderConfig, createInitRow, submit: externalSubmit, remove: externalRemove } = props\n    const [form] = Form.useForm()\n    const [schema, setSchema] = useState([])\n    const [data, setData] = useState([])\n    const [result, setResult] = useState({})\n    const [loading, setLoading] = useState(false)\n    const [editorMode, setEditorMode] = useState(false)\n    const [error, setError] = useState(undefined)\n\n    const { list, remove, getKey, move, push, sortForm, resetList } = useDynamicList(data);\n    const { getFieldsValue } = form;\n\n    useEffect(() => {\n        resetList(data)\n    }, [data])\n\n    const _columns = schema.filter(item => item !== \"id\").map(item => {\n        if (renderConfig && renderConfig[item]) return renderConfig[item]({ getKey })\n        return {\n            title: item,\n            dataIndex: item,\n            key: item,\n            render: (text, row, index) => (\n                <>\n                    <Form.Item name={`params[${getKey(index)}].${item}`} initialValue={text}>\n                        <Input\n                            style={{\n                                width: 120,\n                                marginRight: 16,\n                            }}\n                        />\n                    </Form.Item>\n                </>)\n\n        }\n    })\n    const columns = _columns.concat([{\n        key: 'operate',\n        title: '',\n        dataIndex: 'operate',\n        render: (text, row, index) => (\n\n            <>\n                <Form.Item name={`params[${getKey(index)}].operate`}>\n                    <Button.Group>\n                        <Button type=\"danger\" onClick={() => {\n                            if (externalRemove) {\n                                externalRemove({row,setLoading})\n                            }\n                            remove(index)\n                        }\n                        }>\n                            Delete\n                    </Button>\n                    </Button.Group>\n                </Form.Item>\n\n            </>\n        ),\n    }])\n\n    const createRow = () => {\n        if (createInitRow) {\n            return createInitRow(columns)\n        }\n        const tempRow = {}\n        columns.map(item => {\n            tempRow[item] = \"\"\n        })\n        return tempRow\n    }\n\n    const submitNow = useCallback((values) => {\n        setResult(values)\n        var REG = /params\\[(\\d+)\\]\\.(\\D+)/;\n        const submit = async () => {\n            const params = []\n            Object.entries(values).map(([fieldName, fieldValue]) => {\n                const matchFF = REG.exec(fieldName)\n                const index = Number(matchFF[1])\n                const field = matchFF[2]\n                if (!params[index]) {\n                    params[index] = {}\n                }\n                if (fieldValue) {\n                    params[index][field] = fieldValue\n                }\n            })\n            if (externalSubmit) {\n                externalSubmit({ params, setLoading })\n            }\n        }\n        submit()\n    }, [setLoading])\n\n    const ui = () => {\n        if (!editorMode) {\n            const newColumns = columns.map(item => {\n                item[\"render\"] = (text, row, index) => {\n                    return <span>{text}</span>\n                }\n                return item\n            })\n            return <Table\n                columns={newColumns}\n                dataSource={data}\n                pagination={false}\n            />\n        }\n        return <>\n            <Form form={form}>\n                <ReactDragListView\n                    onDragEnd={(oldIndex, newIndex) => move(oldIndex, newIndex)}\n                    handleSelector={'i[aria-label=\"icon: drag\"]'}\n                >\n                    {error && <AlertBox message={error} />}\n                    <Table\n                        columns={columns}\n                        dataSource={list}\n                        rowKey={(r, index) => getKey(index).toString()}\n                        pagination={false}\n                    />\n                </ReactDragListView>\n                <Button\n                    style={{\n                        marginTop: 8,\n                    }}\n                    block\n                    type=\"dashed\"\n                    onClick={() =>\n                        push(createRow())\n                    }\n                >\n                    + Add Row\n          </Button>\n                <Button\n                    type=\"primary\"\n                    style={{\n                        marginTop: 16,\n                    }}\n                    loading={loading}\n                    onClick={() => {\n                        submitNow(getFieldsValue())\n                    }}\n                >\n                    Submit\n          </Button>\n                {props.debug && <div\n                    style={{\n                        whiteSpace: 'pre',\n                    }}\n                >\n                    {result && `content: ${JSON.stringify(result, null, 2)}`}\n                </div>}\n            </Form>\n        </>\n    }\n    return { ui, data, schema, setData, setSchema, setLoading, setEditorMode, setError }\n}\n\nexport { useCrudTable }","import React, { useState, useCallback, useEffect } from 'react';\nimport { useCrudTable } from '../../../analysis/common/CrudTable';\nimport { Select, Form, Button, Switch, Divider } from 'antd';\nimport { ActionProxy } from '../../../../backend_service/ActionProxy';\nimport RemoteAction from '../../../../backend_service/RemoteAction';\nimport Tools from '../../../../common/Tools';\n\n\nfunction Engines(props) {\n\n    const [reload, setReload] = useState(undefined)\n    const proxy = new ActionProxy()\n    const { ui, setData, setSchema, setEditorMode ,setError} = useCrudTable({\n        remove: async ({row,setLoading}) => {\n            setLoading(true)\n            setError(undefined)\n            const res = await proxy.post(RemoteAction.ENGINE_REMOVE, {id:row.id})\n            if(res.status !== 200){\n                setLoading(false)\n                setError(res.content)\n                return\n            }\n            setReload(Tools.getJobName())\n            setLoading(false)\n        },\n        submit: async ({ params, setLoading }) => {\n            setLoading(true)\n            setError(undefined)\n            for (let i = 0; i < params.length; i++) {\n                const res = await proxy.post(RemoteAction.ENGINE_ADD, params[i])\n                if(res.status !== 200){\n                    setLoading(false)\n                    setError(res.content)\n                    return\n                }\n            }\n            setReload(Tools.getJobName())\n            setLoading(false)\n        },\n        renderConfig: {\n            skipAuth: ({ getKey }) => {\n                return {\n                    title: \"skipAuth\",\n                    dataIndex: \"skipAuth\",\n                    key: \"skipAuth\",\n                    render: (text, row, index) => {\n                        let value = true\n                        if (text === 2) {\n                            value = false\n                        }\n                        return <>\n                            <Form.Item name={`params[${getKey(index)}].skipAuth`} initialValue={String(value)}>\n                                <Select>\n                                    <Select.Option value=\"true\">true</Select.Option>\n                                    <Select.Option value=\"false\">false</Select.Option>\n                                </Select>\n                            </Form.Item>\n                        </>\n                    }\n\n                }\n            }\n        }\n    })\n\n    useEffect(() => {\n        const fetch = async () => {\n            const res = await proxy.get(RemoteAction.ENGINE_LIST, {})\n            if (res.status === 200) {\n                setSchema(res.content.schema)\n                setData(res.content.data)\n            }\n        }\n        fetch()\n    }, [reload])\n\n    return <div className=\"common-margin\">\n        <Switch checkedChildren=\"Edit Mode\" unCheckedChildren=\"View Mode\" onChange={\n            (checked) => {\n                setEditorMode(checked)\n            }\n        } />\n        <Divider type=\"horizontal\" />\n        {ui()}\n    </div>\n}\n\nexport { Engines }\n","import React, { useState, useContext, useEffect, useCallback } from 'react';\nimport { Input, Form, Card, Button, Alert } from 'antd';\nimport { ActionProxy } from '../../../../backend_service/ActionProxy';\nimport RemoteAction from '../../../../backend_service/RemoteAction';\n\n\n\nfunction ChangePassword() {\n    const [error, setError] = useState(undefined)\n    const [applySuccess, setApplySuccess] = useState(undefined)\n\n    const submit = useCallback(async (values) => {\n        const { password, newPassword, _newPassword } = values\n        if (newPassword !== _newPassword) {\n            setError(\"Two new passwords are not the same\")\n            return\n        }\n        const proxy = new ActionProxy()\n        const res = proxy.post(RemoteAction.USER_CHANGE_PASSWORD, values)\n        setApplySuccess(\"Update password successfully.\")\n    }, [])\n\n    return <Card className=\"common-child-center\">\n        {applySuccess && <Alert\n            closable\n            message=\"Success\"\n            description=\"Apply Success\"\n            type=\"success\"\n            showIcon\n        />}\n        {error && <Alert\n            closable\n            message=\"Fail\"\n            description={error}\n            type=\"error\"\n            showIcon\n        />}\n        <Form className=\"login-form\" onFinish={(values) => {\n            submit(values)\n        }}>\n\n            <Form.Item\n                label=\"Oringinal Password\"\n                name=\"password\"\n                rules={[\n                    {\n                        required: true,\n                        message: 'Please input your oringinal password!',\n                    },\n                ]}\n            >\n                <Input.Password />\n            </Form.Item>\n            <Form.Item\n                label=\"New Password\"\n                name=\"newPassword\"\n                rules={[\n                    {\n                        required: true,\n                        message: 'Please input your new password!',\n                    },\n                ]}\n            >\n                <Input.Password />\n            </Form.Item>\n            <Form.Item\n                label=\"New Password\"\n                name=\"_newPassword\"\n                rules={[\n                    {\n                        required: true,\n                        message: 'Please input your new password again!',\n                    },\n                ]}\n            >\n                <Input.Password />\n            </Form.Item>\n            <Form.Item >\n                <Button type=\"primary\" htmlType=\"submit\">\n                    Submit\n            </Button>\n            </Form.Item>\n        </Form>\n    </Card>\n}\n\nexport default ChangePassword","import React, { useState, useCallback, useEffect } from 'react';\nimport { useReducerAsync } from 'use-reducer-async'\nimport { AdminSettingReducer, AdminSettingHandlers } from './actions/AdminSettingReducer';\nimport { Menu } from 'antd';\nimport './AdminSetting.scss'\nimport { AppstoreOutlined, MailOutlined, SettingOutlined } from '@ant-design/icons';\nimport { LRSettings } from './pages/LRSettings';\nimport {Engines} from './pages/Engines'\nimport ChangePassword from './pages/ChangePassword';\n\nconst { SubMenu } = Menu;\n\n\nconst initState = {\n    currentPage: \"website-settings\"\n}\n\nconst AdminSettingContext = React.createContext()\n\nfunction AdminSetting() {\n    const [state, dispacher] = useReducerAsync(AdminSettingReducer, initState, AdminSettingHandlers)\n    const {currentPage} = state\n    return (\n        <AdminSettingContext.Provider value={{ dispacher }}>\n            <div className=\"app-admin\">\n                <div className=\"app-admin-side\">\n                    <Menu\n                        style={{ width: 256 }}\n                        defaultSelectedKeys={['website-settings']}\n                        defaultOpenKeys={['console-settings']}\n                        mode=\"inline\"\n                    >\n                        <SubMenu\n                            key=\"console-settings\"\n                            title={\n                                <span>\n                                    <MailOutlined />\n                                    <span>Console Settings</span>\n                                </span>\n                            }\n                        >\n                            <Menu.Item key=\"website-settings\" onClick={()=>{\n                                dispacher({\n                                    type:\"setState\",\n                                    data:{currentPage:\"website-settings\"}\n                                })\n                            }}>Website Settings</Menu.Item>                                                         \n                        </SubMenu> \n                        <SubMenu\n                            key=\"engine-settings\"\n                            title={\n                                <span>\n                                    <MailOutlined />\n                                    <span>Engine Settings</span>\n                                </span>\n                            }\n                        >\n                            <Menu.Item onClick={()=>{\n                                dispacher({\n                                    type:\"setState\",\n                                    data:{currentPage:\"engines\"}\n                                })\n                            }} key=\"engines\">Engines</Menu.Item>                                                         \n                        </SubMenu>                                               \n                    </Menu>\n                </div>\n                <div className=\"app-admin-main\">\n                     {currentPage===\"website-settings\" && <LRSettings></LRSettings>}\n                     {currentPage===\"engines\" && <Engines></Engines>}                      \n                </div>\n            </div>\n        </AdminSettingContext.Provider>\n    )\n}\nexport { AdminSetting, AdminSettingContext }","import React, { useState, useCallback, useEffect } from 'react';\nimport { Form, Card, Button } from 'antd';\nimport AlertBox from '../../../AlertBox';\nimport { FormattedMessage } from 'react-intl';\n\nfunction useUserConfig(props) {\n    const [error, setError] = useState(\"\")\n    const [success, setSuccess] = useState(\"\")\n    const [current, setCurrent] = useState(\"\")\n    const [loading, setLoading] = useState(false)\n    const [form] = Form.useForm()\n    const formItemLayout = {\n        labelCol: { span: 6 },\n        wrapperCol: { span: 14 },\n    };\n    const getParams = () => {\n        return form.getFieldsValue()\n    }\n    const ui = ({ formItems, title, submit }) => (\n        <div className=\"common-margin common-child-center\" {...formItemLayout}>\n            <Card title={title} style={{ width: props?.width||\"50%\" }}>\n                <Form form={form}>\n                    {error && <AlertBox message={<FormattedMessage id={error} />} />}\n                    {success && <AlertBox title={<FormattedMessage id=\"congratulation\"/>} type=\"success\" message={<FormattedMessage id={success} />} />}\n                    {formItems}\n                </Form>\n                <Form.Item>\n                    <Button type=\"primary\" loading={loading} onClick={\n                        submit\n                    }><FormattedMessage id=\"apply\" /></Button>\n                </Form.Item>\n            </Card>\n        </div>\n    )\n    return { ui, form, setError, setLoading, getParams,setCurrent,current,setSuccess}\n}\nexport { useUserConfig }","import React, { useState, useCallback, useEffect } from 'react';\nimport { EngineSelectComp } from '../../pages/EngineSelectComp';\nimport { Form, Card, Button } from 'antd';\nimport { ActionProxy } from '../../../../backend_service/ActionProxy';\nimport RemoteAction from '../../../../backend_service/RemoteAction';\nimport UIMaker from '../../../UIMaker';\nimport { useUserConfig } from '../../../analysis/common/pages/useUserConfig';\nimport { FormattedMessage  } from 'react-intl'; \nimport Tools from '../../../../common/Tools';\n\n\nfunction DefaultBackend(props) {\n\n    const { ui, setError,setSuccess } = useUserConfig()\n    const [engine,setEngine] = useState(undefined)\n    const submit = async () => {\n        if(!engine){\n          setError(\"set_default_backend_error\")\n          return\n        }\n        const proxy = new ActionProxy()\n        const res = await proxy.post(RemoteAction.USER_EXTRA, { backend: engine })\n        if (res.status === 200) {\n            UIMaker.updateUser(res) \n            setSuccess(\"done\")           \n            return\n        }\n        setError(res.content)\n    }\n\n    return ui({\n        title: <FormattedMessage id=\"set_default_backend\"/>,\n        submit,\n        formItems: <>\n            <Form.Item label={<FormattedMessage id=\"curent_value\"/>}>\n                {UIMaker.extraOption()[\"backend\"] || \"Not Set Yet\"}\n            </Form.Item>\n            <Form.Item label={<FormattedMessage id=\"choose\"/>}>\n                <EngineSelectComp useEngine={(engine) => { setEngine(engine) }} />\n            </Form.Item></>\n    })\n}\nexport { DefaultBackend }","import React, { useState, useCallback, useEffect } from 'react';\nimport { EngineSelectComp } from '../../pages/EngineSelectComp';\nimport { Form, Card, Button } from 'antd';\nimport { ActionProxy } from '../../../../backend_service/ActionProxy';\nimport RemoteAction from '../../../../backend_service/RemoteAction';\nimport UIMaker from '../../../UIMaker';\nimport { useUserConfig } from '../../../analysis/common/pages/useUserConfig';\nimport { FormattedMessage  } from 'react-intl'; \nimport Tools from '../../../../common/Tools';\nimport { useIntegerStep } from '../../../analysis/common/pages/useIntegerStep';\n\n\nfunction ApplyTimeout(props) {\n\n    const { ui, setError,setSuccess } = useUserConfig()\n    const {ui:timeoutUi,value:timoutValue} = useIntegerStep({\n        initialValue:UIMaker.extraOption()[\"apply_timeout\"] || 10\n    })    \n    const submit = async () => {\n        if(!timoutValue){\n          setError(\"set_default_backend_error\")\n          return\n        }\n        const proxy = new ActionProxy()\n        const res = await proxy.post(RemoteAction.USER_EXTRA, { apply_timeout: timoutValue })\n        if (res.status === 200) {\n            UIMaker.updateUser(res) \n            setSuccess(\"done\")           \n            return\n        }\n        setError(res.content)\n    }\n\n    return ui({\n        title: <FormattedMessage id=\"set_apply_timeout\"/>,\n        submit,\n        formItems: <>\n            <Form.Item label={<FormattedMessage id=\"curent_value\"/>}>\n                {timoutValue}\n            </Form.Item>\n            <Form.Item label={<FormattedMessage id=\"choose\"/>}>\n                {timeoutUi()}\n            </Form.Item></>\n    })\n}\nexport { ApplyTimeout }","import React, { useState, useCallback, useEffect } from 'react';\nimport { useCrudTable } from '../../../analysis/common/CrudTable';\nimport { Select, Form, Button, Switch, Divider } from 'antd';\nimport { ActionProxy } from '../../../../backend_service/ActionProxy';\nimport RemoteAction from '../../../../backend_service/RemoteAction';\nimport Tools from '../../../../common/Tools';\n\n\nfunction Teams(props) {\n\n    const [reload, setReload] = useState(undefined)\n    const proxy = new ActionProxy()\n    const { ui, setData, setSchema, setEditorMode ,setError} = useCrudTable({\n        submit: async ({ params, setLoading }) => {\n            setLoading(true)\n            setError(undefined)\n            for (let i = 0; i < params.length; i++) {\n                // const res = await proxy.post(RemoteAction.ENGINE_ADD, params[i])\n                // if(res.status !== 200){\n                //     setLoading(false)\n                //     setError(res.content)\n                //     return\n                // }\n            }\n            setReload(Tools.getJobName())\n            setLoading(false)\n        },\n        renderConfig: {}\n    })\n\n    useEffect(() => {\n        const fetch = async () => {\n            const res = await proxy.get(RemoteAction.TEMA_LIST, {})\n            if (res.status === 200) {\n                setSchema(res.content.schema)\n                setData(res.content.data)\n            }\n        }\n        fetch()\n    }, [reload])\n\n    return <div className=\"common-margin\">\n        <Switch checkedChildren=\"Edit Mode\" unCheckedChildren=\"View Mode\" onChange={\n            (checked) => {\n                setEditorMode(checked)\n            }\n        } />\n        <Divider type=\"horizontal\" />\n        {ui()}\n    </div>\n}\n\nexport { Teams }\n","import React, { useState, useCallback, useEffect } from 'react';\nimport { Form, Card, Input, Divider } from 'antd';\nimport { FormattedMessage } from 'react-intl';\nimport { useUserConfig } from '../../common/pages/useUserConfig';\nimport { ActionProxy } from '../../../../backend_service/ActionProxy';\nimport RemoteAction from '../../../../backend_service/RemoteAction';\n\n\nfunction MySQL() {\n    const { ui, setError, setSuccess, form } = useUserConfig()\n    const submit = async () => {\n        let { host, port, db, user, password, name } = form.getFieldsValue()\n        if (!name) {\n            name = db\n        }\n        if (!port) {\n            port = \"3306\"\n        }\n        const proxy = new ActionProxy()\n        const res = await proxy.post(RemoteAction.DS_ADD, { \n            host, port, db, user, password, name, format: \"jdbc\",jType:\"mysql\" })\n        if (res.status === 200) {\n            setSuccess(\"Create Connect Success\")\n        } else {\n            setError(res.content)\n        }\n    }\n\n    return ui(\n        {\n            title: <FormattedMessage id=\"connect_mysql\" />,\n            submit,\n            formItems: <>\n                <Form.Item name=\"host\" required={true} label={<FormattedMessage id=\"host\" />}>\n                    <Input placeholder=\"127.0.0.1\" />\n                </Form.Item>\n                <Form.Item name=\"port\" initialValue={\"3306\"} label={<FormattedMessage id=\"port\" />}>\n                    <Input />\n                </Form.Item>\n                <Form.Item name=\"db\" required={true} label={<FormattedMessage id=\"db\" />}>\n                    <Input />\n                </Form.Item>\n                <Divider />\n                <Form.Item name=\"user\" required={true} label={<FormattedMessage id=\"user\" />}>\n                    <Input />\n                </Form.Item>\n                <Form.Item name=\"password\" required={true} label={<FormattedMessage id=\"password\" />}>\n                    <Input />\n                </Form.Item>\n                <Divider />\n                <Form.Item name=\"name\" label={<FormattedMessage id=\"alias\" />}>\n                    <Input />\n                </Form.Item>\n            </>\n        }\n    )\n}\nexport { MySQL }","import React, { useState, useCallback, useEffect } from 'react';\nimport { useCrudTable } from '../../../analysis/common/CrudTable';\nimport { Select, Form, Button, Switch, Divider } from 'antd';\nimport { ActionProxy } from '../../../../backend_service/ActionProxy';\nimport RemoteAction from '../../../../backend_service/RemoteAction';\nimport Tools from '../../../../common/Tools';\n\n\nfunction ListMySQL() {\n    const [reload, setReload] = useState(undefined)\n    const proxy = new ActionProxy()\n    const { ui, setData, setSchema, setEditorMode ,setError} = useCrudTable({\n        submit: async ({ params, setLoading }) => {\n            setLoading(true)\n            setError(undefined)\n            for (let i = 0; i < params.length; i++) {\n                // const res = await proxy.post(RemoteAction.ENGINE_ADD, params[i])\n                // if(res.status !== 200){\n                //     setLoading(false)\n                //     setError(res.content)\n                //     return\n                // }\n            }\n            setReload(Tools.getJobName())\n            setLoading(false)\n        },\n        remove: async(row) =>{\n            const res = await proxy.post(RemoteAction.DS_REMOVE,{id:row.id})\n            if(res.status === 200){\n                setSchema(res.content.schema)\n                setData(res.content.data)\n            }\n        },\n        renderConfig: {}\n    })\n\n    useEffect(() => {\n        const fetch = async () => {\n            const res = await proxy.get(RemoteAction.DS_LIST, {})\n            if (res.status === 200) {\n                setSchema(res.content.schema)\n                setData(res.content.data)\n            }\n        }\n        fetch()\n    }, [reload])\n\n    return <div className=\"common-margin\">\n        <Switch checkedChildren=\"Edit Mode\" unCheckedChildren=\"View Mode\" onChange={\n            (checked) => {\n                setEditorMode(checked)\n            }\n        } />\n        <Divider type=\"horizontal\" />\n        {ui()}\n    </div>\n}\nexport { ListMySQL }","import { CommonHandlers,CommonActions} from '../../../../v1/analysis/common/CommonHandlers'\nimport { CommonActionNames } from '../../../../v1/analysis/common//CommonActionNames'\nimport { ApplyActionHandler, ApplyAction } from '../../../../v1/analysis/common/actions/ApplyAction'\n// --import--\n\nclass SetupEngineFromCloudActionNames {\n// --name--\n}\nconst SetupEngineFromCloudHandlers = {\n    ...CommonHandlers,\n[CommonActionNames.APPLY]: ApplyActionHandler,\n// --handler--\n}\nconst SetupEngineFromCloudActions = {\n    ...CommonActions,\n[CommonActionNames.APPLY]: ApplyAction,\n// --action--\n}\n\nfunction SetupEngineFromCloudReducer(state, action) {\nreturn SetupEngineFromCloudActions[action.type](state, action.data)    \n}\nexport { SetupEngineFromCloudActionNames, SetupEngineFromCloudReducer, SetupEngineFromCloudHandlers }","import React,{useEffect,useState} from 'react'\nimport {Divider, Form, List, Typography} from 'antd'\nimport { FormattedMessage } from 'react-intl'\nimport {ActionProxy} from \"../../../backend_service/ActionProxy\";\nimport RemoteAction from \"../../../backend_service/RemoteAction\";\n\ninterface Props {\n    name:string\n}\n\ninterface EngineCreateStatusResp {\n    status:number,\n    message: Array<string>,\n}\n\nconst UseEngineCreateLoading:React.FunctionComponent<Props>  = (props:Props) => {\n    const [resp,setResp] = useState<EngineCreateStatusResp|null>(null)\n    const [timer,setTimer] = useState<any>(null)\n\n\n    useEffect(()=>{\n        const fetch = async()=>{\n            const proxy = new ActionProxy()\n            const res = await proxy.get(RemoteAction.CLOUD_ENGINE_STATUS,{owner: props.name})\n            if(res.status === 200){\n                const temp = res.content as EngineCreateStatusResp\n                setResp(temp)\n            }\n        }\n        const temp = setInterval(fetch,3000)\n        setTimer(temp)\n        return ()=>{\n            clearInterval(timer)\n        }\n    },[])\n\n\n    return (\n        <>\n            <Divider orientation=\"left\"><FormattedMessage id={\"a_4\"}/></Divider>\n            <List\n                bordered\n                dataSource={resp?.message}\n                renderItem={item => (\n                    <List.Item>\n                        {item}\n                    </List.Item>\n                )}\n            />\n        </>\n    )\n    \n}\n\nexport {UseEngineCreateLoading}","import React,{useEffect} from 'react'\nimport { useReducerAsync } from 'use-reducer-async'\nimport { SetupEngineFromCloudReducer, SetupEngineFromCloudHandlers } from './actions/SetupEngineFromCloudReducer'\nimport { FormattedMessage } from 'react-intl'\nimport {useUserConfig} from \"../../analysis/common/pages/useUserConfig\";\nimport {ActionProxy} from \"../../../backend_service/ActionProxy\";\nimport RemoteAction from \"../../../backend_service/RemoteAction\";\nimport {Col, Divider, Form, Input, Result, Select, Slider, Switch} from \"antd\";\nimport {UseEngineCreateLoading} from \"./UseEngineCreateLoading\";\nimport {CommonActionNames} from \"../../analysis/common/CommonActionNames\";\n\ninterface Props {   \n}\n\nconst initState = {\n  loadingPage: false,\n  engineName:  \"\"\n}\n\nconst SetupEngineFromCloudContext = React.createContext<{state:any,dispacher:React.Dispatch<any>}|null>(null)\n\nconst SetupEngineFromCloud:React.FunctionComponent<Props> = (props) => {\n    const [state, dispacher] = useReducerAsync(SetupEngineFromCloudReducer, initState, SetupEngineFromCloudHandlers)\n    const {loadingPage,engineName} = state;\n    const { ui, setError,getParams } = useUserConfig({width:\"70%\"})\n    const submit = async ()=>{\n        const proxy = new ActionProxy()\n        const params = getParams()\n        const res = await proxy.post(RemoteAction.CLOUD_CREATE_ENGINE,params)\n        if(res.status === 200){\n            setError(\"\")\n            dispacher({\n                type: CommonActionNames.setState,\n                data: {\n                    loadingPage: true,\n                    engineName: params[\"owner\"]\n                }\n\n            })\n        }else {\n            try {\n                setError(JSON.parse(res.content)?.message || \"Unknown Error\")\n            }catch (e){\n                setError(e.description)\n            }\n\n        }\n    }\n\n    useEffect(()=>{\n      // const fetch = async()=>{          \n      // }\n      // fetch()\n     },[])\n\n    return (\n        <SetupEngineFromCloudContext.Provider value={ { state,dispacher} }>\n            <div>\n                {\n                    loadingPage ?\n                        <UseEngineCreateLoading name={engineName}/>\n                        : ui({\n                        title: <FormattedMessage id=\"input_message\"/>,\n                        submit,\n                        formItems: <>\n                            <Result\n                                status=\"warning\"\n                                title={<FormattedMessage id=\"a_1\"/>}\n                                extra={<FormattedMessage id=\"a_2\"/>}\n                            />\n                            <Divider orientation=\"left\"><FormattedMessage id=\"aliyun_related\"/></Divider>\n                            <Form.Item name={\"owner\"} label={<FormattedMessage id=\"engine_name\"/>} help={\"必填\"}>\n                                <Input />\n                            </Form.Item>\n                            <Form.Item name={\"OSSBucket\"} label={<FormattedMessage id=\"OSSBucket\"/>} help={\"默认bucket名称,比如：mlsql-release-repo\"}>\n                                <Input/>\n                            </Form.Item>\n                            <Form.Item name={\"AccessKeyID\"} label={<FormattedMessage id=\"access_key_id\"/>} help={\"必填\"}>\n                                <Input/>\n                            </Form.Item>\n                            <Form.Item name={\"AccessKeySecret\"} label={<FormattedMessage id=\"access_key_secret\"/>} help={\"必填\"}>\n                                <Input/>\n                            </Form.Item>\n                            <Form.Item name={\"OSSAccessKeyID\"} label={<FormattedMessage id=\"oss_access_key_id\"/>} help={\"默认同 AccessKeySecret\"}>\n                                <Input/>\n                            </Form.Item>\n                            <Form.Item name={\"OSSAccessKeySecret\"} label={<FormattedMessage id=\"oss_access_key_secret\"/>} help={\"默认同 AccessKeySecret\"}>\n                                <Input/>\n                            </Form.Item>\n                            <Form.Item name={\"ReginID\"} label={<FormattedMessage id=\"regin_id\"/>} initialValue={\"cn-hangzhou\"}>\n                                <Input/>\n                            </Form.Item>\n                            <Form.Item valuePropName=\"checked\"  initialValue={true} name={\"EndpointPublicAccess\"} label={<FormattedMessage id=\"endpoint_public_access\"/>} >\n                                <Switch  />\n                            </Form.Item>\n                            <Divider orientation=\"left\"><FormattedMessage id=\"cluster_related\"/></Divider>\n                            {/*<Form.Item name={\"K8sAddress\"} label={<FormattedMessage id=\"K8sAddress\"/>} help={\"选填\"}>*/}\n                            {/*    <Input/>*/}\n                            {/*</Form.Item>*/}\n                            <Form.Item name={\"DriverCoreNum\"} label={<FormattedMessage id=\"driver_core_num\"/>} initialValue={1}>\n                                <Slider\n                                    min={0}\n                                    max={8}\n                                    marks={{\n                                        1: '1c',\n                                        2: '2c',\n                                        4: '4c',\n                                        8: '8c'\n                                    }}\n                                />\n                            </Form.Item>\n                            <Form.Item name={\"DriverMemory\"} label={<FormattedMessage id=\"driver_memory\"/>} initialValue={2}>\n                                <Slider\n                                    min={0}\n                                    max={8}\n                                    marks={{\n                                        2: '2g',\n                                        4: '4g',\n                                        8: '8g'\n                                    }}\n                                />\n                            </Form.Item>\n                            <Form.Item name={\"ExecutorCoreNum\"} label={<FormattedMessage id=\"executor_core_num\"/>} initialValue={1}>\n                                <Slider\n                                    min={0}\n                                    max={8}\n                                    marks={{\n                                        1: '1c',\n                                        2: '2c',\n                                        4: '4c',\n                                        8: '8c'\n                                    }}\n                                />\n                            </Form.Item>\n                            <Form.Item name={\"ExecutorMemory\"} label={<FormattedMessage id=\"executor_memory\"/>} initialValue={2}>\n                                <Slider\n                                    min={0}\n                                    max={8}\n                                    marks={{\n                                        2: '2g',\n                                        4: '4g',\n                                        8: '8g'\n                                    }}\n                                />\n                            </Form.Item>\n                            <Form.Item name={\"ExecutorNum\"} label={<FormattedMessage id=\"executor_num\"/>} initialValue={1}>\n                                <Slider\n                                    min={0}\n                                    max={8}\n                                    marks={{\n                                        1: '1',\n                                        4: '4',\n                                        8: '8'\n                                    }}\n                                />\n                            </Form.Item>\n                            <Form.Item name={\"EngineVersion\"} label={<FormattedMessage id=\"engine_version\"/>} initialValue={\"2.1.0\"}>\n                                <Select>\n                                    <Select.Option value={\"2.1.0\"}>2.1.0</Select.Option>\n                                </Select>\n                            </Form.Item>\n                            <Form.Item name={\"JarEngineVersion\"} label={<FormattedMessage id=\"jar_engine_version\"/>} initialValue={\"2.1.0-SNAPSHOT\"}>\n                                <Select>\n                                    <Select.Option value={\"2.1.0-SNAPSHOT\"}>2.1.0-SNAPSHOT</Select.Option>\n                                </Select>\n                            </Form.Item>\n\n                        </>\n                    })\n                }\n          </div>\n      </SetupEngineFromCloudContext.Provider>\n    )\n}\n\nexport { SetupEngineFromCloud, SetupEngineFromCloudContext}","import React, {useEffect, useState} from 'react'\nimport {Form, Input, Result, Select} from 'antd'\nimport {FormattedMessage} from 'react-intl'\nimport {useUserConfig} from \"../../analysis/common/pages/useUserConfig\";\nimport UIMaker from \"../../UIMaker\";\nimport {EngineSelectComp} from \"./EngineSelectComp\";\nimport {ActionProxy} from \"../../../backend_service/ActionProxy\";\nimport RemoteAction from \"../../../backend_service/RemoteAction\";\n\ninterface Props {\n}\n\nconst DeleteCloudEngine = (props: Props) => {\n\n    const [engine, setEngine] = useState(\"\")\n    const [engines, setEngines] = useState<string[]>([])\n    const [errorDetail,setErrorDetail] = useState<string>(\"\")\n\n\n    useEffect(() => {\n        const fetch = async () => {\n            const proxy = new ActionProxy()\n            const res = await proxy.get(RemoteAction.CLOUD_ENGINE_LIST, {})\n            if (res.status === 200) {\n                const temp = res.content as {data: Array<string>}\n                setEngines(temp.data)\n            }\n        }\n        fetch()\n    }, [])\n\n\n    const {ui, setError, setSuccess, getParams, setLoading} = useUserConfig()\n    const submit = async () => {\n        setError(\"\")\n        setErrorDetail(\"\")\n        setLoading(true)\n        if(!engine){\n            setError(\"a_5\")\n            return\n        }\n        const proxy = new ActionProxy()\n        const res = await proxy.post(RemoteAction.CLOUD_DELETE_ENGINE, {owner:engine})\n        if (res.status === 200) {\n            setSuccess(\"delete_success\")\n        } else {\n            setError(\"delete_fail\")\n            setErrorDetail(res.content)\n        }\n        setLoading(false)\n    }\n\n    const engineNames = ()=>{\n        return engines.map((item)=>{\n            return <Select.Option value={item} key={item}>{item}</Select.Option>\n        })\n    }\n\n    const selectChange = async (value:string)=>{\n        setEngine(value)\n    }\n\n    return ui({\n        title: <FormattedMessage id=\"delete_cloud_engine\"/>,\n        submit,\n        formItems: <>\n            {errorDetail && <Result\n                status=\"warning\"\n                extra={errorDetail}\n            />}\n            <Form.Item name={\"name\"} label={<FormattedMessage id={\"a_6\"}/>}>\n                <Select onChange={selectChange}>\n                    {engineNames()}\n                </Select>\n            </Form.Item>\n        </>\n    })\n\n}\n\nexport {DeleteCloudEngine}","import React, {useEffect, useState} from 'react'\nimport {Button, Card, Divider, Form, List, Select} from 'antd'\nimport {FormattedMessage} from 'react-intl'\nimport AlertBox from \"../../AlertBox\";\nimport {ActionProxy} from \"../../../backend_service/ActionProxy\";\nimport RemoteAction from \"../../../backend_service/RemoteAction\";\n\ninterface Props {\n}\ninterface EngineCreateStatusResp {\n    status:number,\n    message: Array<string>,\n}\n\nconst EngineLog = (props: Props) => {\n\n    const [form] = Form.useForm()\n    const [data,setData] = useState<Array<string>>([])\n    const [logMsg,setLogMsg] = useState<Array<string>>([])\n    const formItemLayout = {\n        labelCol: {span: 6},\n        wrapperCol: {span: 14},\n    };\n\n    useEffect(() => {\n        const fetch = async () => {\n            const proxy = new ActionProxy()\n            const res = await proxy.get(RemoteAction.CLOUD_ENGINE_LIST, {})\n            if (res.status === 200) {\n              const temp = res.content as {data: Array<string>}\n              setData(temp.data)\n            }\n        }\n        fetch()\n    }, [])\n\n    const engines = ()=>{\n        return data.map((item)=>{\n            return <Select.Option value={item} key={item}>{item}</Select.Option>\n        })\n    }\n\n    const selectChange = async (value:string)=>{\n        const proxy = new ActionProxy()\n        const res = await proxy.get(RemoteAction.CLOUD_ENGINE_STATUS, {owner: value})\n        if (res.status === 200) {\n            const temp = res.content as EngineCreateStatusResp\n            setLogMsg(temp.message)\n        }\n    }\n\n    const ui = () => {\n        return (\n            <>\n                <div className=\"common-margin common-child-center\" {...formItemLayout}>\n                    <Card title={<FormattedMessage id={\"cloud_engine_log\"}/>} style={{width: \"70%\"}}>\n                        <Form form={form}>\n                            <Form.Item name={\"name\"} label={<FormattedMessage id={\"a_3\"}/>}>\n                                <Select onChange={selectChange}>\n                                    {engines()}\n                                </Select>\n                            </Form.Item>\n                            <Divider orientation=\"left\"><FormattedMessage id={\"a_6\"}/></Divider>\n                            <List\n                                bordered\n                                dataSource={logMsg}\n                                renderItem={item => (\n                                    <List.Item>\n                                        {item}\n                                    </List.Item>\n                                )}\n                            />\n                        </Form>\n                    </Card>\n                </div>\n            </>\n        )\n    }\n\n    return ui()\n\n}\n\nexport {EngineLog}","import React,{useEffect,useState} from 'react'\nimport {Button, Card, Divider, Form, Input, List, Result, Select, Switch} from 'antd'\nimport { FormattedMessage } from 'react-intl'\nimport {ActionProxy} from \"../../../backend_service/ActionProxy\";\nimport RemoteAction from \"../../../backend_service/RemoteAction\";\nimport AlertBox from \"../../AlertBox\";\ninterface Props {   \n}\n\nconst RegisterEngine = (props:Props) => {\n    \n    const [form] = Form.useForm()\n    const [error,setError] = useState(\"\")\n    const [success,setSuccess] = useState(\"\")\n    const [loading,setLoading] = useState(false)\n    useEffect(()=>{\n        // const fetch = async()=>{          \n        // }\n        // fetch()\n       },[])\n\n    const submit = async ()=>{\n        setError(\"\")\n        setSuccess(\"\")\n        const proxy = new ActionProxy()\n        const params = form.getFieldsValue()\n        const res = await proxy.post(RemoteAction.ENGINE_REGISTER,params)\n        if(res.status === 200){\n            setSuccess(\"success\")\n        }else {\n            setError(res.content)\n        }\n\n    }\n\n    const ui = () => {\n        const formItemLayout = {\n            labelCol: {span: 6},\n            wrapperCol: {span: 14},\n        };\n        return (\n            <>\n                <div className=\"common-margin common-child-center\" {...formItemLayout}>\n                    <Card title={<FormattedMessage id={\"a_8\"}/>} style={{width: \"70%\"}}>\n                        <Form form={form}>\n                            {error && <AlertBox message={<FormattedMessage id={error} />} />}\n                            {success && <AlertBox title={<FormattedMessage id=\"congratulation\"/>} type=\"success\" message={<FormattedMessage id={success} />} />}\n                            <Form.Item name={\"name\"} label={<FormattedMessage id=\"name\"/>}>\n                                <Input/>\n                            </Form.Item>\n                            <Form.Item name={\"url\"} label={<FormattedMessage id=\"url\"/>} >\n                                <Input/>\n                            </Form.Item>\n                            <Form.Item name={\"home\"} label={<FormattedMessage id=\"home\"/>}>\n                                <Input/>\n                            </Form.Item>\n                            <Form.Item name={\"consoleUrl\"} label={<FormattedMessage id=\"consoleUrl\"/>} initialValue={\"http://analysis.mlsql.tech\"}>\n                                <Input/>\n                            </Form.Item>\n                            <Form.Item name={\"fileServerUrl\"} label={<FormattedMessage id=\"fileServerUrl\"/>} initialValue={\"http://analysis.mlsql.tech\"}>\n                                <Input/>\n                            </Form.Item>\n                            <Form.Item name={\"authServerUrl\"} label={<FormattedMessage id=\"authServerUrl\"/>} initialValue={\"http://analysis.mlsql.tech\"}>\n                                <Input/>\n                            </Form.Item>\n                            <Form.Item valuePropName=\"checked\"  initialValue={true} name={\"skipAuth\"} label={<FormattedMessage id=\"skipAuth\"/>} >\n                                <Switch  />\n                            </Form.Item>\n                            <Form.Item name={\"extraOpts\"} label={<FormattedMessage id=\"extraOpts\"/>} initialValue={\"{}\"}>\n                                <Input/>\n                            </Form.Item>\n                            <Form.Item name={\"accessToken\"} label={<FormattedMessage id=\"accessToken\"/>}>\n                                <Input/>\n                            </Form.Item>\n                            <Form.Item>\n                                <Button type=\"primary\" loading={loading} onClick={\n                                    submit\n                                }><FormattedMessage id=\"apply\" /></Button>\n                            </Form.Item>\n                        </Form>\n                    </Card>\n                </div>\n            </>\n        )\n    }\n\n    return ui()\n    \n}\n\nexport { RegisterEngine }","import React, { useState, useCallback, useEffect } from 'react';\nimport { Menu } from 'antd';\nimport '../AdminSetting.scss'\nimport { MailOutlined, SettingOutlined } from '@ant-design/icons';\nimport { DefaultBackend } from './DefaultBackend';\nimport { FormattedMessage } from 'react-intl';\nimport { ApplyTimeout } from './ApplyTimeout';\nimport ChangePassword from './ChangePassword';\nimport { Teams } from './Teams';\nimport { MySQL } from '../../../analysis/datasource/pages/MySQL';\nimport { ListMySQL } from '../../../analysis/datasource/pages/ListMySQL';\nimport {SetupEngineFromCloud} from \"../../pages/SetupEngineFromCloud\";\nimport {DeleteCloudEngine} from \"../../pages/DeleteCloudEngine\";\nimport {EngineLog} from \"../../pages/EngineLog\";\nimport {RegisterEngine} from \"../../pages/RegisterEngine\";\n\nconst { SubMenu } = Menu;\nfunction Settings() {\n    const [currentPage, setCurrentPage] = useState(\"default-backend\")\n    return (\n        <div className=\"app-admin\">\n            <div className=\"app-admin-side\">\n                <Menu\n                    style={{ width: 256 }}\n                    defaultSelectedKeys={['default-backend']}\n                    defaultOpenKeys={['analysis-workshop']}\n                    mode=\"inline\"\n                >\n                    <SubMenu\n                        key=\"analysis-workshop\"\n                        title={\n                            <span>\n                                <MailOutlined />\n                                <span><FormattedMessage id=\"analysis_workshop\" /></span>\n                            </span>\n                        }\n                    >\n                        <Menu.Item key=\"default-backend\" onClick={() => {\n                            setCurrentPage(\"default-backend\")\n                        }}><FormattedMessage id=\"set_engine\" /></Menu.Item>\n                        <Menu.Item key=\"set-timeout\" onClick={() => {\n                            setCurrentPage(\"set-timeout\")\n                        }}><FormattedMessage id=\"set_timeout\" /></Menu.Item>\n                    </SubMenu>\n                    <SubMenu key=\"user\" title={\n                        <span>\n                            <MailOutlined />\n                            <span><FormattedMessage id=\"user_settings\" /></span>\n                        </span>\n                    }>\n                        <Menu.Item key=\"change-admin-password\"\n\n\n                            onClick={() => {\n                                setCurrentPage(\"change-admin-password\")\n                            }}><FormattedMessage id=\"change_password\" /></Menu.Item>\n                    </SubMenu>\n\n                    <SubMenu key=\"team\" title={\n                        <span>\n                            <MailOutlined />\n                            <span><FormattedMessage id=\"team\" /></span>\n                        </span>\n                    }>\n                        <Menu.Item key=\"team_manager\"\n                            onClick={() => {\n                                setCurrentPage(\"team_manager\")\n                            }}><FormattedMessage id=\"team_manager\" /></Menu.Item>\n                    </SubMenu>\n                    <SubMenu key=\"datasource\" title={\n                        <span>\n                            <MailOutlined />\n                            <span><FormattedMessage id=\"datasource\" /></span>\n                        </span>\n                    }>\n                        <Menu.Item key=\"mysql\"\n                            onClick={() => {\n                                setCurrentPage(\"mysql\")\n                            }}><FormattedMessage id=\"connect_mysql\" /></Menu.Item>\n                        <Menu.Item key=\"list_mysql\"\n                            onClick={() => {\n                                setCurrentPage(\"list_mysql\")\n                            }}><FormattedMessage id=\"list_mysql\" /></Menu.Item>\n                    </SubMenu>\n\n                    <SubMenu key=\"aliyun_cloud_engine\" title={\n                        <span>\n                            <MailOutlined />\n                            <span><FormattedMessage id=\"aliyun_cloud_engine\" /></span>\n                        </span>\n                    }>\n                        <Menu.Item key=\"create_cloud_engine\"\n                                   onClick={() => {\n                                       setCurrentPage(\"create_cloud_engine\")\n                                   }}><FormattedMessage id=\"create_cloud_engine\" /></Menu.Item>\n                        <Menu.Item key=\"delete_cloud_engine\"\n                                   onClick={() => {\n                                       setCurrentPage(\"delete_cloud_engine\")\n                                   }}><FormattedMessage id=\"delete_cloud_engine\" /></Menu.Item>\n                        <Menu.Item key=\"cloud_engine_log\"\n                                   onClick={() => {\n                                       setCurrentPage(\"cloud_engine_log\")\n                                   }}><FormattedMessage id=\"cloud_engine_log\" /></Menu.Item>\n                    </SubMenu>\n\n                    <SubMenu key=\"a_7\" title={\n                        <span>\n                            <MailOutlined />\n                            <span><FormattedMessage id=\"a_7\" /></span>\n                        </span>\n                    }>\n                        <Menu.Item key=\"a_8\"\n                                   onClick={() => {\n                                       setCurrentPage(\"a_8\")\n                                   }}><FormattedMessage id=\"a_8\" /></Menu.Item>\n                    </SubMenu>\n\n                </Menu>\n            </div>\n            <div className=\"app-admin-main\">\n                {currentPage === \"default-backend\" && <DefaultBackend />}\n                {currentPage === \"set-timeout\" && <ApplyTimeout />}\n                {currentPage === \"change-admin-password\" && <ChangePassword></ChangePassword>}\n                {currentPage === \"team_manager\" && <Teams></Teams>}\n                {currentPage === \"mysql\" && <MySQL />}\n                {currentPage === \"list_mysql\" && <ListMySQL />}\n                {currentPage === \"create_cloud_engine\" && <SetupEngineFromCloud />}\n                {currentPage === \"delete_cloud_engine\" && <DeleteCloudEngine />}\n                {currentPage === \"cloud_engine_log\" && <EngineLog />}\n                {currentPage === \"a_8\" && <RegisterEngine />}\n            </div>\n        </div>\n    )\n}\nexport { Settings }","import React,{useEffect,useState} from 'react'\ninterface Props {   \n}\n\nconst Doc = (props:Props) => {\n\n    return (\n        <>\n            <iframe\n                sandbox=\"allow-scripts\"\n                style={{width: '100%', height: \"600px\"}}\n                src={\"http://docs.mlsql.tech/mlsql-console/\"}\n                frameBorder=\"0\"\n                scrolling=\"yes\"\n            />\n        </>\n    )\n    \n}\n\nexport { Doc }","import React,{useEffect,useState} from 'react'\nimport UIMaker from \"../../UIMaker\";\nimport {ActionProxy} from \"../../../backend_service/ActionProxy\";\nimport RemoteAction from \"../../../backend_service/RemoteAction\";\ninterface Props {\n    url:string\n}\n\nconst EngineUI = (props:Props) => {\n    const [data, setData] = useState(\"\")\n    useEffect(() => {\n        const fetch = async () => {\n            const backend = UIMaker.extraOption()[\"backend\"]\n            const proxy = new ActionProxy()\n            const res = await proxy.get(RemoteAction.ENGINE_LIST, {})\n            if(backend){\n                const backends = res.content.data as Array<{url:string,name:string}>\n                const url = backends.filter((item)=>{\n                    return item.name === backend\n                })[0].url\n                setData(url.split(\":\")[0]+\":\"+url.split(\":\")[1]+\":4040\")\n            }\n        }\n        fetch()\n    }, [])\n    return (\n        <>\n            {\n                data &&  <iframe\n                    sandbox=\"allow-same-origin allow-scripts allow-popups allow-forms\"\n                    style={{width: '100%', height: \"600px\"}}\n                    src={data}\n                    frameBorder=\"0\"\n                    scrolling=\"yes\"\n                />\n            }\n        </>\n    )\n    \n}\n\nexport { EngineUI }","import React, {useState, useCallback, useEffect} from 'react';\nimport {Button, Card, Form, Popconfirm, Table} from \"antd\";\nimport {ActionProxy} from \"../../../backend_service/ActionProxy\";\nimport RemoteAction from \"../../../backend_service/RemoteAction\";\nimport moment from \"moment\";\nimport {FormattedMessage} from \"react-intl\";\n\ninterface MlsqlIndexer {\n    id: number;\n    name: string;\n    status: number;\n    lastStatus: number;\n    lastFailMsg: string;\n    lastExecuteTime: number;\n    interval: number;\n    content: string;\n    indexerConfig: string;\n}\n\nexport function IndexList() {\n    const [result, setResult] = useState<Array<MlsqlIndexer>>([])\n    const loadIndexers = async () => {\n        const proxy = new ActionProxy()\n        const res = await proxy.post(RemoteAction.INDEXER_LIST, {})\n        if (res.status === 200) {\n            const value = res.content as Array<MlsqlIndexer>\n            setResult(value)\n        }\n    }\n    const removeIndexer = async (name: string) => {\n        const proxy = new ActionProxy()\n        await proxy.post(RemoteAction.INDEXER_REMOVE, {\n            name\n        })\n        loadIndexers()\n    }\n    useEffect(() => {\n        loadIndexers()\n    }, [])\n\n    return <div className=\"common-margin common-child-center\">\n        <Table dataSource={result}>\n            <Table.Column title=\"索引名称\" dataIndex=\"name\" key=\"name\"/>\n            <Table.Column title=\"索引模式\"  dataIndex=\"syncInterval\" key=\"syncInterval\" render={(value, record, index) => {\n                if (value === -1) {\n                    return <>流式</>\n                }\n                if (value > 0) {\n                    return <>批式</>\n                }\n                if (value === 0) {\n                    return <>一次性</>\n                }\n                return <></>\n            }}/>\n            <Table.Column title=\"上一次索引时间\" dataIndex=\"lastExecuteTime\" key=\"lastExecuteTime\"\n                          render={(value, record, index) => {\n\n                              let deltaSec = (new Date().getTime() - value) / 1000\n                              let deltaStr = \"(\" + deltaSec + \"秒)\"\n                              if (deltaSec > 60) {\n                                  deltaStr = \"(\" + Math.round(deltaSec / 60) + \"分前)\"\n                              }\n                              if (deltaSec > 3600) {\n                                  deltaStr = \"(\" + Math.round(deltaSec / 3600) + \"时前)\"\n                              }\n                              if (deltaSec > 3600 * 24) {\n                                  deltaStr = \"(\" + Math.round(deltaSec / (3600 * 24)) + \"天前)\"\n                              }\n                              const date = new Date(value);\n\n                              return <>{moment(date).format(\"YYYY-MM-DD hh:mm:ss\") + deltaStr}</>\n                          }}/>\n\n            <Table.Column title=\"上一次索引状态\" dataIndex=\"lastStatus\" key=\"lastStatus\" render={(value, record, index) => {\n                if (value === 0) {\n                    return <>索引完成</>\n                }\n                if (value === 1) {\n                    return <>索引失败</>\n                }\n                return <></>\n            }}/>\n\n            <Table.Column title=\"上一次索引信息\" width=\"200\"\n                          ellipsis={{showTitle: true}} dataIndex=\"lastFailMsg\" key=\"lastFailMsg\"\n                          render={(value, record, index) => {\n                              return <>{value}</>\n                          }}/>\n\n            <Table.Column title=\"操作\" dataIndex=\"operate\" key=\"operate\"\n                          render={(value, record, index) => {\n                              return <>\n                                  <Popconfirm\n                                      title=\"确认要删除该索引么？\"\n                                      okText=\"Yes\"\n                                      cancelText=\"No\"\n                                      onConfirm={() => {\n                                          removeIndexer((record as { name: string }).name)\n                                      }}\n                                  >\n                                      <Button>删除</Button>\n                                  </Popconfirm>\n                              </>\n                          }}/>\n\n\n        </Table>\n    </div>\n}\n\n\n\n\n","import React, {useState, useCallback, useEffect} from 'react';\nimport {Button, Card, Form, Input, Modal, Select, Spin, Switch, Tooltip, Tree} from \"antd\";\nimport {FormattedMessage} from \"react-intl\";\nimport AlertBox from \"../../AlertBox\";\nimport {ActionProxy} from \"../../../backend_service/ActionProxy\";\nimport RemoteAction from \"../../../backend_service/RemoteAction\";\nimport {TableOutlined} from \"@ant-design/icons\";\nimport {MysqlTreeActionNames} from \"../../analysis/datasource/actions/MysqlTreeReducer\";\nimport {useMySQLPartition} from \"../../analysis/datasource/pages/useMySQLPartition\";\n\nconst {DirectoryTree} = Tree\n\ninterface TreeItem {\n    name: string;\n    title: string;\n    isLeaf: boolean;\n    tables: Array<TreeItem>;\n\n    children: Array<object>;\n    key: string;\n    id: string;\n}\n\ninterface TablePartition {\n    partitionColumn: string;\n    lowerBound: number;\n    upperBound: number;\n    partitionNumValue: number;\n    dbName: string;\n    tableName: string;\n}\n\ninterface Engine {\n    name: string;\n}\n\nexport function CreateIndexer() {\n    const formItemLayout = {\n        labelCol: {span: 6},\n        wrapperCol: {span: 14},\n    };\n    const [form] = Form.useForm()\n    const [error, setError] = useState(\"\")\n    const [success, setSuccess] = useState(\"\")\n    const [loading, setLoading] = useState(false)\n    const [confirm, setConfirm] = useState(false)\n    const [dbs, setDbs] = useState<Array<any>>([])\n    const [table, setTable] = useState<{ dbName: string, tableName: string } | null>(null)\n    const [tp, setTp] = useState<TablePartition | null>(null)\n    const [engines, setEngines] = useState<Array<Engine>>([])\n    const {ui: PartitionUI, form: partitionForm, setOpenTable, setError: setPartitionError, partitionNumValue} = useMySQLPartition()\n    const [enableSyncInterval, setEnableSyncInterval] = useState<boolean>(false)\n\n    const fetch = async () => {\n        const proxy = new ActionProxy()\n        const res = await proxy.get(RemoteAction.DS_MYSQL_DBS, {})\n        const treeData = res.content.data.map((item: TreeItem) => {\n            item.key = item.name\n            item.title = item.name\n            item.isLeaf = false\n            item.children = item.tables.map(table => {\n                return {\n                    id: `${item.name}.${table.name}`,\n                    key: `${item.name}.${table.name}`,\n                    title: table.name,\n                    isLeaf: true,\n                    icon: <TableOutlined/>\n                }\n            })\n            return item\n        })\n        const engineResp = await proxy.get(RemoteAction.ENGINE_LIST, {})\n        if (engineResp.status == 200) {\n            const items = engineResp.content.data as Array<Engine>\n            setEngines(items)\n        }\n        setDbs(treeData)\n    }\n    useEffect(() => {\n        fetch()\n    }, [])\n\n    const submit = async () => {\n        setSuccess(\"\")\n        setError(\"\")\n        const proxy = new ActionProxy()\n        const params = form.getFieldsValue()\n        if (params[\"syncInterval\"] === \"mysql\" && !params[\"idCols\"]) {\n            setError(\"idCols is required\")\n            return\n        }\n        const newparams = Object.assign(params, tp)\n        const res = await proxy.post(RemoteAction.MYSQL_INDEXER_CREATE, newparams)\n        if (res.status === 200) {\n            setSuccess(\"success\")\n        } else {\n            setError(res.content)\n        }\n    }\n\n\n    return <>\n        <div className=\"common-margin common-child-center\" {...formItemLayout}>\n            <Card title={<FormattedMessage id={\"create_indexer\"}/>} style={{width: \"70%\"}}>\n                <Form form={form}>\n                    <Modal\n                        title={<FormattedMessage id=\"mysql_parallel\"/>}\n                        visible={confirm}\n                        onCancel={() => {\n                            partitionForm.resetFields()\n                            setConfirm(false)\n                        }}\n                        onOk={() => {\n                            const partitionValues = partitionForm.getFieldsValue()\n                            const {partitionColumn, lowerBound, upperBound} = partitionValues\n                            if (partitionColumn) {\n                                if (!lowerBound || !upperBound && partitionNumValue) {\n                                    setPartitionError(\"lowerBound/upperBound/partitionNumValue should not be empty.\")\n                                    return\n                                }\n                            }\n\n                            setTp({\n                                partitionColumn,\n                                lowerBound,\n                                upperBound,\n                                partitionNumValue,\n                                dbName: table?.dbName || \"\",\n                                tableName: table?.tableName || \"\"\n                            })\n\n                            partitionForm.resetFields()\n                            setConfirm(false)\n                        }}\n                        cancelText=\"Cancel\"\n                        okText=\"Ok\">\n                        <PartitionUI/>\n                    </Modal>\n                    {error && <AlertBox message={<FormattedMessage id={error}/>}/>}\n                    {success && <AlertBox title={<FormattedMessage id=\"congratulation\"/>} type=\"success\"\n                                          message={<FormattedMessage id={success}/>}/>}\n                    <Form.Item name={\"_name\"}>\n                        <Spin tip=\"Loading...\" spinning={loading}>\n                            <DirectoryTree height={700}\n                                           treeData={dbs}\n                                           expandAction=\"click\"\n                                           onDoubleClick={(evt, node) => {\n                                               if (!node.isLeaf) {\n                                                   return\n                                               }\n                                               const [dbName, tableName] = (node.key as string).split(\".\")\n                                               setTable({dbName, tableName})\n                                               setOpenTable(node.key as string)\n                                               setConfirm(true)\n                                           }} onRightClick={({event, node}) => {\n                            }}>\n                            </DirectoryTree>\n                        </Spin>\n                    </Form.Item>\n                    <Form.Item name={\"name\"} label={<FormattedMessage id=\"数据库表\"/>}>\n                        <span>{table ? table.dbName + \".\" + table.tableName : \"未选择\"}</span>\n                    </Form.Item>\n\n                    <Form.Item name={\"indexerType\"} label={<FormattedMessage id=\"索引类型\"/>}>\n                        <Select onChange={(value, option) => {\n                            if (value === \"parquet\") {\n                                setEnableSyncInterval(true)\n                            }\n                            if (value === \"mysql\") {\n                                setEnableSyncInterval(false)\n                            }\n                        }}>\n                            <Select.Option value={\"mysql\"}>实时</Select.Option>\n                            <Select.Option value={\"parquet\"}>定时</Select.Option>\n                        </Select>\n                    </Form.Item>\n\n                    {\n                        enableSyncInterval ?\n                            <Form.Item name={\"syncInterval\"} label={<FormattedMessage id=\"同步周期(d/h/m)\"/>}>\n                                <Input/>\n                            </Form.Item> : <></>\n                    }\n\n                    {\n                        !enableSyncInterval ?\n                            <Form.Item name={\"idCols\"} label={<FormattedMessage id=\"标识唯一组合键\"/>}>\n                                <Input/>\n                            </Form.Item> : <></>\n                    }\n\n                    <Form.Item name={\"engineName\"} label={<FormattedMessage id=\"选择构建索引的引擎\"/>}>\n                        <Select>\n                            {\n\n                                engines.map(item => {\n                                    return <Select.Option value={item.name}>{item.name}</Select.Option>\n                                })\n                            }\n                        </Select>\n                    </Form.Item>\n\n                    {/*<Form.Item name={\"desc\"}>*/}\n                    {/*    <pre>*/}\n                    {/*             第一次创建索引系统会分成两个阶段完成：*/}\n                    {/*             1. 拉取全量数据，构建索引，期间有可能导致MySQL负载较重。建议从库，也可以重新选择然后重新调整并行度。*/}\n                    {/*             2. 全量索引完成后，会自动通过binlog拉取，不会对MySQL造成影响。*/}\n                    {/*    </pre>*/}\n                    {/*</Form.Item>*/}\n\n                    <Form.Item>\n                        <Button type=\"primary\" loading={loading} onClick={\n                            submit\n                        }><FormattedMessage id=\"apply\"/></Button>\n                    </Form.Item>\n                </Form>\n            </Card>\n        </div>\n    </>\n}\n\n\n\n\n","import React, {useState, useCallback, useEffect} from 'react';\nimport {Menu} from 'antd';\nimport {MailOutlined, SettingOutlined} from '@ant-design/icons';\nimport {FormattedMessage} from \"react-intl\";\nimport {IndexList} from \"./indexmanager/IndexerList\";\nimport {CreateIndexer} from \"./indexmanager/CreateIndexer\";\nimport {OtherIndexList} from \"./other_indexmanager/OtherIndexerList\";\nimport {OtherCreateIndexer} from \"./other_indexmanager/OtherCreateIndexer\";\n\n\nconst {SubMenu} = Menu;\n\nfunction IndexManager() {\n    const [currentPage, setCurrentPage] = useState(\"indexer_list\")\n    return (\n        <div className=\"app-admin\">\n            <div className=\"app-admin-side\">\n                <Menu\n                    style={{width: 256}}\n                    defaultSelectedKeys={['indexer_list']}\n                    defaultOpenKeys={['mysql_indexer_manager']}\n                    mode=\"inline\"\n                >\n                    <SubMenu\n                        key=\"mysql_indexer_manager\"\n                        title={<span><MailOutlined/><span><FormattedMessage id=\"mysql_indexer_manager\"/></span>\n        </span>\n                        }\n                    >\n                        <Menu.Item key=\"indexer_list\" onClick={() => {\n                            setCurrentPage(\"indexer_list\")\n                        }}><FormattedMessage id=\"indexer_list\"/></Menu.Item>\n\n                        <Menu.Item key=\"create_indexer\" onClick={() => {\n                            setCurrentPage(\"create_indexer\")\n                        }}><FormattedMessage id=\"create_indexer\"/></Menu.Item>\n\n                    </SubMenu>\n                    <SubMenu\n                        key=\"other_indexer_manager\"\n                        title={<span><MailOutlined/><span><FormattedMessage id=\"other_indexer_manager\"/></span>\n        </span>\n                        }\n                    >\n                        {/*<Menu.Item key=\"indexer_list2\" onClick={() => {*/}\n                        {/*    setCurrentPage(\"indexer_list2\")*/}\n                        {/*}}><FormattedMessage id=\"indexer_list2\"/></Menu.Item>*/}\n\n                        {/*<Menu.Item key=\"create_indexer2\" onClick={() => {*/}\n                        {/*    setCurrentPage(\"create_indexer2\")*/}\n                        {/*}}><FormattedMessage id=\"create_indexer2\"/></Menu.Item>*/}\n\n                    </SubMenu>\n                </Menu>\n            </div>\n            <div className=\"app-admin-main\">\n                {currentPage === \"indexer_list\" && <IndexList/>}\n                {currentPage === \"create_indexer\" && <CreateIndexer/>}\n                {/*{currentPage === \"indexer_list2\" && <OtherIndexList/>}*/}\n                {/*{currentPage === \"create_indexer2\" && <OtherCreateIndexer/>}*/}\n            </div>\n        </div>\n    )\n}\n\nexport {IndexManager}","import * as React from \"react\";\nimport {Card} from \"antd\";\nimport AceEditor from \"react-ace\";\n\n\nexport default class ResultView extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.nav = props.nav\n        this.state = {content: \"\"}\n\n    }\n\n    componentDidMount() {\n        this.setState({\n            content: Object.entries(this.nav.collected_params).filter((item) => {\n                return item[1]\n            }).map((item) => {\n                return `set ${item[0]}='''${item[1]}''';`\n            }).join(\"\\n\") + `\\ninclude plugin.\\`${this.nav.current_plugin_name}\\`;`\n        })\n    }\n\n\n    render() {\n\n        return (\n\n\n            <div className=\"steps-content\"\n                 style={{\"margin-top\": \"30px\"}}>\n                <pre>\n                    {this.state.content}\n                </pre>\n            </div>\n        );\n    }\n}\n","import * as React from \"react\";\nimport {Button, message, Steps, Form, Input, Card} from \"antd\";\nimport ResultView from \"./ResultView\";\n\nconst Step = Steps.Step;\nconst formItemLayout = {\n    labelCol: {span: 4},\n    wrapperCol: {span: 8},\n};\nconst formTailLayout = {\n    labelCol: {span: 4},\n    wrapperCol: {span: 8, offset: 4},\n};\n\nclass ScriptPluginView extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            current: 0,\n            steps: props.steps.concat([{desc: \"MLSQL Script\", \"final\": true}])\n        }\n        this.nav = props.parent\n        this.formRef = React.createRef()\n    }\n\n    next() {\n        this.formRef.current.validateFields().then(values => {\n            console.log('Received values of form: ', values);\n            const current = this.state.current + 1;\n            this.setState({current});\n            this.nav.pushParam(values)\n        });\n    }\n\n    prev() {\n        const current = this.state.current - 1;\n        this.setState({current});\n    }\n\n    buildForm = (item) => {\n        if (item.hasOwnProperty(\"final\")) {\n            return <ResultView nav={this.nav}/>\n        }\n        const formItems = item[\"params\"]\n        // const form = this.formRef.current\n        return formItems.map((formItem) => {\n            return <Form.Item {...formItemLayout} name={formItem['name']} label={formItem['name']} rules={[{required: true}]}>\n                <Input type=\"input\" placeholder={formItem['desc']}/>\n            </Form.Item>\n        })\n    }\n\n\n    render() {\n        const {current} = this.state;\n        return (\n            <div>\n\n                <Steps current={current}>\n                    {this.state.steps.map(item => <Step key={item.desc} title={item.desc}/>)}\n                </Steps>\n                <div className=\"steps-content\"\n                     style={{\"margin-top\": \"30px\"}}>\n                    <Card bordered={true}>\n                        <Form ref={this.formRef} {...formTailLayout} style={{width: \"600px\"}}>\n                            {this.buildForm(this.state.steps[current])}\n                        </Form>\n                    </Card>\n\n\n                </div>\n                <div className=\"steps-action\" style={{marginTop: \"30px\"}}>\n                    {\n                        current < this.state.steps.length - 1\n                        && <Button type=\"primary\" onClick={() => this.next()}>Next Step</Button>\n                    }\n                    {\n                        current === this.state.steps.length - 1\n                        && <Button type=\"primary\" onClick={() => message.success('Processing complete!')}>Done</Button>\n                    }\n                    {\n                        current > 0\n                        && (\n                            <Button style={{marginLeft: 8}} onClick={() => this.prev()}>\n                                Previous Step\n                            </Button>\n                        )\n                    }\n                </div>\n\n\n            </div>\n        );\n    }\n}\n\nexport const ScriptPluginViewForm = ScriptPluginView;","import * as React from \"react\";\nimport {\n    Layout, Menu, Button\n} from 'antd';\nimport {MLSQLAPI} from \"../../service/MLSQLAPI\";\nimport {RUN_SCRIPT} from \"../../service/BackendConfig\";\nimport {ScriptPluginViewForm} from \"./ScriptPluginView\";\n\n\nconst {\n    Header, Content, Footer, Sider,\n} = Layout;\n\n\nexport default class MainPage extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {data_menu: [], data_plugin: []}\n        this.collected_params = {}\n\n    }\n\n    componentDidMount() {\n        const api = new MLSQLAPI(RUN_SCRIPT)\n        api.newRunScript({}, `!plugin list \"script\";`, json => {\n            this.setState({data_menu: json}, () => {\n                if (json.length > 0) {\n                    this.showTut(json[0]['pluginName'])\n                }\n            })\n        }, fail => {\n        })\n\n\n    }\n\n    pushParam = (item) => {\n        Object.assign(this.collected_params, item)\n    }\n\n    showTut = (pluginName) => {\n        this.current_plugin_name = pluginName\n        const api = new MLSQLAPI(RUN_SCRIPT)\n        api.newRunScript({}, `!plugin script show ${pluginName}/plugin.json;`, json => {\n\n            this.setState({\n                data_plugin: json.map((item) => {\n                    return JSON.parse(item['value'])[this.current_plugin_name]['compositor']\n                })\n            })\n        }, fail => {\n        })\n    }\n\n    render() {\n        return (\n            <Layout style={{minHeight: '100vh'}}>\n                <Sider>\n                    <div className=\"logo\"/>\n                    <Menu theme=\"dark\" defaultSelectedKeys={[\"0\"]} mode=\"inline\">\n                        {this.state.data_menu.map((item) => {\n                                return (<Menu.Item key=\"0\" onClick={() => {\n                                    this.showTut(item['pluginName'])\n                                }}>\n                                    {item['pluginName']}\n                                </Menu.Item>)\n                            }\n                        )}\n\n                    </Menu>\n                </Sider>\n                <Layout>\n                    <Header style={{background: '#fff', padding: 0}}/>\n                    <Content style={{margin: '0 16px'}}>\n                        <div style={{padding: 24, background: '#fff', minHeight: 360}}>\n                            {this.state.data_plugin.map((item) => {\n                                return <ScriptPluginViewForm parent={this}\n                                                             steps={item}/>\n                            })}\n                        </div>\n                    </Content>\n                    <Footer style={{textAlign: 'center'}}>\n\n                    </Footer>\n                </Layout>\n            </Layout>\n        );\n    }\n}","import * as React from \"react\";\nimport MainPage from \"./MainPage\";\n\nexport class MLSQLScriptPluginsApp extends React.Component {\n    constructor(props) {\n        super(props)\n    }\n\n    render() {\n\n        return (\n            <div style={{width:\"100%\"}}>\n                <MainPage/>\n            </div>\n        )\n    }\n}","import React, { useState, useCallback, useEffect } from 'react';\nimport { Alert } from 'antd'\nimport { useReducerAsync } from 'use-reducer-async'\nimport { AppConsoleReducer, AppConsoleHandlers, AppConsoleActionNames } from './actions/AppConsoleReducer';\nimport './AppConsole.scss'\nimport { ConsoleHeader } from './pages/ConsoleHeader';\nimport { Register } from './login_register/Register';\nimport { Login } from './login_register/Login';\nimport ActionMaker from '../ActionMaker';\nimport MLSQLQueryApp from '../../components/MLSQLQueryApp';\nimport AnalysisWorkshop from '../analysis/workshop';\nimport { AdminSetting } from './admin/AdminSetting';\nimport UIMaker from '../UIMaker';\nimport { Settings } from './admin/pages/Settings';\nimport {Doc} from \"./pages/Doc\";\nimport {EngineUI} from \"./pages/EgnineUI\";\nimport {IndexManager} from \"../app/IndexManager\";\nimport {MLSQLScriptPluginsApp} from \"../../components/script_plugins/MLSQLScriptPluginsApp\";\n\nconst initState = {\n    currentPage: \"login\",\n    logined: false\n}\n\nconst AppConsoleContext = React.createContext()\n\nfunction AppConsole(props) {\n    const {appInfo} = props\n    const [state, dispacher] = useReducerAsync(AppConsoleReducer, initState, AppConsoleHandlers)\n    const { currentPage, logined } = state\n\n    useEffect(() => {\n        dispacher(ActionMaker.buildEvent(AppConsoleActionNames.CHECK_LOGINED, {}))\n    }, [])\n\n    return (\n        <AppConsoleContext.Provider value={{ dispacher }}>            \n            <div className=\"app-console\">\n                <div className=\"app-console-header\">\n                    <ConsoleHeader appInfo={appInfo} userLogined={logined} isUserAdmin={UIMaker.isAdmin()} currentPage={currentPage}></ConsoleHeader>\n                </div>\n                <div className=\"app-console-main\">\n                    {currentPage === \"register\" && <Register></Register>}\n                    {currentPage !== \"register\" && !logined && <Login></Login>}\n                    {currentPage === \"console\" && logined && <MLSQLQueryApp></MLSQLQueryApp>}\n                    {currentPage === \"indexer_manager\" && logined && <IndexManager></IndexManager>}\n                    {currentPage === \"workshop\" && logined && <AnalysisWorkshop></AnalysisWorkshop>}\n                    {currentPage === \"admin\" && logined && UIMaker.isAdmin() && <AdminSetting></AdminSetting>}\n                    {currentPage === \"settings\" && logined && <Settings></Settings>}\n                    {currentPage === \"doc\" && <Doc></Doc>}\n                    {currentPage === \"engine\" && logined && <EngineUI></EngineUI>}\n                    {currentPage === \"scriptPlugin\" && logined && <MLSQLScriptPluginsApp></MLSQLScriptPluginsApp>}\n                </div>\n                <div className=\"app-console-footer\">\n                    <div style={{ bottom: \"100px\", textAlign: \"center\", width: \"100%\" }}>\n                        MLSQL Licensed under the Apache License, Version 2.0. @<a className=\"copyright\"\n                            href=\"http://www.miitbeian.gov.cn/\">浙ICP备18052520号</a>\n                        <div>@<a target=\"_blank\"\n                            href=\"http://www.beian.gov.cn/portal/registerSystemInfo?recordcode=33010802009683\"><img\n                                src=\"\" />浙公网安备 33010802009683号</a></div>\n\n                    </div>\n                </div>\n            </div>\n\n        </AppConsoleContext.Provider>\n    )\n}\nexport { AppConsole, AppConsoleContext }","import { ActionProxy } from \"../../../../backend_service/ActionProxy\"\nimport RemoteAction from \"../../../../backend_service/RemoteAction\"\nimport ActionMaker from \"../../../ActionMaker\"\n\nexport const {handler:AddEngineActionHandler,action:AddEngineAction} = ActionMaker.buildHandler(async (action)=>{\n    const client = new ActionProxy()\n    const { name, url } = action.data    \n    const res = await client.post(RemoteAction.ENGINE_ADD, { name, url })\n    if (res.status !== 200) {\n        return {            \n            data: {\n                error: JSON.parse(res.content).msg\n            }\n        }\n    }        \n    return {        \n        data: {\n            error: undefined,\n            current: action.__state.current + 1  \n        }\n    }    \n})\n","import { AppSetupEventConst } from \"./AppSetupReducer\"\nimport ActionMaker from \"../../../ActionMaker\"\n\nexport const {handler:SkipAddEngineActionHandler,action:SkipAddEngineAction} = ActionMaker.buildHandler(async (action) => {        \n    return {\n        data: {\n            error: undefined,\n            current: action.__state.current + 1            \n        }\n    }\n})","import { RegisterAction, RegisterActionHandler } from \"./RegisterAction\"\nimport { AddEngineActionHandler, AddEngineAction } from \"./AddEngineAction\"\nimport { SkipAddEngineActionHandler, SkipAddEngineAction } from \"./SkipAddEngineAction\"\n\nclass AppSetupActionNames {\n    static registerAdmin=\"registerAdmin\"\n    static addEngine = \"addEngine\"\n    static skipAddEngine = \"skipAddEngine\"\n\n}\nconst AppSetupReducerHandlers = {\n    [AppSetupActionNames.registerAdmin]: RegisterActionHandler,\n    [AppSetupActionNames.addEngine]: AddEngineActionHandler,\n    [AppSetupActionNames.skipAddEngine]: SkipAddEngineActionHandler\n}\n\nfunction AppSetupReducer(state, action) {\n    switch (action.type) {\n        case AppSetupActionNames.registerAdmin:\n            return RegisterAction(state, action.data)\n        case AppSetupActionNames.addEngine:\n            return AddEngineAction(state, action.data)\n        case AppSetupActionNames.skipAddEngine:\n            return SkipAddEngineAction(state, action.data)\n        default:\n            return state;\n    }\n}\n\nexport {\n    AppSetupActionNames,AppSetupReducerHandlers, AppSetupReducer\n}\n","import React, { useState, useContext, useEffect } from 'react';\nimport { Steps, Divider, PageHeader, Input, Form, Card, Button } from 'antd';\nimport { AppSetupContext } from '../app_setup';\nimport { AppSetupActionNames } from '../actions/app/AppSetupReducer';\nimport UIMaker from '../../UIMaker';\n\n\nfunction StepUserPassword() {\n\n    const { dispacher } = useContext(AppSetupContext)\n    const { formItemLayout, tailLayout } = UIMaker.formLayout1()\n\n    return <Form {...formItemLayout} className=\"login-form\" onFinish={(values) => {\n        dispacher({\n            type: AppSetupActionNames.registerAdmin,\n            data: values\n        })\n    }}>        \n\n        <Form.Item\n            label=\"UserName\"\n            name=\"userName\"\n            rules={[\n                {\n                    required: true,\n                    message: 'Please input your username!',\n                },\n            ]}\n        >\n            <Input/>\n        </Form.Item>\n        <Form.Item\n            label=\"Password\"\n            name=\"password\"\n            rules={[\n                {\n                    required: true,\n                    message: 'Please input your password!',\n                },\n            ]}\n        >\n            <Input.Password />\n        </Form.Item>\n        <Form.Item\n            label=\"Repeated Password\"\n            name=\"password2\"\n            rules={[\n                {\n                    required: true,\n                    message: 'Please input your password!',\n                },\n            ]}\n        >\n            <Input.Password />\n        </Form.Item>\n        <Form.Item {...tailLayout}>\n            <Button type=\"primary\" htmlType=\"submit\">\n                Go\n        </Button>\n        </Form.Item>\n    </Form>\n}\n\nexport default StepUserPassword","import React, { useState, useContext, useEffect } from 'react';\nimport { Steps, Divider, PageHeader, Input, Form, Card, Button } from 'antd';\nimport { AppSetupContext } from '../app_setup';\nimport { AppSetupActionNames } from '../actions/app/AppSetupReducer';\nimport UIMaker from '../../UIMaker';\n\n\nfunction AddEngines() {\n\n    const { dispacher } = useContext(AppSetupContext)\n    const {formItemLayout,tailLayout} = UIMaker.formLayout1()\n    const requireField = { required: true,\n        message: 'required'}\n\n    return <Form {...formItemLayout} className=\"login-form\" onFinish={(values) => {\n        dispacher({\n            type: AppSetupActionNames.addEngine,\n            data: values\n        })\n    }}>\n        <Form.Item\n            label=\"Engine Name\"\n            name=\"name\"\n            rules={[requireField]}\n        >\n            <Input />\n        </Form.Item>\n\n        <Form.Item\n            label=\"Engine Url\"\n            name=\"url\"\n            rules={[requireField]}\n        >\n            <Input/>\n        </Form.Item>\n\n        <Form.Item\n            label=\"Access Token\"\n            name=\"accessToken\"            \n        >\n            <Input/>\n        </Form.Item>\n\n        <Form.Item {...tailLayout}>\n            <Button type=\"primary\" htmlType=\"submit\">\n                Go\n        </Button>\n        <Divider type=\"vertical\"></Divider>\n        <Button onClick={\n            (e)=>{\n              e.preventDefault()              \n              dispacher({\n                type: AppSetupActionNames.skipAddEngine,\n                data: {}\n            })\n            }\n        } htmlType=\"submit\">\n                Skip\n        </Button>\n        </Form.Item>\n    </Form>\n}\n\nexport default AddEngines","import { AppEventConst } from \"./AppReducer\"\nimport ActionMaker from \"../../ActionMaker\"\n\nexport const {handler: AppConfiguredActionHandler,action:AppConfiguredAction} = ActionMaker.buildHandler((action) => {\n    return { data: action.data }\n})\n\nexport  const {handler: GoAdminActionHandler,action: GoAdminAction} = ActionMaker.buildHandler((action) => {\n    return { data: {appConfigured: true}}\n})\n\nexport  const {handler:GoConsoleActionHandler,action: GoConsoleAction} = ActionMaker.buildHandler((action) => {\n    return { data: {appConfigured: true} }\n})\n\n","import { GoConsoleAction, GoAdminActionHandler, GoConsoleActionHandler, GoAdminAction, AppConfiguredAction,AppConfiguredActionHandler } from \"./go\"\n\nclass AppActionNames {\n    \n    static GO_CONSOLE = \"goConsole\"\n    static GO_ADMIN = \"goAdmin\"\n    static appConfigured = \"appConfigured\"\n}\n\nconst AppReducerHandlers = {\n    [AppActionNames.GO_ADMIN]: GoAdminActionHandler,\n    [AppActionNames.GO_CONSOLE]: GoConsoleActionHandler,\n    [AppActionNames.appConfigured]: AppConfiguredActionHandler,\n}\n\nfunction AppReducer(state, action) {    \n    switch (action.type) {\n        case AppActionNames.GO_ADMIN:\n            return GoAdminAction(state, action.data)\n        case AppActionNames.GO_CONSOLE:\n            return GoConsoleAction(state, action.data)\n        case AppActionNames.appConfigured:\n            return AppConfiguredAction(state, action.data)\n        default:\n            return state;\n    }\n}\n\nexport { AppActionNames, AppReducer, AppReducerHandlers }","import React, { useState, useContext, useEffect } from 'react';\nimport { Alert, Button, Form, Divider } from 'antd';\nimport UIMaker from '../../UIMaker';\nimport { AppContext } from '../../../App';\nimport { AppActionNames } from '../../app/actions/AppReducer';\n\n\nfunction Done() {\n\n    const { dispacher } = useContext(AppContext)    \n    const {formItemLayout,tailLayout} = UIMaker.formLayout1()\n    return <>\n        <Alert\n            message=\"Congratuation!\"\n            description=\"You have finished the setup of MLSQL Console.\"\n            type=\"success\"\n        />\n        <Divider></Divider>\n        <Form {...formItemLayout}>\n            <Form.Item {...tailLayout}>\n                <Button type=\"primary\" onClick={\n                    ()=>{                        \n                        dispacher({\n                            type: AppActionNames.GO_ADMIN,\n                            data: {}\n                        })\n                    }\n                }>Go to Admin Page</Button>\n                <Divider type=\"vertical\" />\n                <Button onClick={\n                    ()=>{\n                        dispacher({\n                            type: AppActionNames.GO_CONSOLE,\n                            data: {}\n                        })\n                    }\n                }>Go to Console Page</Button>\n            </Form.Item>\n\n        </Form>\n    </>\n}\n\nexport default Done","import React, { useState, useReducer, useEffect } from 'react';\nimport { AppSetupReducer, AppSetupReducerHandlers } from './actions/app/AppSetupReducer';\nimport { Steps, Divider, PageHeader, Alert, Form, Card, Button } from 'antd';\nimport styled from \"styled-components\"\nimport StepUserPassword from './pages/StepUserPassword';\nimport AddEngines from './pages/AddEngines'\nimport { useReducerAsync } from \"use-reducer-async\"\nimport Done from './pages/Done';\nconst { Step } = Steps;\n\nconst AppSetupContainer = styled.div`\ndisplay: flex;\nflex-direction: column;\nwidth:100%;\njustify-content:center;\n align-items:  center;\n`\nconst AppSetupHeader = styled.div`\n  width:100%;\n  margin-top:6px;\n`\n\nconst AppSetupBody = styled.div`\n width:100%;\n display:flex;\n max-width: 800px;\n flex-direction: column;\n`\nconst initState = {\n    error: undefined,\n    current: 0\n}\nconst AppSetupContext = React.createContext()\n\nfunction AppSetup() {\n\n    const [state, dispacher] = useReducerAsync(AppSetupReducer, initState, AppSetupReducerHandlers)\n\n    const { error, current } = state\n\n    return (\n        <AppSetupContext.Provider value={{ dispacher }}>\n            <AppSetupContainer>\n                <AppSetupHeader>\n                    <PageHeader title=\"Setup MLSQL Console in 2 Steps\"></PageHeader>\n                </AppSetupHeader>\n                <Divider></Divider>\n                <AppSetupBody>\n                    <Steps current={current}>\n                        <Step title=\"Admin User/Password\" description=\"Setup Admin accout\" />\n                        <Step title=\"Add Engines\" description=\"Add default MLSQL Engine\" />\n                        <Step title=\"Done\" description=\"Congratuation\" />\n                    </Steps>\n                    <Divider></Divider>\n                    {error && <Alert\n                        message=\"Message\"\n                        description={error}\n                        type=\"error\"\n                        closable\n                    />}\n                    {\n                        current === 0 && <Card>\n                            <StepUserPassword></StepUserPassword>\n                        </Card>\n                    }\n                    {\n                        current === 1 && <Card>\n                            <AddEngines></AddEngines>\n                        </Card>\n                    }\n                    {\n                        current === 2 && <Card>\n                            <Done></Done>\n                        </Card>\n                    }\n                </AppSetupBody>\n\n            </AppSetupContainer>\n        </AppSetupContext.Provider>\n    )\n}\nexport default AppSetup\nexport {\n    AppSetupContext\n}","const en_US = {\n    login: \"Login\",\n    register: \"Register\",\n    console: \"Console\",\n    analysis_workshop: \"Analysis Workshop\",\n    settings: \"Settings\",\n    admin: \"Admin\",\n    more: \"More\",\n    apply: \"Apply\",\n    set_default_backend: \"Set Default Backend\",\n    set_default_backend_error: \"Please select at least one engine\",\n    set_engine: \"Set Engine\",\n    curent_value: \"Current Value\",\n    choose: \"Choose\",\n    done: \"Done\",\n    congratulation: \"Congratulation\",\n    set_timeout: \"Set Timout\",\n    set_apply_timeout: \"Set  [Apply] Timeout（Unit: Second）\",\n    table_workshop: \"Table Workshop\",\n    delta_lake: \"DeltaLake\",\n    file_system: \"FileSystem\",\n    project: \"Project\",\n    filter: \"Filter\",\n    join: \"Join\",\n    order: \"Order\",\n    window: \"Window\",\n    dash: \"Dash\",\n    agg: \"Agg\",\n    limit: \"Limit\",\n    select_columns: \"Select Columns\",\n    rename_columns: \"Rename Columns\",\n    transform_columns: \"Transform Columns\",\n    cast_columns_type: \"Cast Column Type\",\n    hive: \"Hive\",\n    operate_panel: \"Operate Panel\",\n    data_panel: \"Data Panel\",\n    user_settings: \"User Settings\",\n    change_password: \"Change Password\",\n    team: \"Team\",\n    team_manager: \"Team Control\",\n    datasource: \"Data Source\",\n    analysis_range: \"Select Table Range\",\n    table_start: \"Select start value\",\n    table_end: \"Select end value\",\n    table_random: \"Select values\",\n    or: \"Or\",\n    no_partition_msg: \"This table have no partition message. Please click Ok.\",\n    ds_mysql: \"MySQL\",\n    host: \"Host\",\n    port: \"Port\",\n    db: \"Database Name\",\n    user: \"User Name\",\n    password: \"Password\",\n    alias: \"Alias\",\n    connect_mysql: \"Connect MySQL\",\n    list_mysql: \"MySQL List\",\n    mysql: \"MySQL\",\n    partitionColumn:\"partitionColumn\",\n    lowerBound:\"lowerBound\",\n    upperBound:\"upperBound\",\n    numPartitions:\"numPartitions\",\n    mysql_parallel:\"MySQL Parallel\",    \n    no_mysql_parallel:\"No number columns in this table, Please click [Ok]\",\n    add: \"添加\",\n    as: \"为\",\n    choose_json_field:\"Choose Json Field\",\n    json_fields: \"Expand Json\",\n    union:\"Union\",\n    aliyun_message:\"Aliyun Message\",\n    submit_task_success:\"任务提交成功\",\n}\nexport default en_US","import React, { useState, useCallback, useEffect } from 'react';\nimport './App.scss';\nimport { AppConsole, AppConsoleContext } from './v1/app_console/AppConsole'\nimport { ActionProxy } from './backend_service/ActionProxy';\nimport RemoteAction from './backend_service/RemoteAction';\nimport AppSetup from './v1/app_setup/app_setup';\nimport { useReducerAsync } from 'use-reducer-async'\nimport { AppReducer, AppReducerHandlers, AppActionNames } from './v1/app/actions/AppReducer';\nimport SpinBox from './v1/SpinBox';\nimport { ConfigProvider } from 'antd';\nimport {IntlProvider} from \"react-intl\"\nimport zh_CN from './locale/zh_CN';\nimport en_US from './locale/en_US';\nimport AntZhCN from 'antd/lib/locale-provider/zh_CN';\nimport AntEnUS from 'antd/lib/locale-provider/en_US';\n\nconst initState = {\n    appConfigured: false,\n    loading: true,\n    lang: \"en\",\n    enableConsole: false\n}\nconst AppContext = React.createContext()\nfunction App() {\n    const [state, dispacher] = useReducerAsync(AppReducer, initState, AppReducerHandlers)\n    const { appConfigured, loading,lang,enableConsole } = state\n\n    async function getAppInfo() {\n        const client = new ActionProxy()\n        const appInfo = await client.get(RemoteAction.APP_INFO, {})\n        if (appInfo.status === 200) {\n            dispacher({\n                type: AppActionNames.appConfigured,\n                data: { \n                    appConfigured: appInfo.content.configured, \n                    enableConsole: appInfo.content.console || false, \n                    loading: false }\n            })\n        }\n\n    }\n\n    useEffect(() => {\n        getAppInfo()\n    }, [])\n\n    return (\n        <IntlProvider locale={lang} messages={en_US}>\n        <ConfigProvider locale={AntEnUS}>\n            <AppContext.Provider value={{ dispacher }}>                \n                {loading && <SpinBox />}\n                {!loading && !appConfigured && <AppSetup />}\n                {!loading && appConfigured && <AppConsole appInfo={{enableConsole}}/>}\n            </AppContext.Provider>\n        </ConfigProvider>\n        </IntlProvider>\n\n    )\n}\nexport default App\nexport { AppContext }","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport \"antd/dist/antd.css\";\nimport './mlsql.scss';\nimport './index.scss';\n\nimport * as serviceWorker from './serviceWorker';\nimport App from \"./App\";\n\nReactDOM.render(\n    <App/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","class ActionMaker {\n    static buildHandler(eventCallBack) {\n        return {\n            handler: ({ dispatch, getState, signal }) => {\n                const dispacher = dispatch\n                return async (action) => {\n                    const data = await eventCallBack({ ...action, __state: getState() })\n                    dispacher({\n                        type: action.type,\n                        ...data\n                    })\n                }\n            },\n            action: (state, data) => {\n                return { ...state, ...data }\n            }\n        }\n    }\n\n    static buildEvent(name, params) {\n        return {\n            type: name,\n            data: params\n        }\n    }\n}\n\nexport default ActionMaker","export const BACKEND_SERVER = \"\";\nexport const BACKEND_URL = BACKEND_SERVER;\n\n\nexport class Method{\n    static GET = \"get\"\n    static POST = \"post\"\n    static PUT = \"put\"\n    static DELETE  = \"delete\"    \n}\n\nexport const Status = {\n    Success: 200,\n    BadRequest: 400,\n    Unauthorized: 401,\n    Forbidden: 404,\n    ServerError: 500\n}\n\nexport const AccessToken = {\n    name: \"access-token\"\n}\n\n"],"sourceRoot":""}